<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>11-mysql-主从复制高级进阶</title>
      <link href="/2020/05/19/11-mysql-zhu-cong-fu-zhi-gao-ji-jin-jie/"/>
      <url>/2020/05/19/11-mysql-zhu-cong-fu-zhi-gao-ji-jin-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="1-延时从库"><a href="#1-延时从库" class="headerlink" title="1-延时从库"></a>1-延时从库</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1-介绍"></a>1-介绍</h2><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200515154534-1590764844473.png" alt="QQ图片20200515154534"></p><pre class="line-numbers language-powershell"><code class="language-powershell">普通的主从复制，处理物理故障损坏比较擅长。如果主库出现了DROP DATABASE操作。延时从库： 主库做了某项操作之后，从库延时多长时间回放（SQL）。可以处理逻辑损坏。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2-配置"></a>2-配置</h2><pre class="line-numbers language-mysql"><code class="language-mysql">mysql>stop slave;mysql>CHANGE MASTER TO MASTER_DELAY = 300;mysql>start slave;mysql> show slave status \GSQL_Delay: 300SQL_Remaining_Delay: NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-监控方法"><a href="#3-监控方法" class="headerlink" title="3- 监控方法"></a>3- 监控方法</h2><h3 id="方法一：-有没有延时"><a href="#方法一：-有没有延时" class="headerlink" title="方法一： 有没有延时"></a>方法一： 有没有延时</h3><pre class="line-numbers language-shell"><code class="language-shell">Seconds_Behind_Master: 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="方法二：主库："><a href="#方法二：主库：" class="headerlink" title="方法二：主库："></a>方法二：主库：</h3><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> show master status ;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000004 |   151847 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="从库："><a href="#从库：" class="headerlink" title="从库："></a>从库：</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock -uroot -p123  -e "show slave status \G"|grep "Master_Log"</span>已经拿到的主库日志量<span class="token punctuation">(</span>master<span class="token punctuation">.</span>info<span class="token punctuation">)</span>：判断传输有没有延时Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000004Read_Master_Log_Pos: 151847已经执行的主库日质量<span class="token punctuation">(</span>relay<span class="token operator">-</span>log<span class="token punctuation">.</span>info<span class="token punctuation">)</span>: 判断回放有没有延时Relay_Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000004Exec_Master_Log_Pos: 141847计算主从复制延时日志量。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-导致延时的主要原因"><a href="#4-导致延时的主要原因" class="headerlink" title="4-导致延时的主要原因"></a>4-导致延时的主要原因</h2><pre class="line-numbers language-powershell"><code class="language-powershell">网络延时  主从硬件、参数等不一致从库太多。主库压力大。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">主库 （1） binlog记录不及时。mysql> <span class="token function">select</span> @@sync_binlog<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> @@sync_binlog <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span>             1 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span>参数说明：        1 ： 每次事务提交都立即刷新binlog到磁盘。        0 ： 由操作系统决定，什么刷新磁盘。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（2）-DUMP线程串行工作。"><a href="#（2）-DUMP线程串行工作。" class="headerlink" title="（2） DUMP线程串行工作。"></a>（2） DUMP线程串行工作。</h3><pre class="line-numbers language-powershell"><code class="language-powershell">大事务、并发事务高、DDL解决办法：     5<span class="token punctuation">.</span>6版本加入GTID复制模式，但手工配置。DUMP在传输日志时可以并发。    5<span class="token punctuation">.</span>7版本GTID做了增强，不手工开启也自动维护匿名的GTID信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（3）怎么判断是主库导致的延时？"><a href="#（3）怎么判断是主库导致的延时？" class="headerlink" title="（3）怎么判断是主库导致的延时？"></a>（3）怎么判断是主库导致的延时？</h3><pre class="line-numbers language-powershell"><code class="language-powershell">主库： mysql> show master status <span class="token punctuation">;</span>从库： mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock <span class="token operator">-</span>uroot <span class="token operator">-</span>p123  <span class="token operator">-</span>e <span class="token string">"show slave status \G"</span><span class="token punctuation">|</span>grep <span class="token string">"Master_Log"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="从库方面"><a href="#从库方面" class="headerlink" title="从库方面"></a>从库方面</h3><pre class="line-numbers language-powershell"><code class="language-powershell">IO线程： 从库IO比较慢。relay 落地慢。可以将realy放到 SSD<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="SQL-线程：-串行回放。"><a href="#SQL-线程：-串行回放。" class="headerlink" title="SQL 线程： 串行回放。"></a>SQL 线程： 串行回放。</h4><pre class="line-numbers language-powershell"><code class="language-powershell">主库可以并行事务，从库SQL线程串行回放。所以：并发事务高、大事务、DDL解决方法：        5<span class="token punctuation">.</span>6 版本： 开启GTID后，可以多SQL线程，只能针对不同的库的事务进行并行SQL恢复。       5<span class="token punctuation">.</span>7 版本： 做了增强，基于逻辑时钟的并行回放。MTS。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="的从库并发配置方法。开了GTID的前提-前面gutid-后面逻辑时钟"><a href="#的从库并发配置方法。开了GTID的前提-前面gutid-后面逻辑时钟" class="headerlink" title="的从库并发配置方法。开了GTID的前提  前面gutid 后面逻辑时钟"></a>的从库并发配置方法。开了GTID的前提  前面gutid 后面逻辑时钟</h4><pre class="line-numbers language-mysql"><code class="language-mysql">gtid_mode=ONenforce_gtid_consistency=ONlog_slave_updates=ONslave-parallel-type=LOGICAL_CLOCKslave-parallel-workers=16  #线程数量master_info_repository=TABLErelay_log_info_repository=TABLE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="已经执行的主库日质量-relay-log-info-判断回放有没有延时"><a href="#已经执行的主库日质量-relay-log-info-判断回放有没有延时" class="headerlink" title="已经执行的主库日质量(relay-log.info): 判断回放有没有延时"></a>已经执行的主库日质量(relay-log.info): 判断回放有没有延时</h3><pre><code>Relay_Master_Log_File: mysql-bin.000004Exec_Master_Log_Pos: 141847</code></pre><h2 id="5-延时从库的应用-故障模拟"><a href="#5-延时从库的应用-故障模拟" class="headerlink" title="5-延时从库的应用-故障模拟"></a>5-延时从库的应用-故障模拟</h2><h3 id="1-配置方法："><a href="#1-配置方法：" class="headerlink" title="1-配置方法："></a>1-配置方法：</h3><pre class="line-numbers language-mysql"><code class="language-mysql">mysql>stop slave;mysql>CHANGE MASTER TO MASTER_DELAY = 300;·    change master to master_delaymysql>start slave;mysql> show slave status \GSQL_Delay: 300SQL_Remaining_Delay: NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-恢复思路"><a href="#2-恢复思路" class="headerlink" title="2-恢复思路"></a>2-恢复思路</h3><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 先停业务，挂维护页。    10:102<span class="token punctuation">.</span> 停从库SQL线程。   stop slave sql_thread<span class="token punctuation">;</span>  10:10   看relay<span class="token punctuation">.</span>info <span class="token operator">--</span>-<span class="token operator">-</span>> 位置点。   stop slave <span class="token punctuation">;</span>   <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>   主库发生了逻辑损坏（DROP，truncate）时，可以使用延时从库快速恢复数据。    2小时延时      10：00  做的drop database A<span class="token punctuation">;</span>1<span class="token punctuation">.</span> 及时监控故障： 主库 10:05发现故障，从库此时8:05数据状态2<span class="token punctuation">.</span> 立即将从库的SQL线程关闭。 需要对A业务挂维护页。3<span class="token punctuation">.</span> 停止所有线程。4<span class="token punctuation">.</span> 在延时从。恢复A库数据   手工模拟SQL线程工作，直到drop之前位置点。   SQL线程上次执行到的位置<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>》drop之前   relay<span class="token punctuation">.</span>info   <span class="token operator">--</span>-<span class="token operator">-</span>> 分析drop位置点   <span class="token operator">--</span><span class="token operator">-</span>》 截取relaylog日志<span class="token operator">--</span>-<span class="token operator">-</span>》 source<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-故障模拟及恢复"><a href="#3-故障模拟及恢复" class="headerlink" title="3-故障模拟及恢复"></a>3-故障模拟及恢复</h3><pre class="line-numbers language-powershell"><code class="language-powershell">故障模拟：   主库create database delaydb charset utf8mb4<span class="token punctuation">;</span>use delaydb<span class="token punctuation">;</span>create table t1<span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t1 values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>commit<span class="token punctuation">;</span>drop database delaydb<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-恢复过程："><a href="#4-恢复过程：" class="headerlink" title="4-恢复过程："></a>4-恢复过程：</h3><p>==查看 日志是否接收完毕== </p><pre><code>1. 从库：  stop slave sql_thread;</code></pre><h4 id="2-截取日志："><a href="#2-截取日志：" class="headerlink" title="2-截取日志："></a>2-截取日志：</h4><pre class="line-numbers language-scheme"><code class="language-scheme">>show relaylog   events in <span class="token string">"db01-relay-bin.000002"</span><span class="token comment" spellcheck="true">;   </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">起点: SQL上次执行到的位置点，Relay_Log_File: db01<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token punctuation">.</span>000004Relay_Log_Pos: 320终点： drop 之前 >show relaylog   events in <span class="token string">"db01-relay-bin.000002"</span><span class="token punctuation">;</span>    db01<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token punctuation">.</span>000004 <span class="token punctuation">|</span> 1006 <span class="token punctuation">|</span> Query          <span class="token punctuation">|</span>         7 <span class="token punctuation">|</span>      152967 <span class="token punctuation">|</span> drop databas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 tmp]# mysqlbinlog --start-position=320 --stop-position=1006 /data/3309/data/db01-relay-bin.000004 >/tmp/bin.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-从库恢复"><a href="#3-从库恢复" class="headerlink" title="3-从库恢复"></a>3-从库恢复</h4><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> reset slave all<span class="token punctuation">;</span>mysql> <span class="token function">set</span> sql_log_bin=0<span class="token punctuation">;</span>mysql> source <span class="token operator">/</span>tmp<span class="token operator">/</span>bin<span class="token punctuation">.</span>sql<span class="token punctuation">;</span>mysql> <span class="token function">set</span> sql_log_bin=1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> show  tables<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> Tables_in_delaydb <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> t1                <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span>mysql> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> id   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span>    1 <span class="token punctuation">|</span><span class="token punctuation">|</span>    2 <span class="token punctuation">|</span><span class="token punctuation">|</span>    3 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-过滤复制"><a href="#2-过滤复制" class="headerlink" title="2-过滤复制"></a>2-过滤复制</h1><h2 id="1-配置方法"><a href="#1-配置方法" class="headerlink" title="1-配置方法"></a>1-配置方法</h2><pre class="line-numbers language-powershell"><code class="language-powershell">主库： 白名单: binlog_do_db=world黑名单： binlog_ignore_db 从库：库级别： replicate_do_db=world  replicate_ignore_db=xxxx 表级别：replicate_do_table=world<span class="token punctuation">.</span>t1replicate_ignore_table=表级别： 模糊匹配replicate_wild_do_table=world<span class="token punctuation">.</span>t<span class="token operator">*</span>  模糊 表replicate_wild_ignore_table=例子：  只复制oldboy和oldguo库的数据到3309vim <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfreplicate_do_db=oldguoreplicate_do_db=oldboy<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># systemctl restart mysqld3309</span>mysql> show slave status\GReplicate_Do_DB: oldguo<span class="token punctuation">,</span>oldboy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-方法一："><a href="#2-方法一：" class="headerlink" title="2-方法一："></a>2-方法一：</h2><pre class="line-numbers language-powershell"><code class="language-powershell">修改配置文件并重启vim <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf replicate_do_db=worldreplicate_do_db=oldboysystemctl restart mysqld3308<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-方法二："><a href="#3-方法二：" class="headerlink" title="3-方法二："></a>3-方法二：</h2><pre class="line-numbers language-csharp"><code class="language-csharp">db01_5<span class="token number">.7</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>help change<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">STOP SLAVE SQL_THREAD;CHANGE REPLICATION FILTER REPLICATE_DO_DB = (oldguo, oldboy);START  SLAVE SQL_THREAD;-------stop slave sql_thread;change replication filter replicate_do_db = (oldguo, oldboy);start  slave sql_thread;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-半同步复制"><a href="#3-半同步复制" class="headerlink" title="3-半同步复制"></a>3-半同步复制</h1><pre class="line-numbers language-powershell"><code class="language-powershell">在 Classic replication :     传统异步非GTID复制工作模型下，会导致主从数据不一致情况。5<span class="token punctuation">.</span>5 版本为了保证主从数据的一致性问题。加入了半同步复制的组件（插件）    在主从结构中，都加入了半同步复制的插件。控制从库IO是否将relaylog落盘，一旦落盘通过插件返回ACK给主库ACK_rec。接受到ACK之后，主库的事务才能提交成功。在默认情况下，如果超过10秒没有返回ACK，此次复制行为会切换为异步复制。在 5<span class="token punctuation">.</span>6 ，5<span class="token punctuation">.</span>7当中也加入了一些比较好的特性（After commit ， after sync ，无损<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>），也不能完全保证5个9以上的数据一致。如果生产业务比较关注主从最终一致（金融类）。我们推荐可以使用MGR的架构，或者PXC等一致性架构。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-GTID复制"><a href="#4-GTID复制" class="headerlink" title="4-GTID复制"></a>4-GTID复制</h1><pre class="line-numbers language-powershell"><code class="language-powershell">作用： 主要保证主从复制中的高级的特性。GTID：5<span class="token punctuation">.</span>6 版本出现没有默认开启，5<span class="token punctuation">.</span>7 中即使不开启也有匿名的GTID记录。      DUMP传输可以并性，SQL线程并发回放提供了。5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>17<span class="token operator">+</span>的版本以后几乎都是GTID模式了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="1-搭建GTID："><a href="#1-搭建GTID：" class="headerlink" title="1-搭建GTID："></a>1-搭建GTID：</h2><pre class="line-numbers language-powershell"><code class="language-powershell">准备三台虚拟机    IP：      51 52 53       hostname: db01  db02 db03    防火墙关闭    能够实现远程xshell链接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-清理环境"><a href="#1-清理环境" class="headerlink" title="1-清理环境"></a>1-清理环境</h3><pre class="line-numbers language-powershell"><code class="language-powershell">pkill mysqld<span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span>/<span class="token operator">*</span> <span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog/<span class="token operator">*</span> mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span>/<span class="token operator">*</span>  2<span class="token punctuation">.</span> 清理环境<span class="token punctuation">(</span>三个节点都做<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-生成配置文件"><a href="#2-生成配置文件" class="headerlink" title="2-生成配置文件"></a>2-生成配置文件</h3><pre class="line-numbers language-powershell"><code class="language-powershell">主库db01：<span class="token function">mv</span> <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token operator">/</span>tmp<span class="token function">cat</span> > <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf &lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockserver_id=51port=3306secure<span class="token operator">-</span>file<span class="token operator">-</span>priv=<span class="token operator">/</span>tmpautocommit=0log_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowgtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1<span class="token namespace">[mysql]</span>prompt=db01 <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span>>EOF<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>slave1<span class="token punctuation">(</span>db02<span class="token punctuation">)</span>：<span class="token function">mv</span> <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token operator">/</span>tmp<span class="token function">cat</span> > <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf &lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockserver_id=52port=3306secure<span class="token operator">-</span>file<span class="token operator">-</span>priv=<span class="token operator">/</span>tmpautocommit=0log_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowgtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1<span class="token namespace">[mysql]</span>prompt=db02 <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span>>EOFslave2<span class="token punctuation">(</span>db03<span class="token punctuation">)</span>：<span class="token function">mv</span> <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token operator">/</span>tmp<span class="token function">cat</span> > <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf &lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockserver_id=53port=3306secure<span class="token operator">-</span>file<span class="token operator">-</span>priv=<span class="token operator">/</span>tmpautocommit=0log_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowgtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1<span class="token namespace">[mysql]</span>prompt=db03 <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span>>EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-初始化数据-三个节点都做"><a href="#3-初始化数据-三个节点都做" class="headerlink" title="3-初始化数据(三个节点都做)"></a>3-初始化数据(三个节点都做)</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure <span class="token operator">--</span>user=mysql <span class="token operator">--</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql  <span class="token operator">--</span>datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-启动数据库"><a href="#4-启动数据库" class="headerlink" title="4-启动数据库"></a>4-启动数据库</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld <span class="token function">start</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-构建主从："><a href="#5-构建主从：" class="headerlink" title="5-构建主从："></a>5-构建主从：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">主库创建用户（db01）db01 <span class="token namespace">[mysql]</span>>grant replication slave on <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> to repl@<span class="token string">'10.1.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="6-从库开启主从"><a href="#6-从库开启主从" class="headerlink" title="6-从库开启主从"></a>6-从库开启主从</h3><pre class="line-numbers language-powershell"><code class="language-powershell">52\53:change master to master_host=<span class="token string">'10.0.1.51'</span><span class="token punctuation">,</span>master_user=<span class="token string">'repl'</span><span class="token punctuation">,</span>master_password=<span class="token string">'123'</span> <span class="token punctuation">,</span>MASTER_AUTO_POSITION=1<span class="token punctuation">;</span><span class="token function">start</span> slave<span class="token punctuation">;</span>说明：gtid的主从复制  ，第一次开启的时候，读取relaylog的最后gtid<span class="token operator">+</span>读取gtid_purge参数，确认复制起点。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-MHA高可用技术"><a href="#5-MHA高可用技术" class="headerlink" title="5- MHA高可用技术"></a>5- MHA高可用技术</h1><h2 id="数据损坏的类型"><a href="#数据损坏的类型" class="headerlink" title="数据损坏的类型"></a>数据损坏的类型</h2><pre class="line-numbers language-powershell"><code class="language-powershell">物理损坏 ：磁盘、主机、程序、数据文件逻辑损坏 ：drop <span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="2-高可用解决方案选型依据：-全年无故障率"><a href="#2-高可用解决方案选型依据：-全年无故障率" class="headerlink" title="2. 高可用解决方案选型依据： 全年无故障率"></a>2. 高可用解决方案选型依据： 全年无故障率</h4><hr><pre class="line-numbers language-powershell"><code class="language-powershell">无故障时间           故障时间                     解决方案99<span class="token punctuation">.</span>9<span class="token operator">%</span>                0<span class="token punctuation">.</span>1<span class="token operator">%</span>     = 525<span class="token punctuation">.</span>6  min        KA<span class="token operator">+</span>双主 ：人为干预 99<span class="token punctuation">.</span>99<span class="token operator">%</span>               0<span class="token punctuation">.</span>01<span class="token operator">%</span>    = 52<span class="token punctuation">.</span>56  min        MHA  ：半自动化  应用场景：比较适合非金融类互联网公司。 facebook MHA ，淘宝 TMHA  <span class="token operator">--</span>》polardb。 替代产品：  ORCH go语言。99<span class="token punctuation">.</span>999<span class="token operator">%</span>              0<span class="token punctuation">.</span>001<span class="token operator">%</span>   = 5<span class="token punctuation">.</span>256  min        PXC 、 MGR 、MGC应用场景： 金融类业务。99<span class="token punctuation">.</span>9999<span class="token operator">%</span>             0<span class="token punctuation">.</span>0001<span class="token operator">%</span>  = 0<span class="token punctuation">.</span>5256 min        自动化、云化、平台化<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p> <strong>MHA 软件结构</strong></p><hr><h2 id="1-manager-组件"><a href="#1-manager-组件" class="headerlink" title="1-manager 组件"></a>1-manager 组件</h2><pre class="line-numbers language-powershell"><code class="language-powershell">masterha_manger             启动MHA masterha_check_ssh          检查MHA的SSH配置状况 masterha_check_repl         检查MySQL复制状况，配置信息masterha_master_monitor     检测master是否宕机 masterha_check_status       检测当前MHA运行状态 masterha_master_switch      控制故障转移（自动或者手动）masterha_conf_host          添加或删除配置的server信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-node-组件"><a href="#2-node-组件" class="headerlink" title="2-node 组件"></a>2-node 组件</h2><pre class="line-numbers language-powershell"><code class="language-powershell">node 组件save_binary_logs            保存和复制master的二进制日志 apply_diff_relay_logs       识别差异的中继日志事件并将其差异的事件应用于其他的purge_relay_logs            清除中继日志（不会阻塞SQL线程）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-MHA基础架构规划和实施"><a href="#3-MHA基础架构规划和实施" class="headerlink" title="3-MHA基础架构规划和实施"></a>3-MHA基础架构规划和实施</h2><h3 id="1-规划"><a href="#1-规划" class="headerlink" title="1-规划:"></a>1-规划:</h3><table><thead><tr><th>主库</th><th>10.0.1.51</th><th>node</th></tr></thead><tbody><tr><td><strong>从库</strong>:</td><td><strong>10.0.1.52</strong></td><td><strong>node</strong></td></tr><tr><td><strong>从库:_兼  _管理节点</strong></td><td>10.0.1.53</td><td><strong>node    manager</strong></td></tr></tbody></table><hr><hr><p>==准备环境（略。1主2从GTID）==</p><h3 id="2-配置关键程序软连接（所有节点）"><a href="#2-配置关键程序软连接（所有节点）" class="headerlink" title="2.配置关键程序软连接（所有节点）"></a>2.配置关键程序软连接（所有节点）</h3><pre class="line-numbers language-powershell"><code class="language-powershell">ln <span class="token operator">-</span>s <span class="token operator">/</span>app<span class="token operator">/</span>database<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqlbinlog    <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>mysqlbinlogln <span class="token operator">-</span>s <span class="token operator">/</span>app<span class="token operator">/</span>database<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysql          <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>mysql软件写死了必须做软链接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-配置各节点互信（密钥对）"><a href="#3-配置各节点互信（密钥对）" class="headerlink" title="3- 配置各节点互信（密钥对）"></a>3- 配置各节点互信（密钥对）</h3><pre class="line-numbers language-powershell"><code class="language-powershell">db01：<span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh ssh<span class="token operator">-</span>keygencd <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh <span class="token function">mv</span> id_rsa<span class="token punctuation">.</span>pub authorized_keys  <span class="token comment" spellcheck="true">#必须全部互信，自己链接自己也可以通</span>scp  <span class="token operator">-</span>r  <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh  10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:<span class="token operator">/</span>root scp  <span class="token operator">-</span>r  <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh  10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53:<span class="token operator">/</span>root 各节点验证db01:ssh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53 datedb02:ssh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53 datedb03:ssh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52 datessh 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53 date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-安装软件"><a href="#4-安装软件" class="headerlink" title="4-安装软件"></a>4-安装软件</h3><pre class="line-numbers language-powershell"><code class="language-powershell">下载mha软件mha官网：https:<span class="token operator">/</span><span class="token operator">/</span>code<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com<span class="token operator">/</span>archive<span class="token operator">/</span>p<span class="token operator">/</span>mysql<span class="token operator">-</span>master<span class="token operator">-</span>ha<span class="token operator">/</span>github下载地址：https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>yoshinorim<span class="token operator">/</span>mha4mysql<span class="token operator">-</span>manager<span class="token operator">/</span>wiki<span class="token operator">/</span>Downloads<span class="token comment" spellcheck="true"># 说明： </span>8<span class="token punctuation">.</span>0 的版本: 1<span class="token punctuation">.</span> 密码加密模式 sha2  <span class="token operator">--</span><span class="token operator">-</span>> native 2<span class="token punctuation">.</span> 使用0<span class="token punctuation">.</span>58 版本MHA软件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="所有节点安装Node软件依赖包"><a href="#所有节点安装Node软件依赖包" class="headerlink" title="所有节点安装Node软件依赖包"></a>所有节点安装Node软件依赖包</h5><pre class="line-numbers language-powershell"><code class="language-powershell">yum install perl<span class="token operator">-</span>DBD<span class="token operator">-</span>MySQL <span class="token operator">-</span>yrpm <span class="token operator">-</span>ivh mha4mysql<span class="token operator">-</span>node<span class="token operator">-</span>0<span class="token punctuation">.</span>56<span class="token operator">-</span>0<span class="token punctuation">.</span>el6<span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="在db01主库中创建mha需要的用户"><a href="#在db01主库中创建mha需要的用户" class="headerlink" title="在db01主库中创建mha需要的用户"></a>在db01主库中创建mha需要的用户</h4><pre class="line-numbers language-powershell"><code class="language-powershell">grant all privileges on <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> to mha@<span class="token string">'10.0.1.%'</span> identified by <span class="token string">'mha'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Manager软件安装（db03）"><a href="#Manager软件安装（db03）" class="headerlink" title="Manager软件安装（db03）"></a>Manager软件安装（db03）</h4><pre class="line-numbers language-powershell"><code class="language-powershell">yum install <span class="token operator">-</span>y perl<span class="token operator">-</span>Config<span class="token operator">-</span>Tiny epel<span class="token operator">-</span>release perl<span class="token operator">-</span>Log<span class="token operator">-</span>Dispatch perl<span class="token operator">-</span><span class="token keyword">Parallel</span><span class="token operator">-</span>ForkManager perl<span class="token operator">-</span>Time<span class="token operator">-</span>HiResrpm <span class="token operator">-</span>ivh mha4mysql<span class="token operator">-</span>manager<span class="token operator">-</span>0<span class="token punctuation">.</span>56<span class="token operator">-</span>0<span class="token punctuation">.</span>el6<span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="Manager配置文件准备-db03"><a href="#Manager配置文件准备-db03" class="headerlink" title="Manager配置文件准备(db03)"></a>Manager配置文件准备(db03)</h4><pre class="line-numbers language-powershell"><code class="language-powershell">mkdir <span class="token operator">-</span>p <span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token comment" spellcheck="true">#创建日志目录</span> mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token comment" spellcheck="true">#编辑mha配置文件</span><span class="token function">cat</span> > <span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf &lt;&lt;EOF<span class="token namespace">[server default]</span>manager_log=<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token operator">/</span>manager         <span class="token comment" spellcheck="true"># MHA的工作日志设置</span>manager_workdir=<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1             <span class="token comment" spellcheck="true"># MHA工作目录        </span>master_binlog_dir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog                <span class="token comment" spellcheck="true"># 主库的binlog目录</span>user=mha                                      <span class="token comment" spellcheck="true"># 监控用户                      </span>password=mha                                  <span class="token comment" spellcheck="true"># 监控密码</span>ping_interval=2                               <span class="token comment" spellcheck="true"># 心跳检测的间隔时间</span>repl_password=123                             <span class="token comment" spellcheck="true"># 复制用户</span>repl_user=repl                                <span class="token comment" spellcheck="true"># 复制密码</span>ssh_user=root                                 <span class="token comment" spellcheck="true"># ssh互信的用户</span><span class="token namespace">[server1]</span>                                     <span class="token comment" spellcheck="true"># 节点信息....</span>hostname=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51port=3306  <span class="token namespace">[server2]</span>            hostname=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52port=3306candidate_master=1<span class="token namespace">[server3]</span>no_master=1hostname=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53port=3306EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="状态检查（db03）"><a href="#状态检查（db03）" class="headerlink" title="状态检查（db03）"></a>状态检查（db03）</h4><pre class="line-numbers language-c#"><code class="language-c#">masterha_check_repl  --conf=/etc/mha/app1.cnf masterha_check_ssh   --conf=/etc/mha/app1.cnf <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-powershell"><code class="language-powershell">-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>masterha_check_ssh   <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>Mon May 18 12:45:26 2020 <span class="token operator">-</span> <span class="token namespace">[debug]</span>   ok<span class="token punctuation">.</span>Mon May 18 12:45:27 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span> All SSH connection tests passed successfully<span class="token punctuation">.</span><span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>masterha_check_repl  <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span> <span class="token operator">+</span>-<span class="token operator">-</span>10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>62<span class="token punctuation">(</span>10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>62:3306<span class="token punctuation">)</span> <span class="token operator">+</span>-<span class="token operator">-</span>10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>63<span class="token punctuation">(</span>10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>63:3306<span class="token punctuation">)</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span> Checking replication health on 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>62<span class="token punctuation">.</span><span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span>  ok<span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span> Checking replication health on 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>63<span class="token punctuation">.</span><span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span>  ok<span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[warning]</span> master_ip_failover_script is not defined<span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[warning]</span> shutdown_script is not defined<span class="token punctuation">.</span>Mon May 18 12:45:58 2020 <span class="token operator">-</span> <span class="token namespace">[info]</span> Got <span class="token keyword">exit</span> code 0 <span class="token punctuation">(</span>Not master dead<span class="token punctuation">)</span><span class="token punctuation">.</span>MySQL Replication Health is OK<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-开启MHA-manager"><a href="#5-开启MHA-manager" class="headerlink" title="5-开启MHA-manager"></a>5-开启MHA-manager</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token operator">!</span><span class="token namespace">[QQ图片20200518150423]</span><span class="token punctuation">(</span>tup<span class="token operator">/</span>QQ<span class="token operator">%</span>E5<span class="token operator">%</span>9B<span class="token operator">%</span>BE<span class="token operator">%</span>E7<span class="token operator">%</span>89<span class="token operator">%</span>8720200518150423<span class="token punctuation">.</span>png<span class="token punctuation">)</span>开启MHA<span class="token punctuation">(</span>db03<span class="token punctuation">)</span>：nohup masterha_manager <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>remove_dead_master_conf <span class="token operator">--</span>ignore_last_failover  &lt; <span class="token operator">/</span>dev<span class="token operator">/</span>null> <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token operator">/</span>manager<span class="token punctuation">.</span>log 2>&amp;1 &amp;3<span class="token punctuation">.</span>3<span class="token punctuation">.</span>8 查看MHA状态<span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># masterha_check_status --conf=/etc/mha/app1.cnf</span>app1 <span class="token punctuation">(</span>pid:4719<span class="token punctuation">)</span> is running<span class="token punctuation">(</span>0:PING_OK<span class="token punctuation">)</span><span class="token punctuation">,</span> master:10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-MHA工作原理"><a href="#4-MHA工作原理" class="headerlink" title="4-MHA工作原理"></a>4-MHA工作原理</h2><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200518150423-1590764844474.png" alt="QQ图片20200518150423"></p><h3 id="1-MHA的设计原理"><a href="#1-MHA的设计原理" class="headerlink" title="1-MHA的设计原理"></a>1-MHA的设计原理</h3><pre class="line-numbers language-powershell"><code class="language-powershell"> MHA的设计原理（Failover 过程）<span class="token comment" spellcheck="true"># 1. 启动MHA 软件 </span>nohup masterha_manager <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>remove_dead_master_conf <span class="token operator">--</span>ignore_last_failover  &lt; <span class="token operator">/</span>dev<span class="token operator">/</span>null> <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token operator">/</span>manager<span class="token punctuation">.</span>log 2>&amp;1 &amp;<span class="token comment" spellcheck="true"># 2. 监控  </span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>masterha_master_monitor ，每隔ping_interval秒探测1次，连续4次还没有，说明主库宕机。<span class="token comment" spellcheck="true"># 3. 选新主</span>3<span class="token punctuation">.</span>1 日志量 latest 3<span class="token punctuation">.</span>2 备选主 pref3<span class="token punctuation">.</span>3 哪些不被选主 badno_master=1log_bin 二进制日志没开check_slave_delay，如果从库落后主库100M的日志量（可以关闭）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>数组： alive   : 存活latest  ：最新pref    ：备选bad     ：不选</code></pre><h3 id="2-选主判断："><a href="#2-选主判断：" class="headerlink" title="2-选主判断："></a>2-选主判断：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">伪代码：<span class="token keyword">if</span> 情况=1<span class="token punctuation">.</span> 如果pref和bad数组当中slave的个数为0，则选择latest数组当中的第一个slave为master。db02没有candidate_master，又没有以下bad三种情况，db02恰好是latest。=2<span class="token punctuation">.</span> 循环对比latest数组和perf数组的slave，如果存在相同的slave，并且这个slave不在bad数组当中，该slave会被推选为新的master。db02 pref <span class="token punctuation">,</span> latest  <span class="token punctuation">,</span>又不是bad，会被选主。=3<span class="token punctuation">.</span> 循环对比slaves数组pref数组当中的slave，如果有一个slave相同并且不在bad数组当中，该就会成为新的master。db02 <span class="token punctuation">,</span>不是latest<span class="token punctuation">,</span>不是bad<span class="token punctuation">,</span>是pref。会被选择。=4<span class="token punctuation">.</span> 循环latest数组，如果又循环到的slave不在bad数组当中，这个slave就会成为master。    也就是说就算添加了candidate_master=1，该slave也不一定会成为主库。    db02 <span class="token punctuation">,</span> latest  <span class="token punctuation">,</span>不是bad     db03 <span class="token punctuation">,</span> pref<span class="token punctuation">,</span>不是latest <span class="token punctuation">,</span>不是bad =5<span class="token punctuation">.</span> 从活着的slave当中进行循环，如果循环到的slave不在bad数组当中，那么这个slave就会成为主库。        db02 ，slaves <span class="token punctuation">,</span>不是bad 。<span class="token keyword">else</span> 如果进行了多次选择都找不到主库，那么主库选择失败，failover失败。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-数据补偿-："><a href="#3-数据补偿-：" class="headerlink" title="3-数据补偿 ："></a>3-数据补偿 ：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">4<span class="token punctuation">.</span>1 原主库ssh能连接     各个从节点调用： save_binary_logs 脚本，立即保存缺失部分的binlog到各自节点<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>tmp目录。4<span class="token punctuation">.</span>2 原主库ssh不能连接     从节点调用apply_diff_relay_logs  ，进行relay<span class="token operator">-</span>log日志差异补偿。4<span class="token punctuation">.</span>3<span class="token punctuation">.</span> 额外数据补偿<span class="token punctuation">(</span>主库日志冗余机制<span class="token punctuation">)</span>     binlog_server<span class="token punctuation">.</span>5<span class="token punctuation">.</span> 切换    所有从库解除主从身份。stop slave <span class="token punctuation">;</span> reset slave<span class="token punctuation">;</span>   重构新的主从关系。change master to 6<span class="token punctuation">.</span> 应用透明<span class="token punctuation">(</span>vip<span class="token punctuation">)</span>7<span class="token punctuation">.</span> 故障提醒8<span class="token punctuation">.</span> 额外数据补偿9<span class="token punctuation">.</span> 剔除故障节点10<span class="token punctuation">.</span> manager 程序<span class="token string">"自杀"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-应用透明vip功能"><a href="#5-应用透明vip功能" class="headerlink" title="5-应用透明vip功能"></a>5-应用透明vip功能</h2><pre class="line-numbers language-powershell"><code class="language-powershell">5<span class="token punctuation">.</span>0 vip 介绍 <span class="token comment" spellcheck="true">#作用网卡：</span>eth0:1 ens33:1<span class="token comment" spellcheck="true"># IP</span>vip :   10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>55<span class="token operator">/</span>24一定是一个空闲地址。一定要和对外提供服务的地址同一网段。不能跨网段。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-1-vip-故障转移脚本"><a href="#5-1-vip-故障转移脚本" class="headerlink" title="5.1 vip 故障转移脚本"></a>5.1 vip 故障转移脚本</h3><pre class="line-numbers language-powershell"><code class="language-powershell">脚本——是故障转移切换脚本上传脚本文件到<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin <span class="token namespace">[root@db03 mha_script]</span><span class="token comment" spellcheck="true"># \cp -a * /usr/local/bin</span>5<span class="token punctuation">.</span>2 修改权限 <span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># chmod +x /usr/local/bin/*</span>5<span class="token punctuation">.</span>3 修改内容<span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true">#vim  /usr/local/bin/master_ip_failover</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要修改ip已经网卡</p><pre class="line-numbers language-shell"><code class="language-shell">my $vip = '10.0.0.55/24';my $key = '1';my $if  = 'ens33';my $ssh_start_vip = "/sbin/ifconfig $if:$key $vip";my $ssh_stop_vip = "/sbin/ifconfig  $if:$key down";my $ssh_Bcast_arp= "/sbin/arping -I $if -c 3 -A 10.0.0.55";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-修改Manager-配置文件"><a href="#5-2-修改Manager-配置文件" class="headerlink" title="5.2 修改Manager 配置文件"></a>5.2 修改Manager 配置文件</h3><pre class="line-numbers language-powershell"><code class="language-powershell">vim <span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf master_ip_failover_script=<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>master_ip_failover<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-3-主库上，手工生成第一个vip地址"><a href="#5-3-主库上，手工生成第一个vip地址" class="headerlink" title="5.3-主库上，手工生成第一个vip地址"></a>5.3-主库上，手工生成第一个vip地址</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db02 ~]</span><span class="token comment" spellcheck="true"># ifconfig eth0:1 10.0.0.55/24</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-故障提醒功能"><a href="#6-故障提醒功能" class="headerlink" title="6.故障提醒功能"></a>6.故障提醒功能</h2><h3 id="6-1-准备脚本"><a href="#6-1-准备脚本" class="headerlink" title="6.1 准备脚本"></a>6.1 准备脚本</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># vim  send_report </span>my <span class="token variable">$smtp</span>=<span class="token string">'smtp.qq.com'</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true"># smtp服务器</span>my <span class="token variable">$mail_from</span>=<span class="token string">'22654481@qq.com'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 发件箱</span>my <span class="token variable">$mail_user</span>=<span class="token string">'22654481'</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true"># 用户名 QQ号</span>my <span class="token variable">$mail_pass</span>=<span class="token string">'gemghsvgkeyzcagh'</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true"># 授权码</span>my <span class="token variable">$mail_to</span>=<span class="token punctuation">[</span><span class="token string">'22654481@qq.com'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true"># 收件箱</span><span class="token comment" spellcheck="true">#my $mail_to=['to1@qq.com','to2@qq.com']; #多个发送</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-修改配置文件"><a href="#6-2-修改配置文件" class="headerlink" title="6.2 修改配置文件"></a>6.2 修改配置文件</h3><pre class="line-numbers language-powershell"><code class="language-powershell">vim <span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token comment" spellcheck="true"># 添加一行： </span>report_script=<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>bin<span class="token operator">/</span>send_report<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-3-重启MHA-db03"><a href="#6-3-重启MHA-db03" class="headerlink" title="6.3 重启MHA(db03)"></a>6.3 重启MHA(db03)</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># masterha_stop  --conf=/etc/mha/app1.cnf </span><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null> /var/log/mha/app1/manager.log 2>&amp;1 &amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-4检测状态："><a href="#6-4检测状态：" class="headerlink" title="6.4检测状态："></a>6.4检测状态：</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 data]</span><span class="token comment" spellcheck="true"># masterha_check_status --conf=/etc/mha/app1.cnf</span>app1 <span class="token punctuation">(</span>pid:6640<span class="token punctuation">)</span> is running<span class="token punctuation">(</span>0:PING_OK<span class="token punctuation">)</span><span class="token punctuation">,</span> master:10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51<span class="token comment" spellcheck="true"># 注意：</span>keepAlive的话 ，需要 candidate_master=1和check_repl_delay=0进行配合。防止vip和主库选择不在一个节点。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-日志补偿的冗余方案–binlog-server"><a href="#6-日志补偿的冗余方案–binlog-server" class="headerlink" title="6-日志补偿的冗余方案–binlog_server"></a>6-日志补偿的冗余方案–binlog_server</h1><h2 id="6-1创建必要目录-db03"><a href="#6-1创建必要目录-db03" class="headerlink" title="6.1创建必要目录(db03)"></a>6.1创建必要目录(db03)</h2><pre class="line-numbers language-powershell"><code class="language-powershell">mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog_server<span class="token operator">/</span>chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span>/<span class="token operator">*</span>cd  <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog_server<span class="token operator">/</span><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># mysql -e "show slave status \G"|grep "Master_Log"</span>mysqlbinlog  <span class="token operator">-</span>R <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">--</span>user=mha <span class="token operator">--</span>password=mha <span class="token operator">--</span>raw  <span class="token operator">--</span>stop<span class="token operator">-</span>never mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000002 &amp;cd  <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog_server<span class="token operator">/</span>   <span class="token operator">--</span>-<span class="token operator">--</span>》必须进入到自己创建好的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">注意：拉取日志的起点<span class="token punctuation">,</span>需要按照目前从库的已经获取到的二进制日志点为起点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-2-配置文件设置"><a href="#6-2-配置文件设置" class="headerlink" title="6.2-配置文件设置"></a>6.2-配置文件设置</h2><pre class="line-numbers language-powershell"><code class="language-powershell">vim <span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token namespace">[binlog1]</span>no_master=1hostname=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53master_binlog_dir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>binlog_server<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-3-重启MHA"><a href="#6-3-重启MHA" class="headerlink" title="6.3 重启MHA"></a>6.3 重启MHA</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># masterha_stop  --conf=/etc/mha/app1.cnf </span><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null> /var/log/mha/app1/manager.log 2>&amp;1 &amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-4测试MHA-Failover的功能"><a href="#6-4测试MHA-Failover的功能" class="headerlink" title="6.4测试MHA Failover的功能"></a>6.4测试MHA Failover的功能</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token punctuation">.</span> 测试MHA Failover的功能<span class="token comment" spellcheck="true"># 宕掉主库测试</span>测试查看  vip查看邮件  故障库是否剔除切换日志<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token operator">/</span>manager主从状态<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-MHA高可用，故障模拟及恢复演练"><a href="#7-MHA高可用，故障模拟及恢复演练" class="headerlink" title="7. MHA高可用，故障模拟及恢复演练"></a>7. MHA高可用，故障模拟及恢复演练</h1><pre class="line-numbers language-powershell"><code class="language-powershell">主库  <span class="token operator">/</span>etc<span class="token operator">/</span>initd<span class="token operator">/</span>mysql stop <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-排查进程状态"><a href="#1-排查进程状态" class="headerlink" title="1. 排查进程状态"></a>1. 排查进程状态</h2><hr><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># ps -ef |grep manager</span>root      13087   2813  0 16:33 pts<span class="token operator">/</span>1    00:00:00 grep <span class="token operator">--</span>color=auto manager<span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># masterha_check_status --conf=/etc/mha/app1.cnf</span>app1 is stopped<span class="token punctuation">(</span>2:NOT_RUNNING<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token namespace">[root@db03 /data/binlog_server]</span> <span class="token comment" spellcheck="true"># masterha_check_repl --conf=/etc/mha/app1.cnf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-检查配置文件中节点"><a href="#2-检查配置文件中节点" class="headerlink" title="2. 检查配置文件中节点"></a>2. 检查配置文件中节点</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># cat /etc/mha/app1.cnf </span>如果节点已经被移除，说明切换过程已经大部分成功。如果节点还在，证明切换过程在中间卡住。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-看日志"><a href="#3-看日志" class="headerlink" title="3. 看日志"></a>3. 看日志</h2><pre class="line-numbers language-CQL"><code class="language-CQL">vim /var/log/mha/app1/manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-修复故障库"><a href="#4-修复故障库" class="headerlink" title="4. 修复故障库"></a>4. 修复故障库</h2><pre><code>[root@db01 ~]# /etc/init.d/mysqld startStarting MySQL.. SUCCESS! </code></pre><h2 id="5-修复主从（主从是好的，可略过）"><a href="#5-修复主从（主从是好的，可略过）" class="headerlink" title="5. 修复主从（主从是好的，可略过）"></a>5. 修复主从（主从是好的，可略过）</h2><pre class="line-numbers language-powershell"><code class="language-powershell">将故障库修好后，手工加入已有的主从中，作为从库。change master to master_host=<span class="token string">'10.0.1.61'</span><span class="token punctuation">,</span>master_user=<span class="token string">'repl'</span><span class="token punctuation">,</span>master_password=<span class="token string">'123'</span> <span class="token punctuation">,</span>MASTER_AUTO_POSITION=1<span class="token punctuation">;</span><span class="token function">start</span> slave<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-将配置文件修复（配置文件节点信息还在，可忽略）"><a href="#6-将配置文件修复（配置文件节点信息还在，可忽略）" class="headerlink" title="6. 将配置文件修复（配置文件节点信息还在，可忽略）"></a>6. 将配置文件修复（配置文件节点信息还在，可忽略）</h2><pre><code>添加: [server1]hostname=10.0.0.61port=3306</code></pre><h2 id="7-检查ssh互信和repl的主从关系"><a href="#7-检查ssh互信和repl的主从关系" class="headerlink" title="7. 检查ssh互信和repl的主从关系"></a>7. 检查ssh互信和repl的主从关系</h2><pre><code>masterha_check_ssh   --conf=/etc/mha/app1.cnf masterha_check_repl  --conf=/etc/mha/app1.cnf </code></pre><h2 id="8-修复binlogserver（注意拉去当前主库）"><a href="#8-修复binlogserver（注意拉去当前主库）" class="headerlink" title="8. 修复binlogserver（注意拉去当前主库）"></a>8. 修复binlogserver（注意拉去当前主库）</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># cd /data/mysql/binlog/</span><span class="token namespace">[root@db03 binlog]</span><span class="token comment" spellcheck="true"># rm -rf *</span><span class="token namespace">[root@db03 binlog]</span><span class="token comment" spellcheck="true"># mysqlbinlog  -R --host=10.0.1.61 --user=mha --password=mha --raw  --stop-never mysql-bin.000004 &amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="9-检查主节点vip的状态"><a href="#9-检查主节点vip的状态" class="headerlink" title="9.检查主节点vip的状态"></a>9.检查主节点vip的状态</h2><pre><code> 如果不在，再手工生成一下。</code></pre><h2 id="10-启动MHA"><a href="#10-启动MHA" class="headerlink" title="10. 启动MHA"></a>10. 启动MHA</h2><pre class="line-numbers language-powershell"><code class="language-powershell">nohup masterha_manager <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>remove_dead_master_conf <span class="token operator">--</span>ignore_last_failover &lt; <span class="token operator">/</span>dev<span class="token operator">/</span>null > <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>log<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token operator">/</span>manager<span class="token punctuation">.</span>log 2>&amp;1 &amp;<span class="token namespace">[root@db03 binlog]</span><span class="token comment" spellcheck="true"># masterha_check_status --conf=/etc/mha/app1.cnf </span>app1 <span class="token punctuation">(</span>pid:13189<span class="token punctuation">)</span> is running<span class="token punctuation">(</span>0:PING_OK<span class="token punctuation">)</span><span class="token punctuation">,</span> master:10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52mysqlbinlog  <span class="token operator">-</span>R <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">--</span>user=mha <span class="token operator">--</span>password=mha <span class="token operator">--</span>raw  <span class="token operator">--</span>stop<span class="token operator">-</span>never mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000001 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-快速恢复"><a href="#11-快速恢复" class="headerlink" title="11.快速恢复"></a>11.快速恢复</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1主2从：<span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># mysql -e "show slave status\G" |grep "Master_Host"</span>Master_Host: 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52<span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true">#  mysql -e "show slave status\G" |grep "Master_Host"</span>修复1主从：db01: change master to master_host=<span class="token string">'10.0.0.52'</span><span class="token punctuation">,</span>master_user=<span class="token string">'repl'</span><span class="token punctuation">,</span>master_password=<span class="token string">'123'</span> <span class="token punctuation">,</span>MASTER_AUTO_POSITION=1<span class="token punctuation">;</span><span class="token function">start</span> slave<span class="token punctuation">;</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true">#  mysql -e "show slave status\G" |grep "Master_Host"</span>                  Master_Host: 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>529<span class="token punctuation">.</span>2 检查vip是否在主库<span class="token namespace">[root@db02 data]</span><span class="token comment" spellcheck="true"># ip a</span>9<span class="token punctuation">.</span>3 检查binlog_server状态 <span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># ps -ef |grep mysqlbinlog</span>root      77828  39593  0 17:53 pts<span class="token operator">/</span>2    00:00:00 grep <span class="token operator">--</span>color=auto mysqlbinlog<span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># </span>修复binlog_server: <span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># rm -rf /data/binlog_server/*</span><span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># cd /data/binlog_server/</span><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># mysql -e "show slave status \G"|grep "Master_Log"</span><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># mysqlbinlog  -R --host=10.0.0.52 --user=mha --password=mha --raw  --stop-never mysql-bin.000002 &amp;</span>9<span class="token punctuation">.</span>4 检查配置文件 三个节点是否存在：<span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># cat /etc/mha/app1.cnf </span>添加新节点到配置文件： masterha_conf_host <span class="token operator">--</span>command=add <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>hostname=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>62 <span class="token operator">--</span>block=server1 <span class="token operator">--</span>params=<span class="token string">"port=3306"</span><span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>masterha_conf_host <span class="token operator">--</span>command=delete <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>block=server1<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>9<span class="token punctuation">.</span>5 检查ssh互信和repl<span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># masterha_check_ssh  --conf=/etc/mha/app1.cnf</span><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># masterha_check_repl  --conf=/etc/mha/app1.cnf </span>9<span class="token punctuation">.</span>6 启动MHA <span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null> /var/log/mha/app1/manager.log 2>&amp;1 &amp;</span><span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true"># masterha_check_status   --conf=/etc/mha/app1.cnf </span>app1 <span class="token punctuation">(</span>pid:78201<span class="token punctuation">)</span> is running<span class="token punctuation">(</span>0:PING_OK<span class="token punctuation">)</span><span class="token punctuation">,</span> master:10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52<span class="token namespace">[root@db03 ~]</span><span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="8-MHA的维护操作-在线切换功能"><a href="#8-MHA的维护操作-在线切换功能" class="headerlink" title="8-MHA的维护操作 - 在线切换功能"></a>8-MHA的维护操作 - 在线切换功能</h1><h2 id="8-1-只切换角色"><a href="#8-1-只切换角色" class="headerlink" title="8.1 只切换角色"></a>8.1 只切换角色</h2><pre class="line-numbers language-powershell"><code class="language-powershell">masterha_master_switch  <span class="token operator">--</span>conf=<span class="token operator">/</span>etc<span class="token operator">/</span>mha<span class="token operator">/</span>app1<span class="token punctuation">.</span>cnf <span class="token operator">--</span>master_state=alive <span class="token operator">--</span>new_master_host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>61 <span class="token operator">--</span>orig_master_is_new_slave <span class="token operator">--</span>running_updates_limit=10000注意： master_ip_online_change_script is not defined<span class="token punctuation">.</span> <span class="token keyword">If</span> you <span class="token keyword">do</span> not disable writes on the current master manually<span class="token punctuation">,</span> applications keep writing on the current master<span class="token punctuation">.</span> Is it ok to proceed? <span class="token punctuation">(</span>yes<span class="token operator">/</span>NO<span class="token punctuation">)</span>: yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CQL"><code class="language-CQL">9.6 启动MHA [root@db03 bin]# nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  < /dev/null> /var/log/mha/app1/manager.log 2>&1 &<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><ol><li><p>此种方法切换，要注意将原主库，FTWRL（Flush table with read lock），否则会造成主从不一致。</p></li><li><p>手工切换vip</p></li><li><p>重新拉去新主库的binlog</p></li></ol></blockquote><p>8.2 master_ip_online_change_script功能实现</p><p>功能: 在线切换时，自动锁原主库，VIP自动切换</p><p>8.2.1 准备切换脚本</p><p>vim /usr/local/bin/master_ip_online_change</p><pre><code>my $vip = &quot;10.0.0.55/24&quot;;my $key = &quot;1&quot;;my $ssh_start_vip = &quot;/sbin/ifconfig ens33:$key $vip&quot;;my $ssh_stop_vip = &quot;/sbin/ifconfig ens33:$key $vip down&quot;;my $ssh_Bcast_arp= &quot;/sbin/arping -I ens33 -c 3 -A 10.0.0.55&quot;;</code></pre><p>8.2.2 修改MHA配置文件 </p><pre><code>vim /etc/mha/app1.cnfmaster_ip_online_change_script=/usr/local/bin/master_ip_online_change</code></pre><p>8.2.3 停 MHA</p><pre><code>[root@db03 bin]# masterha_stop  --conf=/etc/mha/app1.cnf </code></pre><p>8.2.4 检查repl</p><pre><code>[root@db03 bin]# masterha_check_repl   --conf=/etc/mha/app1.cnf </code></pre><p>8.2.4 在线切换 </p><pre><code>masterha_master_switch  --conf=/etc/mha/app1.cnf --master_state=alive --new_master_host=10.0.1.61 --orig_master_is_new_slave --running_updates_limit=10000</code></pre><p>8.2.5 重构binlogserver</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># ps -ef |grep mysqlbinlog</span>root      28144  16272  0 17:50 pts<span class="token operator">/</span>1    00:00:00 mysqlbinlog <span class="token operator">-</span>R <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52 <span class="token operator">--</span>user=mha <span class="token operator">--</span>password=x x <span class="token operator">--</span>raw <span class="token operator">--</span>stop<span class="token operator">-</span>never mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000004root      28529  16272  0 18:03 pts<span class="token operator">/</span>1    00:00:00 grep <span class="token operator">--</span>color=auto mysqlbinlog<span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># kill -9 28144</span><span class="token namespace">[root@db03 bin]</span><span class="token comment" spellcheck="true"># cd /data/binlog_server/</span><span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># ll</span>total 4<span class="token operator">-</span>rw<span class="token operator">-</span>r-<span class="token operator">--</span>-<span class="token operator">-</span> 1 root root 194 Apr  1 17:50 mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000005<span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># rm -rf *</span><span class="token namespace">[root@db03 binlog_server]</span><span class="token comment" spellcheck="true"># mysqlbinlog  -R --host=10.0.1.62 --user=mha --password=mha --raw  --stop-never mysql-bin.000004 &amp;</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span> 28534<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8.2.6 启动MHA </p><pre class="line-numbers language-CQL"><code class="language-CQL">[root@db03 bin]# nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  < /dev/null> /var/log/mha/app1/manager.log 2>&1 &[root@db03 binlog_server]# masterha_check_status   --conf=/etc/mha/app1.cnf app1 (pid:28535) is running(0:PING_OK), master:10.0.0.51<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="9-Atlas读写分离中间件应用"><a href="#9-Atlas读写分离中间件应用" class="headerlink" title="9-Atlas读写分离中间件应用"></a>9-Atlas读写分离中间件应用</h1><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 介绍Atlas是由 Qihoo 360<span class="token punctuation">,</span> Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目。它是在mysql<span class="token operator">-</span>proxy 0<span class="token punctuation">.</span>8<span class="token punctuation">.</span>2版本的基础上，对其进行了优化，增加了一些新的功能特性。360内部使用Atlas运行的mysql业务，每天承载的读写请求数达几十亿条。下载地址https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>Qihoo360<span class="token operator">/</span>Atlas<span class="token operator">/</span>releases<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：</p><pre class="line-numbers language-powershell"><code class="language-powershell">1、Atlas只能安装运行在64位的系统上2、Centos 5<span class="token punctuation">.</span>X安装 Atlas<span class="token operator">-</span>XX<span class="token punctuation">.</span>el5<span class="token punctuation">.</span>x86_64<span class="token punctuation">.</span>rpm，Centos 6<span class="token punctuation">.</span>X安装Atlas<span class="token operator">-</span>XX<span class="token punctuation">.</span>el6<span class="token punctuation">.</span>x86_64<span class="token punctuation">.</span>rpm。3、后端mysql版本应大于5<span class="token punctuation">.</span>1，建议使用Mysql 5<span class="token punctuation">.</span>6以上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><pre class="line-numbers language-powershell"><code class="language-powershell">https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>Qihoo360<span class="token operator">/</span>Atlas<span class="token operator">/</span>releases<span class="token namespace">[root@db03 data]</span><span class="token comment" spellcheck="true"># rpm -ivh Atlas-2.2.1.el6.x86_64.rpm </span>Preparing<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                          <span class="token comment" spellcheck="true">################################# [100%]</span>Updating <span class="token operator">/</span> installing<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   1:Atlas<span class="token operator">-</span>2<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1<span class="token operator">-</span>1                    <span class="token comment" spellcheck="true">################################# [100%]</span><span class="token namespace">[root@db03 data]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-配置-1"><a href="#2-配置-1" class="headerlink" title="2. 配置"></a>2. 配置</h3><pre class="line-numbers language-CQL"><code class="language-CQL">cd /usr/local/mysql-proxy/confmv test.cnf test.cnf.bakcat > test.cnf <<EOF[mysql-proxy]admin-username = useradmin-password = pwdproxy-backend-addresses = 10.0.1.55:3306proxy-read-only-backend-addresses = 10.0.1.52:3306,10.0.1.53:3306pwds = repl:3yb5jEku5h4=,mha:O2jBXONX098=daemon = truekeepalive = trueevent-threads = 8log-level = messagelog-path = /usr/local/mysql-proxy/logsql-log=ONproxy-address = 0.0.0.0:33060admin-address = 0.0.0.0:2345charset=utf8EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-启动atlas"><a href="#3-启动atlas" class="headerlink" title="3-启动atlas"></a>3-启动atlas</h3><pre class="line-numbers language-CQL"><code class="language-CQL">/usr/local/mysql-proxy/bin/mysql-proxyd test restartps -ef |grep proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-Atlas功能测试"><a href="#2-Atlas功能测试" class="headerlink" title="2-Atlas功能测试"></a>2-Atlas功能测试</h2><h3 id="测试读操作："><a href="#测试读操作：" class="headerlink" title="测试读操作："></a>测试读操作：</h3><pre><code>mysql -umha -pmha  -h 10.0.0.53 -P 33060 db03 [(none)]&gt;select @@server_id;</code></pre><h3 id="测试写操作："><a href="#测试写操作：" class="headerlink" title="测试写操作："></a>测试写操作：</h3><pre><code>mysql&gt; begin;select @@server_id;commit;</code></pre><blockquote><p>注意:<br>DDL建议不要再Atlas触发，最好是到主库触发（Online DDL或者PT-OSC）。<br>DML建议begin; DML;  commit;</p></blockquote><h2 id="3-Atlas-的管理操作"><a href="#3-Atlas-的管理操作" class="headerlink" title="3-Atlas 的管理操作"></a>3-Atlas 的管理操作</h2><pre><code>[root@db03 conf]# mysql -uuser -ppwd -h 10.0.0.53 -P2345db03 [(none)]&gt;select * from help;</code></pre><h3 id="查看所有节点"><a href="#查看所有节点" class="headerlink" title="查看所有节点"></a>查看所有节点</h3><pre class="line-numbers language-powershell"><code class="language-powershell">db03 <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span>><span class="token function">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> backends<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> backend_ndx <span class="token punctuation">|</span> address        <span class="token punctuation">|</span> state <span class="token punctuation">|</span> <span class="token function">type</span> <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span>           1 <span class="token punctuation">|</span> 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>55:3306 <span class="token punctuation">|</span> up    <span class="token punctuation">|</span> rw   <span class="token punctuation">|</span><span class="token punctuation">|</span>           2 <span class="token punctuation">|</span> 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3306 <span class="token punctuation">|</span> up    <span class="token punctuation">|</span> ro   <span class="token punctuation">|</span><span class="token punctuation">|</span>           3 <span class="token punctuation">|</span> 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>53:3306 <span class="token punctuation">|</span> up    <span class="token punctuation">|</span> ro   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span>3 rows in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="节点的上线和下线"><a href="#节点的上线和下线" class="headerlink" title="节点的上线和下线"></a>节点的上线和下线</h3><pre class="line-numbers language-CQL"><code class="language-CQL">db03 [(none)]>SET OFFLINE 1;+-------------+----------------+---------+------+| backend_ndx | address        | state   | type |+-------------+----------------+---------+------+|           1 | 10.0.0.55:3306 | offline | rw   |+-------------+----------------+---------+------+1 row in set (0.01 sec)db03 [(none)]>SELECT * FROM backends;+-------------+----------------+---------+------+| backend_ndx | address        | state   | type |+-------------+----------------+---------+------+|           1 | 10.0.0.55:3306 | offline | rw   ||           2 | 10.0.0.52:3306 | up      | ro   ||           3 | 10.0.0.53:3306 | up      | ro   |+-------------+----------------+---------+------+db03 [(none)]>SET ONLINE 1;+-------------+----------------+---------+------+| backend_ndx | address        | state   | type |+-------------+----------------+---------+------+|           1 | 10.0.0.55:3306 | unknown | rw   |+-------------+----------------+---------+------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除和添加节点"><a href="#删除和添加节点" class="headerlink" title="删除和添加节点"></a>删除和添加节点</h3><pre class="line-numbers language-CQL"><code class="language-CQL">db03 [(none)]>REMOVE BACKEND  3;db03 [(none)]>ADD SLAVE  10.0.1.63:3306;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p>主库添加跟后台添加</p><pre class="line-numbers language-CQL"><code class="language-CQL">db01 [(none)]>grant all on *.* to oldguo@'10.0.0.%' identified by '123';  db03 [(none)]>SELECT * FROM pwds;db03 [(none)]>add pwd oldguo:123;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="持久化配置文件"><a href="#持久化配置文件" class="headerlink" title="持久化配置文件"></a>持久化配置文件</h3><pre><code>db03 [(none)]&gt;save config;</code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13-MySQL 全面优化+故障+PT工具使用</title>
      <link href="/2020/05/18/01-yun-ji-suan-kvm-openstack/"/>
      <url>/2020/05/18/01-yun-ji-suan-kvm-openstack/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 优化的哲学1<span class="token punctuation">.</span>1 什么时候优化 ？优化有风险，涉足请谨慎！！优化一定是由业务需求触发的。1<span class="token punctuation">.</span>2 数据库的优化谁来参与 ？ 硬件工程师 网落管理员系统管理员开发人员DBA 领导1<span class="token punctuation">.</span>3 数据库优化的思路1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1 大面 性能  安全 1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>2 框架（1）硬件、网络、存储（2）操作系统、文件系统（3）数据库实例 （链接层、SQL层、存储引擎层）（4）业务应用（库、表、索引、SQL语句、锁等）（5）架构选型（高可用、读写分离、分布式、NoSQL）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-工具介绍"><a href="#2-工具介绍" class="headerlink" title="2. 工具介绍"></a>2. 工具介绍</h2><pre class="line-numbers language-powershell"><code class="language-powershell">2<span class="token punctuation">.</span>1 操作系统和硬件层面 cpu             : top 、htop 、sar 、vmstat mem、swap         ：top 、 free  、vmstat 、sar IO（disk、net） ：iotop、iostat 2<span class="token punctuation">.</span>3 高级工具 PT 压测工具 ： FIO、mysqlslap、sysbench、tpc<span class="token operator">-</span>C mysql tpc<span class="token operator">-</span>H mysql <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>IS、<span class="token function">PS</span>、SYS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-0-数据库实例"><a href="#3-0-数据库实例" class="headerlink" title="3.0 数据库实例"></a>3.0 数据库实例</h2><pre><code>show processlist;db01 [(none)]&gt;show status\G;show engine innodb status \G</code></pre><ol start="3"><li>优化细节</li></ol><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span>1  硬件选型建议3<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 服务器 ：<span class="token comment" spellcheck="true"># MySQL  :  </span>PC Server:         OLTP: 在线事务处理系统。IO密集性，高并发。            CPU ： 志强 16核<span class="token operator">+</span>             MEM :  64G<span class="token operator">+</span>            IO  :                  磁盘IO:                     硬盘：   SAS 、 PCI<span class="token operator">-</span>E SSD 、Flash                     RAID卡： RAID 5 、RAID 10                网络IO： 网卡。单口单卡。bound网卡绑定（主备、轮询）。网络交换机要做堆叠。阿里（RDS、DRDS 、PolarDB\PolarDB box<span class="token punctuation">)</span>        <span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span><span class="token operator">+</span>                    OLAP：计算类的业务。CPU密集型。            CPU:   I系列 主频高阿里（RDS、DRDS 、PolarDB\PolarDB box<span class="token punctuation">)</span>腾讯云：     <span class="token comment" spellcheck="true"># Oracle :  小机 （IBM PowerPC\HP小机）、PC Server、Oracle 一体机</span><span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span><span class="token operator">+</span><span class="token comment" spellcheck="true"># 网络设备 </span>        网络交换机  ： vlan        光纤交换机  ： zone堆叠。<span class="token comment" spellcheck="true"># 存储设备 </span>RAID 10。注意： 不要过度条带化。可能导致IOPS过高，甚至被打满。IOPS： 一块硬盘，最高每秒的IO次数。是个定值。一般情况下，新规划架构时，一定要考虑好。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="1-系统工具应用"><a href="#1-系统工具应用" class="headerlink" title="1-系统工具应用"></a>1-系统工具应用</h1><h2 id="1-CPU"><a href="#1-CPU" class="headerlink" title="1-CPU"></a>1-CPU</h2><pre class="line-numbers language-powershell"><code class="language-powershell">top <span class="token operator">%</span>Cpu<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: CPU的平均值使用率，按“1”会展开看到每颗cpu占比。    us ：用户进程占用的CPU时间。我们希望看到这个越多越好。    sy ：系统、内核工作时候占用的CPU比例。资源监控、分配、回收、系统调用。我们希望越低越好。    id ：空闲CPU的时间。      wa ：花在等待上的时间。等资源：处理队列、IO。数据库服务器：     如果： wa很高， 大几率 ： 大事务、全表扫描、随机IO过多、锁等待    锁等待也会导致 sys过高。全表扫描也会导致us过高。    wa ：花在等待上的时间。等资源：处理队列、IO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql"> mysqlslap --defaults-file=/etc/my.cnf --concurrency=10 --iterations=1 --create-schema='test' --query="select * from test.t100w where k2='FGCD'" engine=innodb --number-of-queries=1000 -uroot -p123 -verbose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-MySQL-服务器-，CPU-暴涨，排查思路"><a href="#2-MySQL-服务器-，CPU-暴涨，排查思路" class="headerlink" title="2-MySQL 服务器 ，CPU 暴涨，排查思路"></a>2-MySQL 服务器 ，CPU 暴涨，排查思路</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 1. 找 mysql 的进程号</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># cat /data/3306/data/db01.pid  #数据目录下或者ps</span>97798<span class="token comment" spellcheck="true"># 2. 通过 进程找问题线程</span>top <span class="token operator">-</span>Hp 97798   PID USER      PR  <span class="token function">NI</span>    VIRT    RES    SHR S <span class="token operator">%</span>CPU <span class="token operator">%</span>MEM     TIME<span class="token operator">+</span> COMMAND                                                                 13974 mysql     20   0 1163280 254104  12948 R 10<span class="token punctuation">.</span>9 12<span class="token punctuation">.</span>5   1:03<span class="token punctuation">.</span>22 mysqld        OS_thread_ID  24331<span class="token comment" spellcheck="true"># 3. 通过OS thread找到数据库内部线程</span>mysql> <span class="token function">select</span> thread_id<span class="token punctuation">,</span>PROCESSLIST_ID <span class="token punctuation">,</span>THREAD_OS_ID  <span class="token keyword">from</span> performance_schema<span class="token punctuation">.</span>threads where THREAD_OS_ID=24331<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> thread_id <span class="token punctuation">|</span> PROCESSLIST_ID <span class="token punctuation">|</span> THREAD_OS_ID <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span>             57 <span class="token punctuation">|</span>       121855 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token comment" spellcheck="true"># 4. 通过 thread_id找到问题SQL语句 </span>mysql> <span class="token function">select</span> THREAD_ID <span class="token punctuation">,</span>SQL_TEXT <span class="token keyword">from</span> performance_schema<span class="token punctuation">.</span>events_statements_history where THREAD_ID=82<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> THREAD_ID <span class="token punctuation">|</span> SQL_TEXT                                 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token punctuation">|</span>        82 <span class="token punctuation">|</span> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'FGCD'</span> <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token comment" spellcheck="true"># MEM、SWAP </span>MEM 主要看 avail Mem  、 buff<span class="token operator">/</span>cache64G  不会超过90<span class="token operator">%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-SWAP-：-MySQL建议不使用。"><a href="#3-SWAP-：-MySQL建议不使用。" class="headerlink" title="3-SWAP ： MySQL建议不使用。"></a>3-SWAP ： MySQL建议不使用。</h2><pre class="line-numbers language-powershell"><code class="language-powershell">什么时候算不centos7 中默认物理内存70<span class="token operator">%</span><span class="token punctuation">,</span> 时会使用swap。centos6 中默认物理内存40<span class="token operator">%</span> <span class="token punctuation">,</span>时会使用swap。<span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># cat /proc/sys/vm/swappiness </span>30<span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># echo 0 >/proc/sys/vm/swappiness </span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># cat /proc/sys/vm/swappiness </span>0<span class="token operator">/</span>etc<span class="token operator">/</span>sysctl<span class="token punctuation">.</span>conf上添加vm<span class="token punctuation">.</span>swappiness=0（永久）sysctl <span class="token operator">-</span>p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-IO"><a href="#4-IO" class="headerlink" title="4-IO"></a>4-IO</h2><pre class="line-numbers language-powershell"><code class="language-powershell">说明： deadline<span class="token punctuation">(</span>适合SAS盘<span class="token punctuation">)</span>noop    <span class="token punctuation">(</span>适合ssd<span class="token punctuation">,</span>flash<span class="token punctuation">)</span>centos 7 默认是 deadline查看：<span class="token function">cat</span>   <span class="token operator">/</span>sys<span class="token operator">/</span>block<span class="token operator">/</span>sda<span class="token operator">/</span>queue<span class="token operator">/</span>scheduler修改： <span class="token comment" spellcheck="true"># 临时</span><span class="token function">echo</span> deadline ><span class="token operator">/</span>sys<span class="token operator">/</span>block<span class="token operator">/</span>sda<span class="token operator">/</span>queue<span class="token operator">/</span>scheduler <span class="token comment" spellcheck="true"># 永久</span>vi <span class="token operator">/</span>boot<span class="token operator">/</span>grub<span class="token operator">/</span>grub<span class="token punctuation">.</span>conf更改到如下内容:kernel <span class="token operator">/</span>boot<span class="token operator">/</span>vmlinuz<span class="token operator">-</span>2<span class="token punctuation">.</span>6<span class="token punctuation">.</span>18<span class="token operator">-</span>8<span class="token punctuation">.</span>el5 ro root=LABEL=<span class="token operator">/</span> elevator=deadline rhgb quiet其他建议：    raid    no lvm    ext4或xfs    ssd提前规划好以上所有问题，减轻MySQL优化的难度。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-实例层面优化-参数"><a href="#5-实例层面优化-参数" class="headerlink" title="5-实例层面优化(参数)"></a>5-实例层面优化(参数)</h2><pre class="line-numbers language-powershell"><code class="language-powershell">连接层 <span class="token operator">--</span>skip<span class="token operator">-</span>networking   <span class="token comment" spellcheck="true"># 跳过网络TCP连接协议，如果你的应用和数据放在一起。</span><span class="token operator">--</span>skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables <span class="token comment" spellcheck="true"># 跳过授权表</span><span class="token operator">--</span>skip<span class="token operator">-</span>name<span class="token operator">-</span>resolve <span class="token comment" spellcheck="true"># 跳过域名解析</span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf  <span class="token namespace">[mysqld]</span>skip<span class="token operator">-</span>name<span class="token operator">-</span>resolve或者： skip<span class="token operator">-</span>name<span class="token operator">-</span>resolve=1<span class="token comment" spellcheck="true"># 连接数：</span>mysql> <span class="token function">select</span> @@max_connections<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> @@max_connections <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>               151 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span>建议： 单节点阈值，3000<span class="token operator">-</span>4000 设置依据：    show processlist<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># 当前正在并发的。</span>    <span class="token comment" spellcheck="true">#历史最高最大连接数</span>    mysql> show status like <span class="token string">'%Max_used_connect%'</span><span class="token punctuation">;</span>故障  ： too many  connectionsIE  409错误。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-连接线程回收"><a href="#6-连接线程回收" class="headerlink" title="6-连接线程回收"></a>6-连接线程回收</h2><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@wait_timeout<span class="token punctuation">;</span>作用： 非交互式链接，连接超时时间。mysql> <span class="token function">select</span> @@interactive_timeout<span class="token punctuation">;</span>作用：交互式链接，连接超时时间。彩蛋： 案例1： 文件句柄连接数设置不生效的问题，214问题。<span class="token operator">/</span>etc<span class="token operator">/</span>security<span class="token operator">/</span>limits<span class="token punctuation">.</span>conf <span class="token operator">*</span>　　soft　　nofile　　65536<span class="token operator">*</span>　　hard　　nofile　　65536案例2：MySQL 连接长时间<span class="token punctuation">(</span>7200和1200秒<span class="token punctuation">)</span>无法释放 <span class="token comment" spellcheck="true">#备份原因</span>场景： MySQL 5<span class="token punctuation">.</span>7  ， DELL730 E5<span class="token operator">-</span>2650  96G内存  1主2从Keepalive <span class="token operator">+</span> LVS <span class="token operator">+</span> 1主 2从 处理方法：ipvsadmin <span class="token operator">-</span>l <span class="token operator">-</span>timeout    <span class="token comment" spellcheck="true">#心跳检查时间</span>Timeout <span class="token punctuation">(</span>tcp  tcpfin  udp <span class="token punctuation">)</span>:  90 120 300  <span class="token comment" spellcheck="true">#心跳检查时间</span>net<span class="token punctuation">.</span>ipv4<span class="token punctuation">.</span>tcp_keepalive_time = 60   <span class="token comment" spellcheck="true">#心跳检查时间</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-会话级别的参数（每个连接都有关）"><a href="#7-会话级别的参数（每个连接都有关）" class="headerlink" title="7-会话级别的参数（每个连接都有关）"></a>7-会话级别的参数（每个连接都有关）</h2><pre class="line-numbers language-powershell"><code class="language-powershell"> thread_cache_size=100  （单位:个数）拿内存换CPU时间。依据： mysql>  show status like <span class="token string">'threads_%'</span><span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> Variable_name     <span class="token punctuation">|</span> Value <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> Threads_cached    <span class="token punctuation">|</span> 8     <span class="token punctuation">|</span>     <span class="token comment" spellcheck="true"># 剩余的个数</span><span class="token punctuation">|</span> Threads_connected <span class="token punctuation">|</span> 2     <span class="token punctuation">|</span>     <span class="token comment" spellcheck="true"># 已经产生的线程</span><span class="token punctuation">|</span> Threads_created   <span class="token punctuation">|</span> 4783  <span class="token punctuation">|</span>     <span class="token comment" spellcheck="true"># 全新创建的线程个数</span><span class="token punctuation">|</span> Threads_running   <span class="token punctuation">|</span> 1     <span class="token punctuation">|</span>     <span class="token comment" spellcheck="true">#  </span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>另外关注1：内存的剩余量。另外关注2： CPU的 SYS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-彩蛋：-CPU-SYS-暴增。"><a href="#8-彩蛋：-CPU-SYS-暴增。" class="headerlink" title="8-彩蛋：  CPU  SYS 暴增。"></a>8-彩蛋：  CPU  SYS 暴增。</h2><pre><code>show processlist ; mysql&gt;  show status like &#39;threads_%&#39;;建议调大，不断观察、监控  show status like &#39;threads_%&#39;、CPU  SYS、内存的剩余量。</code></pre><h2 id="9-innodb-thread-concurrenc-y-线程并发"><a href="#9-innodb-thread-concurrenc-y-线程并发" class="headerlink" title="9- innodb_thread_concurrenc==y  线程并发=="></a>9- innodb_thread_concurrenc==y  线程并发==</h2><pre class="line-numbers language-powershell"><code class="language-powershell">依据：  1<span class="token punctuation">.</span> 在官方doc上，对于innodb_thread_concurrency的使用，也给出了一些建议，如下：如果一个工作负载中，并发用户线程的数量小于64，建议设置innodb_thread_concurrency=0；如果工作负载一直较为严重甚至偶尔达到顶峰，建议先设置innodb_thread_concurrency=128，并通过不断的降低这个参数，96<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 64等等，直到发现能够提供最佳性能的线程数，例如，假设系统通常有40到50个用户，但定期的数量增加至60，70，甚至200。你会发现，性能在80个并发用户设置时表现稳定，如果高于这个数，性能反而下降。在这种情况下，建议设置innodb_thread_concurrency参数为80，以避免影响性能。如果你不希望InnoDB使用的虚拟CPU数量比用户线程使用的虚拟CPU更多（比如20个虚拟CPU），建议通过设置innodb_thread_concurrency 参数为这个值（也可能更低，这取决于性能体现），如果你的目标是将MySQL与其他应用隔离，你可以l考虑绑定mysqld进程到专有的虚拟CPU。但是需 要注意的是，这种绑定，在myslqd进程一直不是很忙的情况下，可能会导致非最优的硬件使用率。在这种情况下，你可能会设置mysqld进程绑定的虚拟 CPU，允许其他应用程序使用虚拟CPU的一部分或全部。在某些情况下，最佳的innodb_thread_concurrency参数设置可以比虚拟CPU的数量小。定期检测和分析系统，负载量、用户数或者工作环境的改变可能都需要对innodb_thread_concurrency参数的设置进行调整。2<span class="token punctuation">.</span> show processlist<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># 查看当前的并发连接数据队列。</span>建议： 先设置较小值。8 ，不断观察队列。3<span class="token punctuation">.</span> 观察 TOP中，每颗CPU的负载情况。案例： top cpu负载十分不均匀<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="key-buffer-size"><a href="#key-buffer-size" class="headerlink" title="key_buffer_size"></a>key_buffer_size</h4><pre class="line-numbers language-powershell"><code class="language-powershell">功能：      1<span class="token punctuation">.</span> MyISAM索引缓冲。XXX     2<span class="token punctuation">.</span> 内存临时表缓冲。（join  <span class="token function">group</span> by   disticnt   union ）     临时表：            1<span class="token punctuation">.</span> 磁盘，ibtmpN           2<span class="token punctuation">.</span> 缓冲区设定依据：  mysql> show status like <span class="token string">"created_tmp%"</span><span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> Variable_name           <span class="token punctuation">|</span> Value <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> Created_tmp_disk_tables <span class="token punctuation">|</span> 10    <span class="token punctuation">|</span><span class="token punctuation">|</span> Created_tmp_files       <span class="token punctuation">|</span> 6     <span class="token punctuation">|</span><span class="token punctuation">|</span> Created_tmp_tables      <span class="token punctuation">|</span> 100   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>磁盘临时表控制在10<span class="token operator">%</span>以内， 如果超过，两种方案优化1<span class="token punctuation">.</span> 加大 key_buffer_sizetmp_table_size=200M2<span class="token punctuation">.</span> 业务上减少结果集大小。尽量控制查询条件，精细化。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="糗事："><a href="#糗事：" class="headerlink" title="糗事："></a>糗事：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">学员添加了监控项，监控：磁盘临时表百分比。告警。每到夜黑风高的时候，都会手机告警。组里也有领导。mysqldump 备份时，会大量使用磁盘临时表。在调用mysqldump备份数据时，大概执行步骤如下：180322 17:39:33       7 Connect     root@localhost on7 Query       <span class="token operator">/</span>*<span class="token operator">!</span>40100 <span class="token function">SET</span> @@SQL_MODE=<span class="token string">''</span> <span class="token operator">*</span><span class="token operator">/</span>7 Init DB     guo7 Query       SHOW TABLES LIKE <span class="token string">'guo'</span>7 Query       LOCK TABLES `guo` READ <span class="token operator">/</span>*<span class="token operator">!</span>32311 LOCAL <span class="token operator">*</span><span class="token operator">/</span>7 Query       <span class="token function">SET</span> OPTION SQL_QUOTE_SHOW_CREATE=17 Query       show create table `guo`7 Query       show fields <span class="token keyword">from</span> `guo`7 Query       show table status like <span class="token string">'guo'</span>7 Query       <span class="token function">SELECT</span> <span class="token operator">/</span>*<span class="token operator">!</span>40001 SQL_NO_CACHE <span class="token operator">*</span><span class="token operator">/</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> `guo`7 Query       UNLOCK TABLESsort_buffer_size     ： 排序缓冲区。 索引设计不好。    order by  desc <span class="token punctuation">(</span>8<span class="token punctuation">.</span>0解决<span class="token punctuation">)</span> 、<span class="token function">group</span> by 自动排序<span class="token punctuation">(</span>8<span class="token punctuation">.</span>0解决<span class="token punctuation">)</span> join_buffer_size     :  BNL  BKA 。  索引设计不好。   read_rnd_buffer_size :  MRR 优化目标： 越小越好。方式： 1<span class="token punctuation">.</span> 减少排序结果集  2<span class="token punctuation">.</span> 优化索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-SQL层面"><a href="#2-SQL层面" class="headerlink" title="2-SQL层面"></a>2-SQL层面</h1><pre class="line-numbers language-powershell"><code class="language-powershell">query_cache_size :作用：SQL层查询缓存，<span class="token function">select</span> HASH_ID <span class="token operator">+</span> 结果。学员案例： 案例 ： 开QC ，导致性能降低。 QPS ，TPS降低。没开起的时候。QPS 2000 TPS 500 开了之后直接降低到 800，200 为什么呢？分区表。Query Cache 不支持。<span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city where id=10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-InnoDB参数"><a href="#1-InnoDB参数" class="headerlink" title="1- InnoDB参数"></a>1- InnoDB参数</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># innodb_adaptive_hash_index （AHI） </span><span class="token comment" spellcheck="true"># innodb_buffer_pool_instances=4-8个</span><span class="token comment" spellcheck="true"># innodb_buffer_pool_size =50%-80%，建议不要超过75% </span><span class="token comment" spellcheck="true"># innodb_file_per_table  # 独立表空间</span><span class="token comment" spellcheck="true"># innodb_data_file_path # 共享表空间，建议2-3个  512M-4G</span><span class="token comment" spellcheck="true"># innodb_doublewrite    </span><span class="token comment" spellcheck="true"># 双写。8.0.20之前在，ibdataN ,2M空间。checkpoint时，分两次，每次1M写入DWB。然后刷脏页到ibd</span><span class="token comment" spellcheck="true"># innodb_flush_log_at_trx_commit</span><span class="token comment" spellcheck="true"># 双一之一： </span>    1<span class="token punctuation">.</span> 每次事务提交，立即触发刷写，立即fsync<span class="token punctuation">(</span><span class="token punctuation">)</span>将redo落盘。    0<span class="token punctuation">.</span> 每秒事务提交，立即触发刷写，立即fsync<span class="token punctuation">(</span><span class="token punctuation">)</span>将redo落盘。     2<span class="token punctuation">.</span> 每次事务提交，立即触发刷写OS cache，每秒fsync<span class="token punctuation">(</span><span class="token punctuation">)</span>将redo落盘。 <span class="token comment" spellcheck="true"># innodb_flush_method</span>  fsync   :  redo和数据刷盘都经历OS cache，再到磁盘  O_Direct： 数据直接刷盘，日志经历OS cache ，再到磁盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-看磁盘类型设置"><a href="#2-看磁盘类型设置" class="headerlink" title="2-看磁盘类型设置"></a>2-看磁盘类型设置</h2><pre><code>innodb_io_capacity  #一次性写多少到磁盘 并发多少数据也innodb_io_capacity_max| innodb_io_capacity                                       | 200                                                                                      || innodb_io_capacity_max                                   | 2000   </code></pre><h2 id="3-锁等待时间。"><a href="#3-锁等待时间。" class="headerlink" title="3-锁等待时间。"></a>3-锁等待时间。</h2><pre><code>innodb_lock_wait_timeout=10</code></pre><h2 id="4-redo有关-，TPS有关"><a href="#4-redo有关-，TPS有关" class="headerlink" title="4- redo有关 ，TPS有关"></a>4- redo有关 ，TPS有关</h2><pre class="line-numbers language-powershell"><code class="language-powershell">innodb_log_buffer_size=文件倍数   innodb_log_file_size=512M<span class="token operator">-</span>4Ginnodb_log_files_in_group=2<span class="token operator">-</span>4组         <span class="token comment" spellcheck="true"># checkpoint 相关机制</span><span class="token comment" spellcheck="true"># 1. sharp ckpt （必然发生的）</span>数据库关机触发。<span class="token comment" spellcheck="true"># 2. fuzzy ckpt （可能发生的）</span><span class="token comment" spellcheck="true"># master thread checkpoint</span>每1秒有可能每10秒有可能<span class="token comment" spellcheck="true"># flush_lru_list checkpoint</span>innodb_lru_scan_depth=1024<span class="token comment" spellcheck="true"># async/sync flush checkpoint</span>2个redo <span class="token punctuation">,</span>1G ==>    2G75<span class="token operator">%</span>    1<span class="token punctuation">.</span>5G    <span class="token operator">--</span><span class="token operator">-</span>》 可能发生的90<span class="token operator">%</span>    1<span class="token punctuation">.</span>8G    <span class="token operator">--</span><span class="token operator">-</span>》 必然<span class="token comment" spellcheck="true"># dirty page too much checkpoint</span>innodb_max_dirty_pages_pct=75<span class="token operator">%</span>  <span class="token comment" spellcheck="true"># innodb_open_files   InnoDB能够打开文件句柄。</span><span class="token comment" spellcheck="true"># innodb_temp_data_file_path               | ibtmp1:12M:autoextend  |</span><span class="token comment" spellcheck="true"># undo 的设置：3-4个,1-4G左右</span>innodb_max_undo_log_size                  <span class="token punctuation">|</span> 1073741824 <span class="token punctuation">|</span>innodb_undo_directory                     <span class="token punctuation">|</span> <span class="token punctuation">.</span><span class="token operator">/</span>         <span class="token punctuation">|</span>innodb_undo_log_truncate                 <span class="token punctuation">|</span> OFF        <span class="token punctuation">|</span>innodb_undo_logs                        <span class="token punctuation">|</span> 128        <span class="token punctuation">|</span>innodb_undo_tablespaces                  <span class="token punctuation">|</span> 0          <span class="token punctuation">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-业务层面优化建议"><a href="#3-业务层面优化建议" class="headerlink" title="3-业务层面优化建议"></a>3-业务层面优化建议</h1><pre class="line-numbers language-powershell"><code class="language-powershell">  用户权限优化建议 规范：      1<span class="token punctuation">.</span> 用户要和业务有关。     例如：zbx_user  zbx_admin <span class="token punctuation">.</span><span class="token punctuation">.</span>     2<span class="token punctuation">.</span> 密码复杂度     建议3种复杂度，12位以上。     定期进行更改。     3<span class="token punctuation">.</span>用户密码专人管理，超级管理员多人持有部分。     4<span class="token punctuation">.</span>开发或业务用户，不直接登陆数据库。经过审计平台、堡垒机等机制。     5<span class="token punctuation">.</span> 权限最小化。3<span class="token punctuation">.</span>4<span class="token punctuation">.</span>2 SQL规范      1<span class="token punctuation">.</span> schema 设计        库： 大小写、业务相关、字符集、校对规则。        表： 一大堆规范、范式。         2<span class="token punctuation">.</span> DROP操作避免使用     3<span class="token punctuation">.</span> ON<span class="token operator">-</span>DDL     4<span class="token punctuation">.</span> SQL 优化     5<span class="token punctuation">.</span> 合理的优化器算法     6<span class="token punctuation">.</span> 大事务：批量更新、批量删除、批量的插入，夜里去做，拆分小事务。3<span class="token punctuation">.</span>4<span class="token punctuation">.</span>3 索引引用    聚簇索引数字自增    降低索引树高度    联合索引覆盖长度    减少回表。    创建索引规范。    不走索引情况。    慢日志分析。3<span class="token punctuation">.</span>4<span class="token punctuation">.</span>4 锁方面优化 3<span class="token punctuation">.</span>5 架构优化 主从       ：5<span class="token punctuation">.</span>7 以上GTID 。 高可用     : MHA 、PXC 、ORCH 、InnoDB CLuster（MGR）读写分离   : ProxySQL  分布式架构 : Mycat 、 DBLENoSQL 架构 ：MongoDB、Redis、ES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-锁的监控及处理思路"><a href="#1-锁的监控及处理思路" class="headerlink" title="1-锁的监控及处理思路"></a>1-锁的监控及处理思路</h2><pre class="line-numbers language-powershell"><code class="language-powershell">背景: 硬件环境: DELL R720<span class="token punctuation">,</span>E系列16核<span class="token punctuation">,</span>96G MEM<span class="token punctuation">,</span>SAS<span class="token operator">*</span>900G<span class="token operator">*</span>6<span class="token punctuation">,</span>RAID10在例行巡检时<span class="token punctuation">,</span>发现9<span class="token operator">-</span>11点时间段的CPU压力非常高<span class="token punctuation">(</span>80<span class="token operator">-</span>90<span class="token operator">%</span><span class="token punctuation">)</span>2<span class="token punctuation">.</span> 项目的职责    2<span class="token punctuation">.</span>1 通过top详细排查<span class="token punctuation">,</span>发现mysqld进程占比达到了700<span class="token operator">-</span>800<span class="token operator">%</span>    2<span class="token punctuation">.</span>2 其中有量的CPU是被用作的SYS和WAIT<span class="token punctuation">,</span>us处于正常    2<span class="token punctuation">.</span>3 怀疑是MySQL 锁 或者SQL语句出了问题    2<span class="token punctuation">.</span>4 经过排查slowlog及锁等待情况<span class="token punctuation">,</span>发现有大量锁等待及少量慢语句        <span class="token punctuation">(</span>1<span class="token punctuation">)</span> pt<span class="token operator">-</span>query<span class="token operator">-</span>diagest 查看慢日志      <span class="token punctuation">(</span>2<span class="token punctuation">)</span> 锁等待有没有?    db03 <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span>>show status like <span class="token string">'innodb_row_lock%'</span><span class="token punctuation">;</span>    <span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>    <span class="token punctuation">|</span> Variable_name                 <span class="token punctuation">|</span> Value <span class="token punctuation">|</span>    <span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>    <span class="token punctuation">|</span> Innodb_row_lock_current_waits <span class="token punctuation">|</span> 0     <span class="token punctuation">|</span>    <span class="token punctuation">|</span> Innodb_row_lock_time          <span class="token punctuation">|</span> 0     <span class="token punctuation">|</span>    <span class="token punctuation">|</span> Innodb_row_lock_time_avg      <span class="token punctuation">|</span> 0     <span class="token punctuation">|</span>    <span class="token punctuation">|</span> Innodb_row_lock_time_max      <span class="token punctuation">|</span> 0     <span class="token punctuation">|</span>    <span class="token punctuation">|</span> Innodb_row_lock_waits         <span class="token punctuation">|</span> 0     <span class="token punctuation">|</span>    <span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>    情况一:            有100多个current_waits<span class="token punctuation">,</span>说明当前很多锁等待情况    情况二:            1000多个lock_waits<span class="token punctuation">,</span>说明历史上发生过的锁等待很多    2<span class="token punctuation">.</span>5 查看那个事务在等待<span class="token punctuation">(</span>被阻塞了<span class="token punctuation">)</span>    2<span class="token punctuation">.</span>6 查看锁源事务信息<span class="token punctuation">(</span>谁锁的我<span class="token punctuation">)</span>    2<span class="token punctuation">.</span>7 找到锁源的thread_id     2<span class="token punctuation">.</span>8 找到锁源的SQL语句3<span class="token punctuation">.</span> 找到语句之后<span class="token punctuation">,</span>和应用开发人员进行协商       <span class="token punctuation">(</span>1<span class="token punctuation">)</span>    开发人员描述<span class="token punctuation">,</span>此语句是事务挂起导致    我们提出建议是临时<span class="token function">kill</span> 会话<span class="token punctuation">,</span>最终解决问题    <span class="token punctuation">(</span>2<span class="token punctuation">)</span>     开发人员查看后<span class="token punctuation">,</span>发现是业务逻辑问题导致的死锁<span class="token punctuation">,</span>产生了大量锁等待    临时解决方案<span class="token punctuation">,</span>将阻塞事务的会话<span class="token function">kill</span>掉<span class="token punctuation">.</span>    最终解决方案<span class="token punctuation">,</span>修改代码中的业务逻辑项目结果:    经过排查处理<span class="token punctuation">,</span>锁等待的个数减少80<span class="token operator">%</span><span class="token punctuation">.</span>解决了CPU持续峰值的问题<span class="token punctuation">.</span>    锁等待   db01 <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span>>show variables like <span class="token string">'innodb_lock_%'</span><span class="token punctuation">;</span>    <span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> Variable_name                  <span class="token punctuation">|</span> Value <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> innodb_lock_wait_timeout       <span class="token punctuation">|</span> 50    <span class="token punctuation">|</span><span class="token punctuation">|</span> innodb_locks_unsafe_for_binlog <span class="token punctuation">|</span> OFF   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-锁监控设计到的命令"><a href="#2-锁监控设计到的命令" class="headerlink" title="2-锁监控设计到的命令:"></a>2-锁监控设计到的命令:</h2><pre class="line-numbers language-mysql"><code class="language-mysql">db01 [test]>show status like '%Innodb_row_lock%';| Variable_name                 | Value |+-------------------------------+-------+| Innodb_row_lock_current_waits | 1     || Innodb_row_lock_time          | 11019 || Innodb_row_lock_time_avg      | 5509  || Innodb_row_lock_time_max      | 11019 || Innodb_row_lock_waits         | 2     |+-------------------------------+-------+select * from information_schema.innodb_trx;select * from sys.innodb_lock_waits;db01 [information_schema]>select  locked_table,  locked_index , locked_type , waiting_trx_id , waiting_query,blocking_pid,sql_kill_blocking_query,sql_kill_blocking_connection from sys.innodb_lock_waits\G*************************** 1. row ***************************                locked_table: `oldboy`.`t_100w`                locked_index: GEN_CLUST_INDEX                 locked_type: RECORD              waiting_trx_id: 36476               waiting_query: delete from t_100w where id<100                blocking_pid: 4159     sql_kill_blocking_query: KILL QUERY 4159sql_kill_blocking_connection: KILL 41591 row in set, 3 warnings (0.00 sec)select * from performance_schema.threads;db01 [oldboy]>select * from performance_schema.threads where  PROCESSLIST_ID=4159\G*************************** 1. row ***************************          THREAD_ID: 4184               NAME: thread/sql/one_connection               TYPE: FOREGROUND     PROCESSLIST_ID: 4159   PROCESSLIST_USER: root   PROCESSLIST_HOST: localhost     PROCESSLIST_DB: oldboyPROCESSLIST_COMMAND: Query   PROCESSLIST_TIME: 0  PROCESSLIST_STATE: Sending data   PROCESSLIST_INFO: select * from performance_schema.threads where  PROCESSLIST_ID=4159   PARENT_THREAD_ID: NULL               ROLE: NULL       INSTRUMENTED: YES            HISTORY: YES    CONNECTION_TYPE: Socket       THREAD_OS_ID: 232541 row in set (0.00 sec)select * from performance_schema.events_statements_history;db01 [oldboy]>select * from performance_schema.events_statements_history where THREAD_ID=4184\G              THREAD_ID: 28               EVENT_ID: 7           END_EVENT_ID: 7             EVENT_NAME: statement/sql/update                 SOURCE:             TIMER_START: 155851067318000              TIMER_END: 166897698699000             TIMER_WAIT: 11046631381000              LOCK_TIME: 93000000               SQL_TEXT: NULL                 DIGEST: ddce0acdde4f229129910fe210d79711            DIGEST_TEXT: UPDATE `t100w` SET `num` = ? WHERE `id` = ? <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-MySQL-PT工具使用"><a href="#4-MySQL-PT工具使用" class="headerlink" title="4- MySQL PT工具使用"></a>4- MySQL PT工具使用</h1><pre><code>[root@db01 ~]# yum install -y percona-toolkit-3.1.0-2.el7.x86_64.rpm</code></pre><h2 id="1-系统配置总览"><a href="#1-系统配置总览" class="headerlink" title="1. 系统配置总览"></a>1. 系统配置总览</h2><pre class="line-numbers language-powershell"><code class="language-powershell">pt<span class="token operator">-</span>summary 作用： 系统同状态总览。2<span class="token punctuation">.</span> 表归档：pt<span class="token operator">-</span>archiver<span class="token comment" spellcheck="true"># 重要参数</span><span class="token operator">--</span>limit 100         每次取100行数据用pt<span class="token operator">-</span>archive处理    <span class="token operator">--</span>txn<span class="token operator">-</span>size  100     设置100行为一个事务提交一次，    <span class="token operator">--</span>where <span class="token string">'id&lt;3000'</span>   设置操作条件    <span class="token operator">--</span>progress 5000     每处理5000行输出一次处理信息    <span class="token operator">--</span>statistics        输出执行过程及最后的操作统计。<span class="token operator">--</span>charset=UTF8      指定字符集为UTF8—这个最后加上不然可能出现乱码。    <span class="token operator">--</span>bulk<span class="token operator">-</span>delete       批量删除source上的旧数据<span class="token punctuation">(</span>例如每次1000行的批量删除操作<span class="token punctuation">)</span><span class="token operator">--</span><span class="token keyword">for</span><span class="token operator">-</span>update：      在每个<span class="token function">select</span>语句后面加入<span class="token keyword">for</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-使用案例："><a href="#2-使用案例：" class="headerlink" title="2-使用案例："></a>2-使用案例：</h2><pre class="line-numbers language-mysql"><code class="language-mysql">归档到数据库(本地)db01 [test]>grant all on *.* to root@'10.0.1.%' identified by '123';---------------db01 [world]>create table city2   like city ;Query OK, 0 rows affected (0.06 sec)---------------------------pt-archiver --source h=10.0.1.51,D=world,t=city,u=root,p=123 --dest h=10.0.0.51,D=world,t=city2,u=root,p=123 --where 'id<1000' --no-check-charset --no-delete --limit=100 --commit-each --progress 200 --statistics# 归档到数据库(异地) 3307 节点 远程登录用户pt-archiver --source h=10.0.1.51,D=world,t=city,u=root,p=123 --dest h=10.0.1.51,D=world,t=city2,u=root,P=3307,p=123 --where 'id<1000' --no-check-charset --no-delete --limit=100 --commit-each --progress 200 --statistics# 只清理数据  删除pt-archiver --source h=10.0.0.51,D=world,t=city,u=root,p=123 --where 'id<1000' --purge --limit=1 --no-check-charset# 只把数据导出到外部文件，但是不删除源表里的数据pt-archiver --source h=10.0.1.51,D=world,t=city,u=root,p=123 --where 'id>900' --no-check-charset --no-delete --file="/tmp/archiver.csv" <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-pt-osc-Online-DDL"><a href="#3-pt-osc-Online-DDL" class="headerlink" title="3. pt-osc Online DDL"></a>3. pt-osc Online DDL</h2><pre class="line-numbers language-powershell"><code class="language-powershell">原理： 1、检查更改表是否有主键或唯一索引，是否有触发器2、检查修改表的表结构，创建一个临时表，在新表上执行ALTER TABLE语句3、在源表上创建三个触发器分别对于INSERT UPDATE DELETE操作4、从源表拷贝数据到临时表，在拷贝过程中，对源表的更新操作会写入到新建表中5、将临时表和源表rename（需要元数据修改锁，需要短时间锁表）6、删除源表和触发器，完成表结构的修改。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-pt-osc工具限制"><a href="#4-pt-osc工具限制" class="headerlink" title="4-pt-osc工具限制"></a>4-pt-osc工具限制</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1、源表必须有主键或唯一索引，如果没有工具将停止工作2、如果线上的复制环境过滤器操作过于复杂，工具将无法工作3、如果开启复制延迟检查，但主从延迟时，工具将暂停数据拷贝工作4、如果开启主服务器负载检查，但主服务器负载较高时，工具将暂停操作5、当表使用外键时，如果未使用<span class="token operator">--</span>alter<span class="token operator">-</span>foreign<span class="token operator">-</span>keys<span class="token operator">-</span>method参数，工具将无法执行6、只支持Innodb存储引擎表，且要求服务器上有该表1倍以上的空闲空间。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-pt-osc之alter语句限制"><a href="#5-pt-osc之alter语句限制" class="headerlink" title="5-pt-osc之alter语句限制"></a>5-pt-osc之alter语句限制</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1、不需要包含alter table关键字，可以包含多个修改操作，使用逗号分开，如<span class="token string">"drop clolumn c1, add column c2 int"</span>2、不支持rename语句来对表进行重命名操作3、不支持对索引进行重命名操作4、如果删除外键，需要对外键名加下划线，如删除外键fk_uid<span class="token punctuation">,</span> 修改语句为<span class="token string">"DROP FOREIGN KEY _fk_uid"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-pt-osc之命令模板"><a href="#6-pt-osc之命令模板" class="headerlink" title="6-pt-osc之命令模板"></a>6-pt-osc之命令模板</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">## --execute表示执行</span><span class="token comment" spellcheck="true">## --dry-run表示只进行模拟测试</span><span class="token comment" spellcheck="true">## 表名只能使用参数t来设置，没有长参数</span>pt<span class="token operator">-</span>online<span class="token operator">-</span>schema<span class="token operator">-</span>change \<span class="token operator">--</span>host=<span class="token string">"127.0.0.1"</span> \<span class="token operator">--</span>port=3358 \<span class="token operator">--</span>user=<span class="token string">"root"</span> \<span class="token operator">--</span>password=<span class="token string">"root@root"</span> \<span class="token operator">--</span>charset=<span class="token string">"utf8"</span> \<span class="token operator">--</span>max<span class="token operator">-</span>lag=10 \<span class="token operator">--</span>check<span class="token operator">-</span>salve<span class="token operator">-</span>lag=<span class="token string">'xxx.xxx.xxx.xxx'</span> \<span class="token operator">--</span>recursion<span class="token operator">-</span>method=<span class="token string">"hosts"</span> \<span class="token operator">--</span>check<span class="token operator">-</span>interval=2 \<span class="token operator">--</span>database=<span class="token string">"testdb1"</span> \ t=<span class="token string">"tb001"</span> \<span class="token operator">--</span>alter=<span class="token string">"add column c4 int"</span> \<span class="token operator">--</span>execute例子：pt<span class="token operator">-</span>online<span class="token operator">-</span>schema<span class="token operator">-</span>change <span class="token operator">--</span>user=root <span class="token operator">--</span>password=123 <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">--</span>alter <span class="token string">"add column age int default 0"</span> D=world<span class="token punctuation">,</span>t=city <span class="token operator">--</span>print <span class="token operator">--</span>execute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-主从一致性校验"><a href="#5-主从一致性校验" class="headerlink" title="5-主从一致性校验"></a>5-主从一致性校验</h1><pre class="line-numbers language-powershell"><code class="language-powershell">（1） 创建数据库Create database pt CHARACTER <span class="token function">SET</span> utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 创建用户checksum并授权</span>GRANT ALL ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'checksum'</span>@<span class="token string">'10.0.1.%'</span> IDENTIFIED BY <span class="token string">'checksum'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span class="token operator">--</span><span class="token namespace">[no]</span>check<span class="token operator">-</span>replication<span class="token operator">-</span>filters：是否检查复制的过滤器，默认是yes，建议启用不检查模式。<span class="token operator">--</span>databases <span class="token punctuation">|</span> <span class="token operator">-</span>d：指定需要被检查的数据库，多个库之间可以用逗号分隔。<span class="token operator">--</span><span class="token namespace">[no]</span>check<span class="token operator">-</span>binlog<span class="token operator">-</span>format：是否检查binlog文件的格式，默认值yes。建议开启不检查。因为在默认的row格式下会出错。<span class="token operator">--</span>replicate：把checksum的信息写入到指定表中。<span class="token operator">--</span>replicate<span class="token operator">-</span>check<span class="token operator">-</span>only：只显示不同步信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-小坑"><a href="#1-小坑" class="headerlink" title="1-小坑"></a>1-小坑</h2><pre class="line-numbers language-powershell"><code class="language-powershell">所有库： autocommit=1从库 ： report_host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51report_port=3309<span class="token comment" spellcheck="true"># 应用：</span>针对表校验： pt<span class="token operator">-</span>table<span class="token operator">-</span>checksum <span class="token operator">--</span>nocheck<span class="token operator">-</span>replication<span class="token operator">-</span>filters <span class="token operator">--</span>no<span class="token operator">-</span>check<span class="token operator">-</span>binlog<span class="token operator">-</span>format <span class="token operator">--</span>replicate=pt<span class="token punctuation">.</span>checksums <span class="token operator">--</span>create<span class="token operator">-</span>replicate<span class="token operator">-</span>table <span class="token operator">--</span>databases=taobao <span class="token operator">--</span>tables=a h=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51<span class="token punctuation">,</span>u=checksum<span class="token punctuation">,</span>p=checksum<span class="token punctuation">,</span>P=3307针对库校验： pt<span class="token operator">-</span>table<span class="token operator">-</span>checksum <span class="token operator">--</span>nocheck<span class="token operator">-</span>replication<span class="token operator">-</span>filters <span class="token operator">--</span>no<span class="token operator">-</span>check<span class="token operator">-</span>binlog<span class="token operator">-</span>format <span class="token operator">--</span>replicate=pt<span class="token punctuation">.</span>checksums <span class="token operator">--</span>create<span class="token operator">-</span>replicate<span class="token operator">-</span>table <span class="token operator">--</span>databases=test  h=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>51<span class="token punctuation">,</span>u=checksum<span class="token punctuation">,</span>p=checksum<span class="token punctuation">,</span>P=3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-脚本模板："><a href="#2-脚本模板：" class="headerlink" title="2-脚本模板："></a>2-脚本模板：</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#!/bin/bash</span>date >> <span class="token operator">/</span>root<span class="token operator">/</span>db<span class="token operator">/</span>checksum<span class="token punctuation">.</span>logpt<span class="token operator">-</span>table<span class="token operator">-</span>checksum <span class="token operator">--</span>nocheck<span class="token operator">-</span>binlog<span class="token operator">-</span>format <span class="token operator">--</span>nocheck<span class="token operator">-</span>plan<span class="token operator">--</span>nocheck<span class="token operator">-</span>replication<span class="token operator">-</span>filters <span class="token operator">--</span>replicate=pt<span class="token punctuation">.</span>checksums <span class="token operator">--</span><span class="token function">set</span><span class="token operator">-</span>varsinnodb_lock_wait_timeout=120 <span class="token operator">--</span>databases test <span class="token operator">-</span>u<span class="token string">'checksum'</span> <span class="token operator">-</span>p<span class="token string">'checksum'</span><span class="token operator">-</span>h<span class="token string">'10.0.0.11'</span> >> <span class="token operator">/</span>root<span class="token operator">/</span>db<span class="token operator">/</span>checksum<span class="token punctuation">.</span>logdate >> <span class="token operator">/</span>root<span class="token operator">/</span>db<span class="token operator">/</span>checksum<span class="token punctuation">.</span>log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-pt-table-sync"><a href="#6-pt-table-sync" class="headerlink" title="6-pt-table-sync"></a>6-pt-table-sync</h1><pre class="line-numbers language-powershell"><code class="language-powershell">主要参数介绍<span class="token operator">--</span>replicate ：指定通过pt<span class="token operator">-</span>table<span class="token operator">-</span>checksum得到的表<span class="token punctuation">.</span><span class="token operator">--</span>databases : 指定执行同步的数据库。<span class="token operator">--</span>tables ：指定执行同步的表，多个用逗号隔开。<span class="token operator">--</span>sync<span class="token operator">-</span>to<span class="token operator">-</span>master ：指定一个DSN，即从的IP，他会通过show processlist或show slave status 去自动的找主。h= ：服务器地址，命令里有2个ip，第一次出现的是Master的地址，第2次是Slave的地址。u= ：帐号。p= ：密码。<span class="token operator">--</span>print ：打印，但不执行命令。<span class="token operator">--</span>execute ：执行命令。pt<span class="token operator">-</span>table<span class="token operator">-</span>sync <span class="token operator">--</span>replicate=pt<span class="token punctuation">.</span>checksums h=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51<span class="token punctuation">,</span>u=root<span class="token punctuation">,</span>p=123<span class="token punctuation">,</span>P=3307 <span class="token operator">--</span>printpt<span class="token operator">-</span>table<span class="token operator">-</span>sync <span class="token operator">--</span>replicate=pt<span class="token punctuation">.</span>checksums h=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51<span class="token punctuation">,</span>u=root<span class="token punctuation">,</span>p=123<span class="token punctuation">,</span>P=3307 <span class="token operator">--</span>execute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-显示主从结构：pt-slave-find"><a href="#1-显示主从结构：pt-slave-find" class="headerlink" title="1-显示主从结构：pt-slave-find"></a>1-显示主从结构：pt-slave-find</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 tmp]</span><span class="token comment" spellcheck="true"># pt-slave-find -h10.0.0.51  -P3307 -uchecksum -pchecksum</span>10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51Version         5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>28<span class="token operator">-</span>logServer ID       51Uptime          27:57 <span class="token punctuation">(</span>started 2020<span class="token operator">-</span>05<span class="token operator">-</span>15T13:24:15<span class="token punctuation">)</span>Replication     Is not a slave<span class="token punctuation">,</span> has 1 slaves connected<span class="token punctuation">,</span> is not read_onlyFilters         Binary logging  ROWSlave status    Slave mode      STRICTAuto<span class="token operator">-</span>increment  increment 1<span class="token punctuation">,</span> offset 1InnoDB version  5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>28<span class="token operator">+</span><span class="token operator">-</span> 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52   Version         5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>28<span class="token operator">-</span>log   Server ID       52   Uptime          28:18 <span class="token punctuation">(</span>started 2020<span class="token operator">-</span>05<span class="token operator">-</span>15T13:23:54<span class="token punctuation">)</span>   Replication     Is a slave<span class="token punctuation">,</span> has 0 slaves connected<span class="token punctuation">,</span> is not read_only   Filters            Binary logging  ROW   Slave status    0 seconds behind<span class="token punctuation">,</span> running<span class="token punctuation">,</span> no errors   Slave mode      STRICT   Auto<span class="token operator">-</span>increment  increment 1<span class="token punctuation">,</span> offset 1   InnoDB version  5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>28<span class="token namespace">[root@db01 tmp]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-检查指定表的重复索引"><a href="#2-检查指定表的重复索引" class="headerlink" title="2-检查指定表的重复索引"></a>2-检查指定表的重复索引</h2><pre class="line-numbers language-powershell"><code class="language-powershell">pt<span class="token operator">-</span>duplicate<span class="token operator">-</span>key<span class="token operator">-</span>checker db01 <span class="token namespace">[world]</span>>alter table city add index idx<span class="token punctuation">(</span>countrycode<span class="token punctuation">,</span>population<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token namespace">[root@db01 tmp]</span><span class="token comment" spellcheck="true">#pt-duplicate-key-checker  --host=10.0.1.61 --user='checksum' --password='checksum'  --databases=world --tables=city</span><span class="token comment" spellcheck="true"># ########################################################################</span><span class="token comment" spellcheck="true"># world.city                                                              </span><span class="token comment" spellcheck="true"># ########################################################################</span><span class="token comment" spellcheck="true"># CountryCode is a left-prefix of idx</span><span class="token comment" spellcheck="true"># Key definitions:</span><span class="token comment" spellcheck="true">#   KEY `CountryCode` (`CountryCode`),</span><span class="token comment" spellcheck="true">#   KEY `idx` (`CountryCode`,`Population`),</span><span class="token comment" spellcheck="true"># Column types:</span><span class="token comment" spellcheck="true">#      `countrycode` char(3) not null default ''</span><span class="token comment" spellcheck="true">#      `population` int(11) not null default '0'</span><span class="token comment" spellcheck="true"># To remove this duplicate index, execute:</span>ALTER TABLE `world`<span class="token punctuation">.</span>`city` DROP INDEX `CountryCode`<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># ########################################################################</span><span class="token comment" spellcheck="true"># Summary of indexes                                                      </span><span class="token comment" spellcheck="true"># ########################################################################</span><span class="token comment" spellcheck="true"># Size Duplicate Indexes   12564</span><span class="token comment" spellcheck="true"># Total Duplicate Indexes  1</span><span class="token comment" spellcheck="true"># Total Indexes            4</span><span class="token namespace">[root@db01 tmp]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-监控主从延时"><a href="#3-监控主从延时" class="headerlink" title="3- 监控主从延时"></a>3- 监控主从延时</h2><pre class="line-numbers language-powershell"><code class="language-powershell">pt<span class="token operator">-</span>heartbeat 主库： pt<span class="token operator">-</span>heartbeat <span class="token operator">--</span>user=root <span class="token operator">--</span>ask<span class="token operator">-</span>pass <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>61 <span class="token operator">--</span>port=3307   <span class="token operator">--</span>create<span class="token operator">-</span>table <span class="token operator">-</span>D taobao   <span class="token operator">--</span>interval=1  <span class="token operator">--</span>update  <span class="token operator">--</span>replace  <span class="token operator">--</span>daemonize从库： pt<span class="token operator">-</span>heartbeat <span class="token operator">--</span>user=root <span class="token operator">--</span>ask<span class="token operator">-</span>pass <span class="token operator">--</span>host=10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>61 <span class="token operator">--</span>port=3309  <span class="token operator">-</span>D taobao <span class="token operator">--</span>table=heartbeat <span class="token operator">--</span>monitor 8<span class="token punctuation">.</span> <span class="token comment" spellcheck="true"># pt-show-grants</span>pt<span class="token operator">-</span>show<span class="token operator">-</span>grants <span class="token operator">-</span>h10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1<span class="token punctuation">.</span>51  <span class="token operator">-</span>P3307  <span class="token operator">-</span>uchecksum <span class="token operator">-</span>pchecksum <span class="token operator">--</span> Grants dumped by pt<span class="token operator">-</span>show<span class="token operator">-</span>grants<span class="token operator">--</span> Dumped <span class="token keyword">from</span> server 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 via TCP<span class="token operator">/</span>IP<span class="token punctuation">,</span> MySQL 5<span class="token punctuation">.</span>7<span class="token punctuation">.</span>28<span class="token operator">-</span>log at 2020<span class="token operator">-</span>05<span class="token operator">-</span>15 17:11:06<span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'checksum'</span>@<span class="token string">'10.0.0.%'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'checksum'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'checksum'</span>@<span class="token string">'10.0.0.%'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*E5E390AF1BDF241B51D9C0DBBEA262CC9407A2DF'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK<span class="token punctuation">;</span>GRANT ALL PRIVILEGES ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'checksum'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT LOCK<span class="token punctuation">;</span>GRANT <span class="token function">SELECT</span> ON `mysql`<span class="token punctuation">.</span>`user` TO <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>GRANT <span class="token function">SELECT</span> ON `performance_schema`<span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>GRANT SUPER ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'mysql.session'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span><span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT LOCK<span class="token punctuation">;</span>GRANT <span class="token function">SELECT</span> ON `sys`<span class="token punctuation">.</span>`sys_config` TO <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>GRANT TRIGGER ON `sys`<span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>GRANT USAGE ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'mysql.sys'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span><span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'repl'</span>@<span class="token string">'10.0.0.%'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'repl'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'repl'</span>@<span class="token string">'10.0.0.%'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*23AE809DDACAF96AF0FD78ED04B6A265E05AA257'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK<span class="token punctuation">;</span>GRANT REPLICATION SLAVE ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'repl'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'root'</span>@<span class="token string">'10.0.0.%'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'root'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'root'</span>@<span class="token string">'10.0.0.%'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*23AE809DDACAF96AF0FD78ED04B6A265E05AA257'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK<span class="token punctuation">;</span>GRANT ALL PRIVILEGES ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'root'</span>@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span class="token operator">--</span> Grants <span class="token keyword">for</span> <span class="token string">'root'</span>@<span class="token string">'localhost'</span>CREATE USER <span class="token keyword">IF</span> NOT EXISTS <span class="token string">'root'</span>@<span class="token string">'localhost'</span><span class="token punctuation">;</span>ALTER USER <span class="token string">'root'</span>@<span class="token string">'localhost'</span> IDENTIFIED WITH <span class="token string">'mysql_native_password'</span> AS <span class="token string">'*23AE809DDACAF96AF0FD78ED04B6A265E05AA257'</span> REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK<span class="token punctuation">;</span>GRANT ALL PRIVILEGES ON <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> TO <span class="token string">'root'</span>@<span class="token string">'localhost'</span> WITH GRANT OPTION<span class="token punctuation">;</span>GRANT PROXY ON <span class="token string">''</span>@<span class="token string">''</span> TO <span class="token string">'root'</span>@<span class="token string">'localhost'</span> WITH GRANT OPTION<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.02s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]0.00s [ 20.10s,  4.02s,  1.34s ]</code></pre><hr><pre><code># 给出参数建议： pt-variable-advisor 10.0.0.51 -uchecksum -pchecksum</code></pre>]]></content>
      
      
      <categories>
          
          <category> kvm openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 云计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12分布式架构-Mycat</title>
      <link href="/2020/05/17/12-fen-bu-shi-jia-gou-mycat/"/>
      <url>/2020/05/17/12-fen-bu-shi-jia-gou-mycat/</url>
      
        <content type="html"><![CDATA[<h1 id="1-分布式架构-Mycat"><a href="#1-分布式架构-Mycat" class="headerlink" title="1-分布式架构-Mycat"></a>1-分布式架构-Mycat</h1><ol><li><blockquote><p><strong>基础环境准备</strong></p></blockquote></li></ol><blockquote><p><strong>1.1 环境准备：</strong><br><strong>两台虚拟机 db01 db02</strong><br><strong>每台创建四个mysql实例：3307 3308 3309 3310</strong></p></blockquote><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200519182456-1590230629683.png" alt="QQ图片20200519182456"></p><h2 id="1-搭建开始"><a href="#1-搭建开始" class="headerlink" title="1-搭建开始"></a>1-搭建开始</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>2 删除历史环境：pkill mysqld<span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>33<span class="token punctuation">{</span>07<span class="token punctuation">.</span><span class="token punctuation">.</span>10<span class="token punctuation">}</span> <span class="token function">mv</span> <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token punctuation">.</span>bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-创建相关目录初始化数据"><a href="#2-3-创建相关目录初始化数据" class="headerlink" title="2.3 创建相关目录初始化数据"></a>2.3 创建相关目录初始化数据</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mkdir <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>33<span class="token punctuation">{</span>07<span class="token punctuation">.</span><span class="token punctuation">.</span>10<span class="token punctuation">}</span><span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">-</span>pmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user=mysql <span class="token operator">--</span>datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user=mysql <span class="token operator">--</span>datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user=mysql <span class="token operator">--</span>datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user=mysql <span class="token operator">--</span>datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span><span class="token keyword">data</span> <span class="token operator">--</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-准备配置文件和启动脚本"><a href="#2-4-准备配置文件和启动脚本" class="headerlink" title="2.4 准备配置文件和启动脚本"></a>2.4 准备配置文件和启动脚本</h3><h4 id="db01"><a href="#db01" class="headerlink" title="db01"></a>db01</h4><pre class="line-numbers language-powershell"><code class="language-powershell">========db01==============<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3307log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=7gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span><span class="token keyword">data</span>port=3308socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=8gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3309log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=9gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3310log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=10gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3307<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3308<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3309<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3310<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="db02"><a href="#db02" class="headerlink" title="db02"></a>db02</h4><pre class="line-numbers language-powershell"><code class="language-powershell">========db02===============<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3307log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=17gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span><span class="token keyword">data</span>port=3308socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=18gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3309log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=19gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf&lt;&lt;EOF<span class="token namespace">[mysqld]</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockport=3310log<span class="token operator">-</span>error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>loglog_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token operator">-</span>binbinlog_format=rowskip<span class="token operator">-</span>name<span class="token operator">-</span>resolveserver<span class="token operator">-</span>id=20gtid<span class="token operator">-</span>mode=onenforce<span class="token operator">-</span>gtid<span class="token operator">-</span>consistency=truelog<span class="token operator">-</span>slave<span class="token operator">-</span>updates=1EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3307<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3308<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3309<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span class="token function">cat</span> ><span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld3310<span class="token punctuation">.</span>service&lt;&lt;EOF<span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-修改权限，启动多实例"><a href="#2-5-修改权限，启动多实例" class="headerlink" title="2.5 修改权限，启动多实例"></a>2.5 修改权限，启动多实例</h3><pre class="line-numbers language-powershell"><code class="language-powershell">chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span>/<span class="token operator">*</span>systemctl <span class="token function">start</span> mysqld3307systemctl <span class="token function">start</span> mysqld3308systemctl <span class="token function">start</span> mysqld3309systemctl <span class="token function">start</span> mysqld3310mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show variables like 'server_id'"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show variables like 'server_id'"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show variables like 'server_id'"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show variables like 'server_id'"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-节点主从规划"><a href="#2-6-节点主从规划" class="headerlink" title="2.6 节点主从规划"></a>2.6 节点主从规划</h3><pre class="line-numbers language-powershell"><code class="language-powershell">     10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3307    &lt;<span class="token operator">--</span>-<span class="token operator">--</span>>  10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3307    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3309    <span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>>  10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3307    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3309    <span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>>  10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3307    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3308  &lt;<span class="token operator">--</span>-<span class="token operator">--</span>>    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3308    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3310  <span class="token operator">--</span>-<span class="token operator">--</span>>     10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3308    10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3310  <span class="token operator">--</span>-<span class="token operator">--</span>>     10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3308<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-分片规划"><a href="#2-7-分片规划" class="headerlink" title="2.7 分片规划"></a>2.7 分片规划</h3><pre class="line-numbers language-powershell"><code class="language-powershell">shard1：    Master：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3307    slave1：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3309    Standby Master：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3307    slave2：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3309<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">shard2：    Master：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3308    slave1：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>52:3310    Standby Master：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3308    slave2：10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51:3310<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-开始配置主从环境"><a href="#2-开始配置主从环境" class="headerlink" title="2.开始配置主从环境"></a>2.开始配置主从环境</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># shard1</span><span class="token comment" spellcheck="true">##  10.0.0.51:3307 &lt;-----> 10.0.0.52:3307</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># db02</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"grant replication slave on *.* to repl@'10.0.0.%' identified by '123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"grant all  on *.* to root@'10.0.0.%' identified by '123'  with grant option;"</span><span class="token comment" spellcheck="true"># db01</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.52', MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true"># db02</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.51', MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true">## 10.0.0.51:3309 ------> 10.0.0.51:3307</span><span class="token comment" spellcheck="true"># db01</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.51', MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true">## 10.0.0.52:3309 ------> 10.0.0.52:3307</span><span class="token comment" spellcheck="true"># db02</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.52', MASTER_PORT=3307, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span>====================================================================<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code># shard2## 10.0.0.52:3308 &lt;-----&gt; 10.0.0.51:3308</code></pre><hr><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># db01</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"grant replication slave on *.* to repl@'10.0.0.%' identified by '123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"grant all  on *.* to root@'10.0.0.%' identified by '123'  with grant option;"</span><span class="token comment" spellcheck="true"># db02</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.51', MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true"># db01</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.52', MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true">## 10.0.0.52:3310 -----> 10.0.0.52:3308</span><span class="token comment" spellcheck="true"># db02</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.52', MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token comment" spellcheck="true">##10.0.0.51:3310 -----> 10.0.0.51:3308</span><span class="token comment" spellcheck="true"># db01</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"CHANGE MASTER TO MASTER_HOST='10.0.0.51', MASTER_PORT=3308, MASTER_AUTO_POSITION=1, MASTER_USER='repl', MASTER_PASSWORD='123';"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"start slave;"</span>mysql  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-检测主从状态"><a href="#1-检测主从状态" class="headerlink" title="1- 检测主从状态"></a>1- 检测主从状态</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token punctuation">|</span>grep Yesmysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token punctuation">|</span>grep Yesmysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token punctuation">|</span>grep Yesmysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"show slave status\G"</span><span class="token punctuation">|</span>grep Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200519182508-1590230629683.png" alt="QQ图片20200519182508"></p><h5 id="失败重构建主从"><a href="#失败重构建主从" class="headerlink" title="失败重构建主从"></a>失败重构建主从</h5><pre class="line-numbers language-powershell"><code class="language-powershell">+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span><span class="token operator">+</span>注：如果中间出现错误，在每个节点进行执行以下命令，从2<span class="token punctuation">.</span>8从头执行mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"stop slave; reset slave all;"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"stop slave; reset slave all;"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3309<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"stop slave; reset slave all;"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3310<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"stop slave; reset slave all;"</span><span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-MyCAT安装"><a href="#3-MyCAT安装" class="headerlink" title="3-MyCAT安装"></a>3-MyCAT安装</h2><h3 id="1-预先安装Java运行环境"><a href="#1-预先安装Java运行环境" class="headerlink" title="1 预先安装Java运行环境"></a>1 预先安装Java运行环境</h3><pre class="line-numbers language-powershell"><code class="language-powershell">yum install <span class="token operator">-</span>y java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2下载"><a href="#2下载" class="headerlink" title="2下载"></a>2下载</h3><pre><code>Mycat-server-xxxxx.linux.tar.gzhttp://dl.mycat.io/</code></pre><h3 id="3-解压文件"><a href="#3-解压文件" class="headerlink" title="3 解压文件"></a>3 解压文件</h3><pre><code>tar xf Mycat-server-*</code></pre><h3 id="4-软件目录结构"><a href="#4-软件目录结构" class="headerlink" title="4 软件目录结构"></a>4 软件目录结构</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db_01 /data/app/mycat]</span> <span class="token comment" spellcheck="true"># ll</span>total 12drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x 2 root root  190 May 19 15:50 bindrwxrwxrwx 2 root root    6 Oct 22  2019 catletdrwxrwxrwx 4 root root 4096 May 19 17:54 confdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x 2 root root 4096 May 19 15:50 libdrwxrwxrwx 3 root root   92 May 19 17:55 logsdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x 2 root root    6 May 19 15:55 tmlogs<span class="token operator">-</span>rwxrwxrwx 1 root root  227 Jan  5 16:41 version<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-启动和连接"><a href="#5-启动和连接" class="headerlink" title="5 启动和连接"></a>5 启动和连接</h3><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span>5<span class="token punctuation">.</span>1 配置环境变量vim <span class="token operator">/</span>etc<span class="token operator">/</span>profileexport PATH=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mycat<span class="token operator">/</span>bin:<span class="token variable">$PATH</span>source <span class="token operator">/</span>etc<span class="token operator">/</span>profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-启动"><a href="#6-启动" class="headerlink" title="6-启动"></a>6-启动</h3><pre><code>mycat start</code></pre><h3 id="连接mycat："><a href="#连接mycat：" class="headerlink" title="连接mycat："></a>连接mycat：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1 <span class="token operator">-</span>P8066<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2-配置文件介绍应用"><a href="#2-配置文件介绍应用" class="headerlink" title="2-配置文件介绍应用"></a>2-配置文件介绍应用</h1><pre class="line-numbers language-powershell"><code class="language-powershell">4<span class="token punctuation">.</span>1 bin 目录程序目录4<span class="token punctuation">.</span>2 conf 配置文件目录4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1 schema<span class="token punctuation">.</span>xml主配置文件：节点信息、读写分离、高可用设置、调用分片策略<span class="token punctuation">.</span><span class="token punctuation">.</span>4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>2 rule<span class="token punctuation">.</span>xml分片策略的定义、功能、使用用方法4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>3 server<span class="token punctuation">.</span>xmlmycat服务有关配置： 用户、网络、权限、策略、资源<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>4 xx<span class="token punctuation">.</span>txt文件分片参数定义文件4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>5 log4j2<span class="token punctuation">.</span>xmlMycat 相关日志记录配置4<span class="token punctuation">.</span>3 logswrapper<span class="token punctuation">.</span>log : 启动日志  mycat<span class="token punctuation">.</span>log   ：工作日志<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-Mycat核心应用"><a href="#1-Mycat核心应用" class="headerlink" title="1-Mycat核心应用"></a>1-Mycat核心应用</h2><h3 id="1-schema-xml配置文件结构"><a href="#1-schema-xml配置文件结构" class="headerlink" title="1.  schema.xml配置文件结构"></a>1.  schema.xml配置文件结构</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">mv</span> schema<span class="token punctuation">.</span>xml schema<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bakvim schema<span class="token punctuation">.</span>xml <span class="token comment" spellcheck="true"># 逻辑库： </span>&lt;schema name=<span class="token string">"TESTDB"</span> checkSQLschema=<span class="token string">"false"</span> sqlMaxLimit=<span class="token string">"100"</span> dataNode=<span class="token string">"dn1"</span>> &lt;<span class="token operator">/</span>schema>  <span class="token comment" spellcheck="true"># DN数据节点（逻辑分片）：数据节点（逻辑分片）： </span>    &lt;dataNode name=<span class="token string">"dn1"</span> dataHost=<span class="token string">"localhost1"</span> database= <span class="token string">"world"</span> <span class="token operator">/</span>>      作用：     垂直和水平查分。    <span class="token comment" spellcheck="true"># DH 数据主机</span>作用： 高可用和读写分离    &lt;dataHost name=<span class="token string">"localhost1"</span> maxCon=<span class="token string">"1000"</span> minCon=<span class="token string">"10"</span> balance=<span class="token string">"1"</span>  writeType=<span class="token string">"0"</span> dbType=<span class="token string">"mysql"</span>  dbDriver=<span class="token string">"native"</span> switchType=<span class="token string">"1"</span>>         &lt;heartbeat><span class="token function">select</span> user<span class="token punctuation">(</span><span class="token punctuation">)</span>&lt;<span class="token operator">/</span>heartbeat>      &lt;writeHost host=<span class="token string">"db1"</span> url=<span class="token string">"10.0.0.51:3307"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>             &lt;readHost host=<span class="token string">"db2"</span> url=<span class="token string">"10.0.0.51:3309"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>     &lt;<span class="token operator">/</span>writeHost>     &lt;<span class="token operator">/</span>dataHost>  &lt;<span class="token operator">/</span>mycat:schema><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200519182517-1590230629684.png" alt="QQ图片20200519182517"><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200519182512-1590230629684.png" alt="QQ图片20200519182512"></p><h2 id="2-高可用和读写分离"><a href="#2-高可用和读写分离" class="headerlink" title="2-高可用和读写分离"></a>2-高可用和读写分离</h2><pre class="line-numbers language-perl"><code class="language-perl"><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token punctuation">[</span>root<span class="token variable">@db_01</span> <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mycat<span class="token operator">/</span>conf<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># cat schema.xml.rw </span><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span><span class="token operator">?</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mycat<span class="token punctuation">:</span>schema SYSTEM <span class="token string">"schema.dtd"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>mycat<span class="token punctuation">:</span>schema xmlns<span class="token punctuation">:</span>mycat<span class="token operator">=</span><span class="token string">"http://io.mycat/"</span><span class="token operator">></span><span class="token operator">&lt;</span>schema name<span class="token operator">=</span><span class="token string">"TESTDB"</span> checkSQLschema<span class="token operator">=</span><span class="token string">"false"</span> sqlMaxLimit<span class="token operator">=</span><span class="token string">"100"</span> dataNode<span class="token operator">=</span><span class="token string">"dn1"</span><span class="token operator">></span> <span class="token filehandle symbol">&lt;/schema></span>      <span class="token operator">&lt;</span>dataNode name<span class="token operator">=</span><span class="token string">"dn1"</span> dataHost<span class="token operator">=</span><span class="token string">"localhost1"</span> database<span class="token operator">=</span> <span class="token string">"world"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>dataHost name<span class="token operator">=</span><span class="token string">"localhost1"</span> maxCon<span class="token operator">=</span><span class="token string">"1000"</span> minCon<span class="token operator">=</span><span class="token string">"10"</span> balance<span class="token operator">=</span><span class="token string">"1"</span>  writeType<span class="token operator">=</span><span class="token string">"0"</span> dbType<span class="token operator">=</span><span class="token string">"mysql"</span>  dbDriver<span class="token operator">=</span><span class="token string">"native"</span> switchType<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>         <span class="token filehandle symbol">&lt;heartbeat></span>select user<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token filehandle symbol">&lt;/heartbeat></span>      <span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"db1"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3307"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"db2"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3309"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>     <span class="token filehandle symbol">&lt;/writeHost></span>     <span class="token filehandle symbol">&lt;/dataHost></span>  <span class="token filehandle symbol">&lt;/mycat:schema></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-测试环境准备"><a href="#2-测试环境准备" class="headerlink" title="2. 测试环境准备"></a>2. 测试环境准备</h3><pre class="line-numbers language-powershell"><code class="language-powershell">db01:mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock grant all on <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> to root@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>source <span class="token operator">/</span>root<span class="token operator">/</span>world<span class="token punctuation">.</span>sqlmysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock grant all on <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> to root@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>source <span class="token operator">/</span>root<span class="token operator">/</span>world<span class="token punctuation">.</span>sql重启mycatmycat restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读写分离测试"><a href="#3-读写分离测试" class="headerlink" title="3.  读写分离测试"></a>3.  读写分离测试</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 连接mycat 服务</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -uroot -p123456 -h 10.0.0.51 -P8066</span><span class="token comment" spellcheck="true"># 测试读</span>mysql> <span class="token function">select</span> @@server_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 测试写</span>mysql> <span class="token keyword">begin</span> <span class="token punctuation">;</span> <span class="token function">select</span> @@server_id<span class="token punctuation">;</span>commit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-配置读写分离及高可用-宕机切换"><a href="#3-配置读写分离及高可用-宕机切换" class="headerlink" title="3. 配置读写分离及高可用_宕机切换"></a>3. 配置读写分离及高可用_宕机切换</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># mv schema.xml schema.xml.rw</span><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># vim schema.xml</span>&lt;?xml version=<span class="token string">"1.0"</span>?>  &lt;<span class="token operator">!</span>DOCTYPE mycat:schema SYSTEM <span class="token string">"schema.dtd"</span>>  &lt;mycat:schema xmlns:mycat=<span class="token string">"http://io.mycat/"</span>>&lt;schema name=<span class="token string">"TESTDB"</span> checkSQLschema=<span class="token string">"false"</span> sqlMaxLimit=<span class="token string">"100"</span> dataNode=<span class="token string">"sh1"</span>> &lt;<span class="token operator">/</span>schema>      &lt;dataNode name=<span class="token string">"sh1"</span> dataHost=<span class="token string">"oldguo1"</span> database= <span class="token string">"world"</span> <span class="token operator">/</span>>      &lt;dataHost name=<span class="token string">"oldguo1"</span> maxCon=<span class="token string">"1000"</span> minCon=<span class="token string">"10"</span> balance=<span class="token string">"1"</span>  writeType=<span class="token string">"0"</span> dbType=<span class="token string">"mysql"</span>  dbDriver=<span class="token string">"native"</span> switchType=<span class="token string">"1"</span>>         &lt;heartbeat><span class="token function">select</span> user<span class="token punctuation">(</span><span class="token punctuation">)</span>&lt;<span class="token operator">/</span>heartbeat>      &lt;writeHost host=<span class="token string">"db1"</span> url=<span class="token string">"10.0.0.51:3307"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>             &lt;readHost host=<span class="token string">"db2"</span> url=<span class="token string">"10.0.0.51:3309"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>     &lt;<span class="token operator">/</span>writeHost>     &lt;writeHost host=<span class="token string">"db3"</span> url=<span class="token string">"10.0.0.52:3307"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>             &lt;readHost host=<span class="token string">"db4"</span> url=<span class="token string">"10.0.0.52:3309"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>     &lt;<span class="token operator">/</span>writeHost>            &lt;<span class="token operator">/</span>dataHost>  &lt;<span class="token operator">/</span>mycat:schema><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解说"><a href="#解说" class="headerlink" title="解说"></a>解说</h3><pre class="line-numbers language-mysql"><code class="language-mysql">真正的 writehost    ：负责写操作的writehost  standby  writeHost  ：和readhost一样，只提供读服务当写节点宕机后，后面跟的readhost也不提供服务，这时候standby的writehost就提供写服务，后面跟的readhost提供读服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试读写分离："><a href="#测试读写分离：" class="headerlink" title="测试读写分离："></a>测试读写分离：</h3><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">mycat restartmysql -uroot -p123456 -h 10.0.0.51  -P 8066mysql> select @@server_id;mysql> begin;select @@server_id;commit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试高可用："><a href="#测试高可用：" class="headerlink" title="测试高可用："></a>测试高可用：</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># systemctl stop mysqld3307</span>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51  <span class="token operator">-</span>P 8066mysql> <span class="token function">select</span> @@server_id<span class="token punctuation">;</span>mysql> <span class="token keyword">begin</span><span class="token punctuation">;</span><span class="token function">select</span> @@server_id<span class="token punctuation">;</span>commit<span class="token punctuation">;</span><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3307</span>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51  <span class="token operator">-</span>P 8066mysql> <span class="token function">select</span> @@server_id<span class="token punctuation">;</span>mysql> <span class="token keyword">begin</span><span class="token punctuation">;</span><span class="token function">select</span> @@server_id<span class="token punctuation">;</span>commit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-参数介绍"><a href="#4-参数介绍" class="headerlink" title="4.  ==参数介绍=="></a>4.  ==参数介绍==</h2><pre class="line-numbers language-powershell"><code class="language-powershell">5<span class="token punctuation">.</span>1 balance属性读操作负载均衡类型，目前的取值有3种： 1<span class="token punctuation">.</span> balance=<span class="token string">"0"</span><span class="token punctuation">,</span> 不开启读写分离机制，所有读操作都发送到当前可用的writeHost上。 2<span class="token punctuation">.</span> balance=<span class="token string">"1"</span>，全部的readHost与standby writeHost参与<span class="token function">select</span>语句的负载均衡，简单的说，  当双主双从模式<span class="token punctuation">(</span>M1<span class="token operator">-</span>>S1，M2<span class="token operator">-</span>>S2，并且M1与 M2互为主备<span class="token punctuation">)</span>，正常情况下，M2<span class="token punctuation">,</span>S1<span class="token punctuation">,</span>S2都参与<span class="token function">select</span>语句的负载均衡。 3<span class="token punctuation">.</span> balance=<span class="token string">"2"</span>，所有读操作都随机的在writeHost、readhost上分发。5<span class="token punctuation">.</span>2 writeType属性写操作，负载均衡类型，目前的取值有2种： 1<span class="token punctuation">.</span> writeType=<span class="token string">"0"</span><span class="token punctuation">,</span> 所有写操作发送到配置的第一个writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为主，切换记录在配置文件中:dnindex<span class="token punctuation">.</span>properties <span class="token punctuation">.</span> 2<span class="token punctuation">.</span> writeType=“1”，所有写操作都随机的发送到配置的writeHost，但不推荐使用5<span class="token punctuation">.</span>3 switchType属性<span class="token operator">-</span>1 表示不自动切换 1 默认值，自动切换 2 基于MySQL主从同步的状态决定是否切换 ，心跳语句为 show slave status datahost其他配置5<span class="token punctuation">.</span>4  连接有关maxCon=<span class="token string">"1000"</span>：最大的并发连接数minCon=<span class="token string">"10"</span> ：mycat在启动之后，会在后端节点上自动开启的连接线程5<span class="token punctuation">.</span>5 tempReadHostAvailable=<span class="token string">"1"</span>这个一主一从时（1个writehost，1个readhost时），可以开启这个参数，如果2个writehost，2个readhost时&lt;heartbeat><span class="token function">select</span> user<span class="token punctuation">(</span><span class="token punctuation">)</span>&lt;<span class="token operator">/</span>heartbeat>  监测心跳<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-Mycat-分布式架构–垂直分表"><a href="#5-Mycat-分布式架构–垂直分表" class="headerlink" title="5.Mycat 分布式架构–垂直分表"></a>5.Mycat 分布式架构–垂直分表</h2><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/image-20200519210513498-1590230629684.png" alt="image-20200519210513498"></p><pre class="line-numbers language-powershell"><code class="language-powershell">cd <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mycat<span class="token operator">/</span>conf<span class="token function">mv</span>  schema<span class="token punctuation">.</span>xml  schema<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>ha vim schema<span class="token punctuation">.</span>xml&lt;?xml version=<span class="token string">"1.0"</span>?>&lt;<span class="token operator">!</span>DOCTYPE mycat:schema SYSTEM <span class="token string">"schema.dtd"</span>>&lt;mycat:schema xmlns:mycat=<span class="token string">"http://io.mycat/"</span>>&lt;schema name=<span class="token string">"TESTDB"</span> checkSQLschema=<span class="token string">"false"</span> sqlMaxLimit=<span class="token string">"100"</span> dataNode=<span class="token string">"sh1"</span>>        &lt;table name=<span class="token string">"user"</span> dataNode=<span class="token string">"sh1"</span><span class="token operator">/</span>>        &lt;table name=<span class="token string">"order_t"</span> dataNode=<span class="token string">"sh2"</span><span class="token operator">/</span>>&lt;<span class="token operator">/</span>schema>    &lt;dataNode name=<span class="token string">"sh1"</span> dataHost=<span class="token string">"oldguo1"</span> database= <span class="token string">"taobao"</span> <span class="token operator">/</span>>    &lt;dataNode name=<span class="token string">"sh2"</span> dataHost=<span class="token string">"oldguo2"</span> database= <span class="token string">"taobao"</span> <span class="token operator">/</span>>    &lt;dataHost name=<span class="token string">"oldguo1"</span> maxCon=<span class="token string">"1000"</span> minCon=<span class="token string">"10"</span> balance=<span class="token string">"1"</span>  writeType=<span class="token string">"0"</span> dbType=<span class="token string">"mysql"</span>  dbDriver=<span class="token string">"native"</span> switchType=<span class="token string">"1"</span>>        &lt;heartbeat><span class="token function">select</span> user<span class="token punctuation">(</span><span class="token punctuation">)</span>&lt;<span class="token operator">/</span>heartbeat>    &lt;writeHost host=<span class="token string">"db1"</span> url=<span class="token string">"10.0.0.51:3307"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>            &lt;readHost host=<span class="token string">"db2"</span> url=<span class="token string">"10.0.0.51:3309"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>    &lt;<span class="token operator">/</span>writeHost>    &lt;writeHost host=<span class="token string">"db3"</span> url=<span class="token string">"10.0.0.52:3307"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>            &lt;readHost host=<span class="token string">"db4"</span> url=<span class="token string">"10.0.0.52:3309"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>    &lt;<span class="token operator">/</span>writeHost>    &lt;<span class="token operator">/</span>dataHost>    &lt;dataHost name=<span class="token string">"oldguo2"</span> maxCon=<span class="token string">"1000"</span> minCon=<span class="token string">"10"</span> balance=<span class="token string">"1"</span>  writeType=<span class="token string">"0"</span> dbType=<span class="token string">"mysql"</span>  dbDriver=<span class="token string">"native"</span> switchType=<span class="token string">"1"</span>>        &lt;heartbeat><span class="token function">select</span> user<span class="token punctuation">(</span><span class="token punctuation">)</span>&lt;<span class="token operator">/</span>heartbeat>    &lt;writeHost host=<span class="token string">"db1"</span> url=<span class="token string">"10.0.0.51:3308"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>            &lt;readHost host=<span class="token string">"db2"</span> url=<span class="token string">"10.0.0.51:3310"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>    &lt;<span class="token operator">/</span>writeHost>    &lt;writeHost host=<span class="token string">"db3"</span> url=<span class="token string">"10.0.0.52:3308"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span>>            &lt;readHost host=<span class="token string">"db4"</span> url=<span class="token string">"10.0.0.52:3310"</span> user=<span class="token string">"root"</span> password=<span class="token string">"123"</span> <span class="token operator">/</span>>    &lt;<span class="token operator">/</span>writeHost>    &lt;<span class="token operator">/</span>dataHost>&lt;<span class="token operator">/</span>mycat:schema><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建测试库和表"><a href="#创建测试库和表" class="headerlink" title="创建测试库和表:"></a>创建测试库和表:</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"create database taobao charset utf8;"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"create database taobao charset utf8;"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table user(id int,name varchar(20))"</span><span class="token punctuation">;</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table order_t(id int,name varchar(20))"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code># 重启mycat mycat restart;</code></pre><pre><code># mycat中对user  和 order 数据插入[root@db01 conf]# mysql -uroot -p123456 -h 10.0.0.51  -P 8066mysql&gt; insert into user values(1,&#39;a&#39;);mysql&gt; insert into user values(2,&#39;b&#39;);mysql&gt; insert into user values(3,&#39;c&#39;);mysql&gt; commit;mysql&gt; insert into order_t values(1,&#39;x&#39;),(2,&#39;y&#39;);mysql&gt; commit;</code></pre><pre><code>[root@db01 conf]# mysql -S /data/3307/mysql.sock -e &quot;show tables from taobao&quot;+------------------+| Tables_in_taobao |+------------------+| user             |+------------------+[root@db01 conf]# mysql -S /data/3308/mysql.sock -e &quot;show tables from taobao&quot;+------------------+| Tables_in_taobao |+------------------+| order_t          |+------------------+[root@db01 conf]# mysql -S /data/3307/mysql.sock -e &quot;select * from taobao.user&quot;+------+------+| id   | name |+------+------+|    1 | a    ||    2 | b    ||    3 | c    |+------+------+[root@db01 conf]# mysql -S /data/3308/mysql.sock -e &quot;select * from taobao.order_t&quot;+------+------+| id   | name |+------+------+|    1 | x    ||    2 | y    |+------+------+[root@db01 conf]# </code></pre><h2 id="6-Mycat-分布式架构–水平拆分"><a href="#6-Mycat-分布式架构–水平拆分" class="headerlink" title="6.Mycat 分布式架构–水平拆分"></a>6.Mycat 分布式架构–水平拆分</h2><h3 id="重要概念"><a href="#重要概念" class="headerlink" title="重要概念"></a>重要概念</h3><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/image-20200519210629628-1590230629684.png" alt="image-20200519210629628"></p><pre><code> 分片策略 ：几乎融合经典业务中大部分的分片策略。Mycat已经开发了相应算法，非常方便调用。    范围分片     取模     枚举    日期    HASH    等。  分片键： 作为分片条件的列。7.1 范围分片比如说t3表(1)行数非常多，2000w（1-1000w:sh1   1000w01-2000w:sh2）(2)访问非常频繁，用户访问较离散</code></pre><h3 id="1-修改schema-xml文件，定制分片策略"><a href="#1-修改schema-xml文件，定制分片策略" class="headerlink" title="1. 修改schema.xml文件，定制分片策略"></a>1. 修改schema.xml文件，定制分片策略</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">cp</span> schema<span class="token punctuation">.</span>xml schema<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>1  vim schema<span class="token punctuation">.</span>xml添加：&lt;table name=<span class="token string">"t3"</span> dataNode=<span class="token string">"sh1,sh2"</span> rule=<span class="token string">"auto-sharding-long"</span> <span class="token operator">/</span>><span class="token comment" spellcheck="true">#把这个一张表拆成两份  通过 auto-sharding-long 策略拆分</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-perl"><code class="language-perl"><span class="token number">2</span><span class="token operator">.</span> 定义和使用分片策略<span class="token punctuation">[</span>root<span class="token variable">@db_01</span> <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mycat<span class="token operator">/</span>conf<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># cat schema.xml</span><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span><span class="token operator">?</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mycat<span class="token punctuation">:</span>schema SYSTEM <span class="token string">"schema.dtd"</span><span class="token operator">></span><span class="token operator">&lt;</span>mycat<span class="token punctuation">:</span>schema xmlns<span class="token punctuation">:</span>mycat<span class="token operator">=</span><span class="token string">"http://io.mycat/"</span><span class="token operator">></span><span class="token operator">&lt;</span>schema name<span class="token operator">=</span><span class="token string">"TESTDB"</span> checkSQLschema<span class="token operator">=</span><span class="token string">"false"</span> sqlMaxLimit<span class="token operator">=</span><span class="token string">"100"</span> dataNode<span class="token operator">=</span><span class="token string">"sh1"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>table name<span class="token operator">=</span><span class="token string">"user"</span> dataNode<span class="token operator">=</span><span class="token string">"sh1"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>table name<span class="token operator">=</span><span class="token string">"order_t"</span> dataNode<span class="token operator">=</span><span class="token string">"sh2"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>table name<span class="token operator">=</span><span class="token string">"t3"</span> dataNode<span class="token operator">=</span><span class="token string">"sh1,sh2"</span> rule<span class="token operator">=</span><span class="token string">"auto-sharding-long"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token filehandle symbol">&lt;/schema></span>    <span class="token operator">&lt;</span>dataNode name<span class="token operator">=</span><span class="token string">"sh1"</span> dataHost<span class="token operator">=</span><span class="token string">"oldguo1"</span> database<span class="token operator">=</span> <span class="token string">"taobao"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dataNode name<span class="token operator">=</span><span class="token string">"sh2"</span> dataHost<span class="token operator">=</span><span class="token string">"oldguo2"</span> database<span class="token operator">=</span> <span class="token string">"taobao"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>dataHost name<span class="token operator">=</span><span class="token string">"oldguo1"</span> maxCon<span class="token operator">=</span><span class="token string">"1000"</span> minCon<span class="token operator">=</span><span class="token string">"10"</span> balance<span class="token operator">=</span><span class="token string">"1"</span>  writeType<span class="token operator">=</span><span class="token string">"0"</span> dbType<span class="token operator">=</span><span class="token string">"mysql"</span>  dbDriver<span class="token operator">=</span><span class="token string">"native"</span> switchType<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>        <span class="token filehandle symbol">&lt;heartbeat></span>select user<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token filehandle symbol">&lt;/heartbeat></span>    <span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"db1"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3307"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"db2"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3309"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token filehandle symbol">&lt;/writeHost></span>    <span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"db3"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.62:3307"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"db4"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.62:3309"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token filehandle symbol">&lt;/writeHost></span>    <span class="token filehandle symbol">&lt;/dataHost></span>    <span class="token operator">&lt;</span>dataHost name<span class="token operator">=</span><span class="token string">"oldguo2"</span> maxCon<span class="token operator">=</span><span class="token string">"1000"</span> minCon<span class="token operator">=</span><span class="token string">"10"</span> balance<span class="token operator">=</span><span class="token string">"1"</span>  writeType<span class="token operator">=</span><span class="token string">"0"</span> dbType<span class="token operator">=</span><span class="token string">"mysql"</span>  dbDriver<span class="token operator">=</span><span class="token string">"native"</span> switchType<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span>        <span class="token filehandle symbol">&lt;heartbeat></span>select user<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token filehandle symbol">&lt;/heartbeat></span>    <span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"db1"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3308"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"db2"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.61:3310"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token filehandle symbol">&lt;/writeHost></span>    <span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"db3"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.62:3308"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"db4"</span> url<span class="token operator">=</span><span class="token string">"10.0.1.62:3310"</span> user<span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token filehandle symbol">&lt;/writeHost></span>    <span class="token filehandle symbol">&lt;/dataHost></span><span class="token filehandle symbol">&lt;/mycat:schema></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-定义范围"><a href="#3-定义范围" class="headerlink" title="3.  定义范围"></a>3.  定义范围</h3><pre class="line-numbers language-powershell"><code class="language-powershell">vim autopartition<span class="token operator">-</span>long<span class="token punctuation">.</span>txt0<span class="token operator">-</span>10=010<span class="token operator">-</span>20=14<span class="token punctuation">.</span> 创建测试表：mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table t3 (id int not null primary key auto_increment,name varchar(20) not null);"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"use taobao;create table t3 (id int not null primary key auto_increment,name varchar(20) not null);"</span>5<span class="token punctuation">.</span> 测试：重启mycatmycat restartmysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">-</span>P 8066insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>1<span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>2<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>3<span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>4<span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>11<span class="token punctuation">,</span><span class="token string">'aa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>12<span class="token punctuation">,</span><span class="token string">'bb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>13<span class="token punctuation">,</span><span class="token string">'cc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t3<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>14<span class="token punctuation">,</span><span class="token string">'dd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># mysql -S /data/3308/mysql.sock  -e "select * from taobao.t3"</span><span class="token namespace">[root@db01 conf]</span><span class="token comment" spellcheck="true"># mysql -S /data/3307/mysql.sock  -e "select * from taobao.t3"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-取模分片"><a href="#7-取模分片" class="headerlink" title="7. 取模分片"></a>7. 取模分片</h2><pre class="line-numbers language-powershell"><code class="language-powershell">取余分片方式：分片键（一个列）与节点数量进行取余，得到余数，将数据写入对应节点<span class="token comment" spellcheck="true"># 1.  修改配置文件</span>vim schema<span class="token punctuation">.</span>xml&lt;table name=<span class="token string">"t4"</span> dataNode=<span class="token string">"sh1,sh2"</span> rule=<span class="token string">"mod-long"</span> <span class="token operator">/</span>><span class="token comment" spellcheck="true"># 2. 查看和定义分片使用</span>vim rule<span class="token punctuation">.</span>xml&lt;property name=<span class="token string">"count"</span>>2&lt;<span class="token operator">/</span>property><span class="token comment" spellcheck="true"># 3. 准备测试环境</span>创建测试表：mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table t4 (id int not null primary key auto_increment,name varchar(20) not null);"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table t4 (id int not null primary key auto_increment,name varchar(20) not null);"</span>重启mycat mycat restart <span class="token comment" spellcheck="true"># 4. 测试： </span>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">-</span>P8066use TESTDBinsert into t4<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>1<span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t4<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>2<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t4<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>3<span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t4<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>4<span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t4<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>6<span class="token punctuation">,</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>8<span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>10<span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>分别登录后端节点查询数据    mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"select * from taobao.t4"</span>    mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"select * from taobao.t4"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-枚举分片"><a href="#8-枚举分片" class="headerlink" title="8.枚举分片"></a>8.枚举分片</h2><pre><code>        &lt;tableRule name=&quot;sharding-by-intfile&quot;&gt;                &lt;rule&gt;                        &lt;columns&gt;name&lt;/columns&gt;                        &lt;algorithm&gt;hash-int&lt;/algorithm&gt;                &lt;/rule&gt;        &lt;/tableRule&gt;</code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">t5 表id name telnum1   bj   12122   sh   222223   bj   33334   sh   444445   bj   5555sharding<span class="token operator">-</span>by<span class="token operator">-</span>intfile<span class="token comment" spellcheck="true"># 1.  设计分片策略</span>vim schema<span class="token punctuation">.</span>xml&lt;table name=<span class="token string">"t5"</span> dataNode=<span class="token string">"sh1,sh2"</span> rule=<span class="token string">"sharding-by-intfile"</span> <span class="token operator">/</span>><span class="token comment" spellcheck="true"># 2. 应用分片策略</span>vim rule<span class="token punctuation">.</span>xml        &lt;tableRule name=<span class="token string">"sharding-by-intfile"</span>>                &lt;rule>                        &lt;columns>name&lt;<span class="token operator">/</span>columns>                        &lt;algorithm>hash<span class="token operator">-</span>int&lt;<span class="token operator">/</span>algorithm>                &lt;<span class="token operator">/</span>rule>        &lt;<span class="token operator">/</span>tableRule>&lt;<span class="token keyword">function</span> name=<span class="token string">"hash-int"</span> <span class="token keyword">class</span>=<span class="token string">"org.opencloudb.route.function.PartitionByFileMap"</span>> &lt;property name=<span class="token string">"mapFile"</span>>partition<span class="token operator">-</span>hash<span class="token operator">-</span>int<span class="token punctuation">.</span>txt&lt;<span class="token operator">/</span>property>   &lt;property name=<span class="token string">"type"</span>>1&lt;<span class="token operator">/</span>property><span class="token comment" spellcheck="true">#参数介绍可以转化中文</span>&lt;<span class="token operator">/</span><span class="token keyword">function</span>> vim  partition<span class="token operator">-</span>hash<span class="token operator">-</span>int<span class="token punctuation">.</span>txt 配置： bj=0 sh=1DEFAULT_NODE=1 <span class="token comment" spellcheck="true"># 3. 准备测试环境</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table t5 (id int not null primary key auto_increment,name varchar(20) not null);"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"use taobao;create table t5 (id int not null primary key auto_increment,name varchar(20) not null);"</span>重启mycat mycat restart <span class="token comment" spellcheck="true"># 4. 插入测试数据：  </span>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>h10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>51 <span class="token operator">-</span>P8066use TESTDBinsert into t5<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>1<span class="token punctuation">,</span><span class="token string">'bj'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t5<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>2<span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t5<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>3<span class="token punctuation">,</span><span class="token string">'bj'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t5<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>4<span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>insert into t5<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> values<span class="token punctuation">(</span>5<span class="token punctuation">,</span><span class="token string">'tj'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3308<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"select * from taobao.t5"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3307<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"select * from taobao.t5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>dble</p><p>##9. mycat全局表</p><pre><code>a   b   c  d   .....join t a  id   name   age 1    zs     182    ls     19  b id    addr  aid 1001  bj    1 1002  sh    2 </code></pre><h3 id="使用场景："><a href="#使用场景：" class="headerlink" title="使用场景："></a>使用场景：</h3><pre><code>如果你的业务中有些数据类似于数据字典，比如配置文件的配置，常用业务的配置或者数据量不大很少变动的表，这些表往往不是特别大，而且大部分的业务场景都会用到，那么这种表适合于Mycat全局表，无须对数据进行切分，要在所有的分片上保存一份数据即可，Mycat 在Join操作中，业务表与全局表进行Join聚合会优先选择相同分片内的全局表join，避免跨库Join，在进行数据插入操作时，mycat将把数据分发到全局表对应的所有分片执行，在进行数据读取时候将会随机获取一个节点读取数据。 </code></pre><h3 id="1-设置全局表策略"><a href="#1-设置全局表策略" class="headerlink" title="1. 设置全局表策略"></a>1. 设置全局表策略</h3><pre class="line-numbers language-powershell"><code class="language-powershell">vim schema<span class="token punctuation">.</span>xml &lt;table name=<span class="token string">"t_area"</span> primaryKey=<span class="token string">"id"</span>  <span class="token function">type</span>=<span class="token string">"global"</span> dataNode=<span class="token string">"sh1,sh2"</span> <span class="token operator">/</span>> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-后端数据准备"><a href="#2-后端数据准备" class="headerlink" title="2. 后端数据准备"></a>2. 后端数据准备</h3><pre class="line-numbers language-CQL"><code class="language-CQL">mysql -S /data/3307/mysql.sock -e "use taobao;create table t_area (id int not null primary key auto_increment,name varchar(20) not null);"mysql -S /data/3308/mysql.sock -e "use taobao;create table t_area (id int not null primary key auto_increment,name varchar(20) not null);"重启mycat mycat restart <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-测试："><a href="#3-测试：" class="headerlink" title="3. 测试："></a>3. 测试：</h3><pre class="line-numbers language-CQL"><code class="language-CQL">mysql -uroot -p123456 -h10.0.0.51 -P8066    use TESTDB    insert into t_area(id,name) values(1,'a');    insert into t_area(id,name) values(2,'b');    insert into t_area(id,name) values(3,'c');    insert into t_area(id,name) values(4,'d');mysql -S /data/3308/mysql.sock  -e "select * from taobao.t_area"mysql -S /data/3307/mysql.sock  -e "select * from taobao.t_area"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-E-R分片"><a href="#10-E-R分片" class="headerlink" title="10.E-R分片"></a>10.E-R分片</h2><pre><code>ajoin b on  a.xx =b.yy </code></pre><h3 id="为了防止跨分片join，可以使用E-R模式"><a href="#为了防止跨分片join，可以使用E-R模式" class="headerlink" title="为了防止跨分片join，可以使用E-R模式"></a>为了防止跨分片join，可以使用E-R模式</h3><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet"><table name="a" dataNode="sh1,sh2" rule="mod-long">        <childTable name="b" joinKey="aid" parentKey="id" /> </table> aid  name             1   a    2   b    3   c    4   d   b id   addr  aid1001  bj   11002  sh   2 1003  tj   31004  wh   4 select * from a join b on a.id = b.aid where a.name=d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><pre class="line-numbers language-SPARQL"><code class="language-SPARQL">vim schema.xml<table name="a" dataNode="sh1,sh2" rule="mod-long_oldguo">        <childTable name="b" joinKey="aid" parentKey="id" /> </table> 2. 修改rule.xml mod-log分片策略:vim rule.xml        <tableRule name="mod-long_oldguo">                <rule>                        <columns>id</columns>                        <algorithm>mod-long_oldguo</algorithm>                </rule>        </tableRule>        <function name="mod-long_oldguo" class="io.mycat.route.function.PartitionByMod">                <!-- how many data nodes -->                <property name="count">2</property>        </function><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-创建测试表"><a href="#3-创建测试表" class="headerlink" title="3. 创建测试表"></a>3. 创建测试表</h3><pre><code>mysql -S /data/3307/mysql.sock -e &quot;use taobao;create table a (id int not null primary key auto_increment,name varchar(20) not null);&quot;mysql -S /data/3307/mysql.sock -e &quot;use taobao;create table b (id int not null primary key auto_increment,addr varchar(20) not null ,aid int );&quot;mysql -S /data/3308/mysql.sock -e &quot;use taobao;create table a (id int not null primary key auto_increment,name varchar(20) not null);&quot;mysql -S /data/3308/mysql.sock -e &quot;use taobao;create table b (id int not null primary key auto_increment,addr varchar(20) not null ,aid int );&quot;</code></pre><h3 id="4-重启mycat-测试"><a href="#4-重启mycat-测试" class="headerlink" title="4. 重启mycat 测试"></a>4. 重启mycat 测试</h3><pre><code>mycat restartmysql -uroot -p123456 -h10.0.0.51 -P8066use TESTDBinsert into a(id,name) values(1,&#39;a&#39;);insert into a(id,name) values(2,&#39;b&#39;);insert into a(id,name) values(3,&#39;c&#39;);insert into a(id,name) values(4,&#39;d&#39;);insert into a(id,name) values(5,&#39;e&#39;);insert into b(id,addr,aid) values(1001,&#39;bj&#39;,1);insert into b(id,addr,aid) values(1002,&#39;sj&#39;,3);insert into b(id,addr,aid) values(1003,&#39;sd&#39;,4);insert into b(id,addr,aid) values(1004,&#39;we&#39;,2);insert into b(id,addr,aid) values(1005,&#39;er&#39;,5);</code></pre><h3 id="后端数据节点数据分布："><a href="#后端数据节点数据分布：" class="headerlink" title="后端数据节点数据分布："></a>后端数据节点数据分布：</h3><pre><code>mysql -S /data/3307/mysql.sock  -e &quot;select * from taobao.a&quot;mysql -S /data/3307/mysql.sock  -e &quot;select * from taobao.b&quot;mysql -S /data/3308/mysql.sock  -e &quot;select * from taobao.a&quot;mysql -S /data/3308/mysql.sock  -e &quot;select * from taobao.b&quot;</code></pre><h1 id="3-管理类操作"><a href="#3-管理类操作" class="headerlink" title="3-管理类操作"></a>3-管理类操作</h1><pre><code>[root@db01 conf]# mysql -uroot -p123456 -h10.0.0.51 -P9066</code></pre><pre><code>查看帮助 show @@help;查看Mycat 服务情况 show @@server ;查看分片信息mysql&gt; show @@datanode;查看数据源show @@datasource重新加载配置信息reload @@config          ： schema.xml                        reload @@config_all      :  所有配置重新加载</code></pre><h2 id="修改逻辑库："><a href="#修改逻辑库：" class="headerlink" title="修改逻辑库："></a>修改逻辑库：</h2><pre><code># 总配置文件schema.xml &lt;schema name=&quot;oldboy&quot; checkSQLschema=&quot;false&quot; sqlMaxLimit=&quot;100&quot; dataNode=&quot;sh1&quot;# mycat 服务配置server.xml &lt;user name=&quot;root&quot; defaultAccount=&quot;true&quot;&gt;                &lt;property name=&quot;password&quot;&gt;123456&lt;/property&gt;                &lt;property name=&quot;schemas&quot;&gt;oldboy&lt;/property&gt;                &lt;property name=&quot;defaultSchema&quot;&gt;oldboy&lt;/property&gt;                &lt;!--No MyCAT Database selected 错误前会尝试使用该schema作为schema，不设置则为null,报错 --&gt;                &lt;!-- 表级 DML 权限设置 --&gt;                &lt;!--                            &lt;privileges check=&quot;false&quot;&gt;                        &lt;schema name=&quot;TESTDB&quot; dml=&quot;0110&quot; &gt;                                &lt;table name=&quot;tb01&quot; dml=&quot;0000&quot;&gt;&lt;/table&gt;                                &lt;table name=&quot;tb02&quot; dml=&quot;1111&quot;&gt;&lt;/table&gt;                        &lt;/schema&gt;                &lt;/privileges&gt;                            --&gt;        &lt;/user&gt;        &lt;user name=&quot;user&quot;&gt;                &lt;property name=&quot;password&quot;&gt;user&lt;/property&gt;                &lt;property name=&quot;schemas&quot;&gt;oldboy&lt;/property&gt;                &lt;property name=&quot;readOnly&quot;&gt;true&lt;/property&gt;                &lt;property name=&quot;defaultSchema&quot;&gt;oldboy&lt;/property&gt;        &lt;/user&gt;reload @@config_all      :  所有配置重新加载</code></pre><h2 id="添加一个逻辑库"><a href="#添加一个逻辑库" class="headerlink" title="添加一个逻辑库"></a>添加一个逻辑库</h2><pre><code>schema.xml &lt;schema name=&quot;oldguo&quot; checkSQLschema=&quot;false&quot; sqlMaxLimit=&quot;100&quot; dataNode=&quot;sh1&quot;&gt;&lt;/schema&gt;server.xml &lt;property name=&quot;schemas&quot;&gt;oldboy,oldguo&lt;/property&gt;mycat restart课后练习：     &lt;tableRule name=&quot;sharding-by-month&quot;&gt;</code></pre><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype">&lt;!DOCTYPE mycat:schema SYSTEM "schema.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mycat:</span>schema</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>mycat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://io.mycat/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schema</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xiaoming<span class="token punctuation">"</span></span> <span class="token attr-name">checkSQLschema</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">sqlMaxLimit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>order_t<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>t3<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1,sh2<span class="token punctuation">"</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>auto-sharding-long<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>t4<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1,sh2<span class="token punctuation">"</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mod-long<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>t5<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1,sh2<span class="token punctuation">"</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sharding-by-intfile<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>t_area<span class="token punctuation">"</span></span> <span class="token attr-name">primaryKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>global<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1,sh2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1,sh2<span class="token punctuation">"</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mod-long<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>childTable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr-name">joinKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>aid<span class="token punctuation">"</span></span> <span class="token attr-name">parentKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schema</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>schema</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xiaohe<span class="token punctuation">"</span></span> <span class="token attr-name">checkSQLschema</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">sqlMaxLimit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">dataNode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sh1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>schema</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-主从复制（Replication）</title>
      <link href="/2020/05/16/10-mysql-zhu-cong-fu-zhi/"/>
      <url>/2020/05/16/10-mysql-zhu-cong-fu-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="10主从复制（Replication）"><a href="#10主从复制（Replication）" class="headerlink" title="10主从复制（Replication）"></a>10主从复制（Replication）</h1><h1 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h1><pre><code>两台或以上数据库实例，通过二进制日志，实现数据的“同步”关系。</code></pre><h1 id="2-主从复制前提（搭建过程）"><a href="#2-主从复制前提（搭建过程）" class="headerlink" title="2-主从复制前提（搭建过程）"></a>2-主从复制前提（搭建过程）</h1><pre class="line-numbers language-powershell"><code class="language-powershell">大家提到的：<span class="token comment" spellcheck="true"># 时间同步</span><span class="token comment" spellcheck="true"># 至少2台以上实例,要有不同角色换分，server_id </span><span class="token comment" spellcheck="true"># 主库开binlog</span><span class="token comment" spellcheck="true"># 网络通畅</span><span class="token comment" spellcheck="true"># 专门开启一个复制用户</span><span class="token comment" spellcheck="true"># 开启专用复制线程</span><span class="token comment" spellcheck="true"># “补课”</span><span class="token comment" spellcheck="true"># 确认复制起点</span><span class="token comment" spellcheck="true">#总结 </span><span class="token comment" spellcheck="true"># 1. 需要2台以上数据库实例，时间同步，网络通畅，Server_id不同，区分不同角色（主库，从库）</span><span class="token comment" spellcheck="true"># 2. 主库开启binlog，建立专用复制用户。</span><span class="token comment" spellcheck="true"># 3. 从库需要提前“补课”</span><span class="token comment" spellcheck="true"># 4. 从库： 主库的链接信息，确认复制起点</span><span class="token comment" spellcheck="true"># 5. 从库： 开启专用的复制线程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-搭建"><a href="#3-搭建" class="headerlink" title="3. 搭建"></a>3. 搭建</h2><p>2台以上的MySQL实例(同版本、同平台),具备不同的server_id,server_uuid</p><table><thead><tr><th>3307</th><th>：主库</th></tr></thead><tbody><tr><td>3308</td><td>：从库</td></tr><tr><td>3309</td><td>：从库</td></tr></tbody></table><hr><h2 id="1-启动"><a href="#1-启动" class="headerlink" title="1-启动"></a>1-启动</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3307</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3308</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3309</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-查询"><a href="#2-查询" class="headerlink" title="2-查询"></a>2-查询</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock -e "select @@server_id ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> @@server_id <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>           7 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock -e "select @@server_id ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> @@server_id <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>           8 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3309.sock -e "select @@server_id ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> @@server_id <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>           9 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3309.sock -e "select @@server_uuid ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@server_uuid                        <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> 1c920eb6<span class="token operator">-</span>901a<span class="token operator">-</span>11ea<span class="token operator">-</span>a2a5<span class="token operator">-</span>000c29248f69 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock -e "select @@server_uuid ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@server_uuid                        <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> 195bb724<span class="token operator">-</span>901a<span class="token operator">-</span>11ea<span class="token operator">-</span>a083<span class="token operator">-</span>000c29248f69 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock -e "select @@server_uuid ;"</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@server_uuid                        <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> 15ac32d2<span class="token operator">-</span>901a<span class="token operator">-</span>11ea<span class="token operator">-</span>9ee5<span class="token operator">-</span>000c29248f69 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-主库：-开启binlog-创建复制用户。"><a href="#3-主库：-开启binlog-创建复制用户。" class="headerlink" title="3-主库： 开启binlog, 创建复制用户。"></a>3-主库： 开启binlog, 创建复制用户。</h2><pre class="line-numbers language-mysql"><code class="language-mysql">vim  /data/3307/my.cnfserver_id=7log_bin=/data/3307/mysql-bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># systemctl restart mysqld3307</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock -e "select @@log_bin ;"</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock -e "grant replication slave on *.* to repl@'10.0.1.%' identified by '123';"</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock -e "select user,host ,plugin from mysql.user;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-主库备份恢复到从库"><a href="#4-主库备份恢复到从库" class="headerlink" title="4-主库备份恢复到从库"></a>4-主库备份恢复到从库</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysqldump -S /tmp/mysql3307.sock  -A --master-data=2 --single-transaction -R -E --triggers --max_allowed_packet=64M >/data/full.sql</span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock&lt;/data/full.sql </span><span class="token namespace">[root@db01 3308]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3309.sock&lt;/data/full.sql </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-告知从库复制的信息："><a href="#5-告知从库复制的信息：" class="headerlink" title="5-告知从库复制的信息："></a>5-告知从库复制的信息：</h2><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# grep "\-- CHANGE MASTER TO" /tmp/all.sql -- CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000002', MASTER_LOG_POS=444;------------或者查看备份help change master to CHANGE MASTER TO  MASTER_HOST='10.0.1.200',  MASTER_USER='repl',  MASTER_PASSWORD='123',  MASTER_PORT=3307,  MASTER_LOG_FILE='mysql-bin.000001',  MASTER_LOG_POS=444,  MASTER_CONNECT_RETRY=10;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="从库"><a href="#从库" class="headerlink" title="从库"></a>从库</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock</span>CHANGE MASTER TO  MASTER_HOST=<span class="token string">'10.0.0.51'</span><span class="token punctuation">,</span>  MASTER_USER=<span class="token string">'repl'</span><span class="token punctuation">,</span>  MASTER_PASSWORD=<span class="token string">'123'</span><span class="token punctuation">,</span>  MASTER_PORT=3307<span class="token punctuation">,</span>  MASTER_LOG_FILE=<span class="token string">'mysql-bin.000002'</span><span class="token punctuation">,</span>  MASTER_LOG_POS=444<span class="token punctuation">,</span>  MASTER_CONNECT_RETRY=10<span class="token punctuation">;</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3309.sock</span>CHANGE MASTER TO MASTER_HOST=<span class="token string">'10.0.0.51'</span><span class="token punctuation">,</span> MASTER_USER=<span class="token string">'repl'</span><span class="token punctuation">,</span> MASTER_PASSWORD=<span class="token string">'123'</span><span class="token punctuation">,</span> MASTER_PORT=3307<span class="token punctuation">,</span> MASTER_LOG_FILE=<span class="token string">'mysql-bin.000002'</span><span class="token punctuation">,</span> MASTER_LOG_POS=444<span class="token punctuation">,</span> MASTER_CONNECT_RETRY=10<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-在从库中开启专用复制线程"><a href="#6-在从库中开启专用复制线程" class="headerlink" title="6- 在从库中开启专用复制线程"></a>6- 在从库中开启专用复制线程</h2><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# mysql -S /tmp/mysql3308.sockstart slave;[root@db01 ~]# mysql -S /tmp/mysql3309.sockstart slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-验证主从状态"><a href="#7-验证主从状态" class="headerlink" title="7-验证主从状态"></a>7-验证主从状态</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock -e "show slave status\G"|grep Running: </span>             Slave_IO_Running: Yes            Slave_SQL_Running: Yes<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3309.sock -e "show slave status\G"|grep Running: </span>             Slave_IO_Running: Yes            Slave_SQL_Running: Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="如果搭建不成，可以执行以下命令，从开始来过步骤重新来过。（没问题别整！！！！！）"><a href="#如果搭建不成，可以执行以下命令，从开始来过步骤重新来过。（没问题别整！！！！！）" class="headerlink" title="如果搭建不成，可以执行以下命令，从开始来过步骤重新来过。（没问题别整！！！！！）"></a>如果搭建不成，可以执行以下命令，从开始来过步骤重新来过。（没问题别整！！！！！）</h4><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# mysql -S /tmp/mysql3308.sock -e "stop slave;reset slave all;"[root@db01 ~]# mysql -S /tmp/mysql3309.sock -e "stop slave;reset slave all;"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="3-主从复制的原理"><a href="#3-主从复制的原理" class="headerlink" title="3-主从复制的原理"></a>3-主从复制的原理</h1><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/image-20200516112816993.png" alt="image-20200516112816993"></p><hr><h2 id="1-简要说明："><a href="#1-简要说明：" class="headerlink" title="1-简要说明："></a>1-简要说明：</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token punctuation">(</span>1<span class="token punctuation">)</span> change <span class="token punctuation">,</span><span class="token function">start</span> slave 语句后，从库获取主库复制信息，启动复制线程<span class="token punctuation">(</span>2<span class="token punctuation">)</span> IO线程<span class="token punctuation">,</span>读取M<span class="token punctuation">.</span>info 获取连接信息，连主库，主库分配DUMP<span class="token punctuation">(</span>3<span class="token punctuation">)</span> IO线程<span class="token punctuation">,</span>通过M<span class="token punctuation">.</span>info获取复制信息，向主库Dump请求 <span class="token punctuation">(</span>4<span class="token punctuation">)</span> DUMP 返回日志。<span class="token punctuation">(</span>5<span class="token punctuation">)</span> IO线程 接日志 。TCPIP 缓存。<span class="token punctuation">(</span>6<span class="token punctuation">)</span> IO线程写日志到relaylog，更新M<span class="token punctuation">.</span>info <span class="token punctuation">(</span>7<span class="token punctuation">)</span> SQL线程读取R<span class="token punctuation">.</span>info <span class="token punctuation">,</span>执行新的relay。更新R<span class="token punctuation">.</span>info <span class="token punctuation">(</span>8<span class="token punctuation">)</span> relaylog定期自动删除<span class="token punctuation">(</span>9<span class="token punctuation">)</span> 主库有通知从库有新日志产生<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-涉及到的线程"><a href="#2-涉及到的线程" class="headerlink" title="2-涉及到的线程"></a>2-涉及到的线程</h2><p>###2.1-主库：</p><p><strong>binlog_dump_thread ,负责接收slave请求和传送主库binlog给slave</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> show processlist;+----+------+------------+------+-------------+------+---------------------------------------------------------------+------------------+| Id | User | Host       | db   | Command     | Time | State                                                         | Info             |+----+------+------------+------+-------------+------+---------------------------------------------------------------+------------------+|  6 | repl | db01:34638 | NULL | Binlog Dump | 2045 | Master has sent all binlog to slave; waiting for more updates | NULL             ||  7 | repl | db01:34640 | NULL | Binlog Dump | 2015 | Master has sent all binlog to slave; waiting for more updates | NULL             ||  8 | root | localhost  | NULL | Query       |    0 | starting                                                      | show processlist |+----+------+------------+------+-------------+------+---------------------------------------------------------------+------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-从库："><a href="#3-从库：" class="headerlink" title="3-从库："></a>3-从库：</h3><h4 id="IO线程-："><a href="#IO线程-：" class="headerlink" title="IO线程 ："></a>IO线程 ：</h4><pre class="line-numbers language-csharp"><code class="language-csharp">连接主库DUMP线程<span class="token punctuation">,</span>请求Master日志、接收Master日志、存储日志（relay<span class="token operator">-</span>log）。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="SQL线程"><a href="#SQL线程" class="headerlink" title="SQL线程"></a>SQL线程</h4><pre class="line-numbers language-powershell"><code class="language-powershell"> 回放relaylog  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h4><pre><code>mysql&gt; show slave status \G</code></pre><h2 id="3-涉及到的文件"><a href="#3-涉及到的文件" class="headerlink" title="3-涉及到的文件"></a>3-涉及到的文件</h2><h3 id="1-主库："><a href="#1-主库：" class="headerlink" title="1-主库："></a>1-主库：</h3><pre><code>binlog日志文件</code></pre><h3 id="2-从库："><a href="#2-从库：" class="headerlink" title="2-从库："></a>2-从库：</h3><pre class="line-numbers language-mysql"><code class="language-mysql"># relay-log 中继日志 命名方式： datadir/HOSTNAME-relay-bin.00000N作用： 存储获取到的binlog <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-从库信息文件"><a href="#3-从库信息文件" class="headerlink" title="3-从库信息文件"></a>3-从库信息文件</h3><pre class="line-numbers language-powershell"><code class="language-powershell">命名方式：  datadir<span class="token operator">/</span>master<span class="token punctuation">.</span>info作用： 记录主库ip  port  user  password  binlog位置点等信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="中继日志应用信息"><a href="#中继日志应用信息" class="headerlink" title="中继日志应用信息"></a>中继日志应用信息</h4><pre><code>命名方式： relay-log.info作用： 记录SQL 线程回放到的位置点信息。</code></pre><h2 id="4-如何监控主从复制"><a href="#4-如何监控主从复制" class="headerlink" title="4-如何监控主从复制"></a>4-如何监控主从复制</h2><h3 id="1-主库"><a href="#1-主库" class="headerlink" title="1-主库"></a>1-主库</h3><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 data]# mysql -S /tmp/mysql3307.sock -e "show processlist" |grep "Dump"7    repl    db01:34640    NULL    Binlog Dump    5355    Master has sent all binlog to slave; waiting for more updates    NULL9    repl    db01:34642    NULL    Binlog Dump    687    Master has sent all binlog to slave; waiting for more updates    NULL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 data]# mysql -S /tmp/mysql3307.sock -e "show slave hosts;"+-----------+------+------+-----------+--------------------------------------+| Server_id | Host | Port | Master_id | Slave_UUID                           |+-----------+------+------+-----------+--------------------------------------+|         9 |      | 3309 |         7 | 1c920eb6-901a-11ea-a2a5-000c29248f69 ||         8 |      | 3308 |         7 | 195bb724-901a-11ea-a083-000c29248f69 |+-----------+------+------+-----------+--------------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-从库"><a href="#2-从库" class="headerlink" title="2-从库"></a>2-从库</h3><pre><code>[root@db01 data]# mysql -S /tmp/mysql3308.sock -e &quot;show slave status \G&quot;</code></pre><h2 id="5-主从复制的监控"><a href="#5-主从复制的监控" class="headerlink" title="5-主从复制的监控"></a>5-主从复制的监控</h2><p><strong>主库连接信息、binlog位置信息（master.info）</strong></p><pre class="line-numbers language-CQL"><code class="language-CQL">show processlist;show slave hosts;show slave status \GMaster_Host: 10.0.0.51Master_User: replMaster_Port: 3307Connect_Retry: 10Master_Log_File: mysql-bin.000002Read_Master_Log_Pos: 619<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="5-1从库的relay-log的执行情况，来自于R-info，一般用做判断主从延时"><a href="#5-1从库的relay-log的执行情况，来自于R-info，一般用做判断主从延时" class="headerlink" title="5.1从库的relay-log的执行情况，来自于R.info，一般用做判断主从延时"></a>5.1从库的relay-log的执行情况，来自于R.info，一般用做判断主从延时</h4><hr><pre class="line-numbers language-powershell"><code class="language-powershell">Relay_Log_File: db01<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token punctuation">.</span>000002Relay_Log_Pos: 495Relay_Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000002Exec_Master_Log_Pos: 619Seconds_Behind_Master: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2从库中relay-log的回放信息（relay-log-info）"><a href="#5-2从库中relay-log的回放信息（relay-log-info）" class="headerlink" title="5.2从库中relay-log的回放信息（relay-log.info）"></a>5.2从库中relay-log的回放信息（relay-log.info）</h3><pre class="line-numbers language-mysql"><code class="language-mysql">Relay_Log_File: db01-relay-bin.000006Relay_Log_Pos: 320Relay_Master_Log_File: mysql-bin.000001Exec_Master_Log_Pos: 444<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-3从库线程状态，具体报错信息"><a href="#5-3从库线程状态，具体报错信息" class="headerlink" title="5.3从库线程状态，具体报错信息"></a>5.3从库线程状态，具体报错信息</h4><pre class="line-numbers language-powershell"><code class="language-powershell">Slave_IO_Running: YesSlave_SQL_Running: YesLast_IO_Errno: 0Last_IO_Error: Last_SQL_Errno: 0Last_SQL_Error: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-4过滤复制相关信息："><a href="#5-4过滤复制相关信息：" class="headerlink" title="5.4过滤复制相关信息："></a>5.4过滤复制相关信息：</h4><pre class="line-numbers language-powershell"><code class="language-powershell">Replicate_Do_DB: Replicate_Ignore_DB: Replicate_Do_Table: Replicate_Ignore_Table: Replicate_Wild_Do_Table: Replicate_Wild_Ignore_Table: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-5落后于主库的秒数"><a href="#5-5落后于主库的秒数" class="headerlink" title="5.5落后于主库的秒数"></a>5.5落后于主库的秒数</h4><pre class="line-numbers language-SAS"><code class="language-SAS">Seconds_Behind_Master: 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-6延时从库的配置信息。"><a href="#5-6延时从库的配置信息。" class="headerlink" title="5.6延时从库的配置信息。"></a>5.6延时从库的配置信息。</h3><pre><code>SQL_Delay: 0SQL_Remaining_Delay: NULL</code></pre><h3 id="5-7-GTID相关复制信息："><a href="#5-7-GTID相关复制信息：" class="headerlink" title="5.7-GTID相关复制信息："></a>5.7-GTID相关复制信息：</h3><pre><code>Retrieved_Gtid_Set: Executed_Gtid_Set: Auto_Position: 0</code></pre><h3 id="疑惑："><a href="#疑惑：" class="headerlink" title="疑惑："></a>疑惑：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 一堆pos 功能（1） IO 已经获取到的主库Binlog的位置点（master<span class="token punctuation">.</span>info）Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000001Read_Master_Log_Pos: 444作用： IO下次请求日志时，起点位置。（2） SQL 回放到的relaylog位置点。<span class="token punctuation">(</span>relay<span class="token operator">-</span>log<span class="token punctuation">.</span>info<span class="token punctuation">)</span>Relay_Log_File: db01<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token punctuation">.</span>000006Relay_Log_Pos: 320（3）SQL回放的realylog位置点，对应的主库binlog的位置点<span class="token punctuation">(</span>relay<span class="token operator">-</span>log<span class="token punctuation">.</span>info<span class="token punctuation">)</span>Relay_Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000001Exec_Master_Log_Pos: 600作用： 计算主从复制延时日志量。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-主从复制故障"><a href="#4-主从复制故障" class="headerlink" title="4-主从复制故障"></a>4-主从复制故障</h1><h2 id="1-如何监控"><a href="#1-如何监控" class="headerlink" title="1-如何监控"></a>1-如何监控</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock -e "show slave status \G"</span>Slave_IO_Running: Yes                <span class="token comment" spellcheck="true"># IO线程工作状态： YES、NO、Connecting  </span>Slave_SQL_Running: Yes               <span class="token comment" spellcheck="true"># SQL线程工作状态：YES、NO</span>Last_IO_Errno: 0                     <span class="token comment" spellcheck="true"># IO故障代码：2003,1045,1040,1593,1236</span>Last_IO_Error:                       <span class="token comment" spellcheck="true"># IO线程报错详细信息  </span>Last_SQL_Errno: 0                    <span class="token comment" spellcheck="true"># SQL故障代码：  1008，1007</span>Last_SQL_Error:                      <span class="token comment" spellcheck="true"># IO线程报错详细信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="故障原因："><a href="#故障原因：" class="headerlink" title="故障原因："></a>故障原因：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">IO线程故障 5<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1 连接主库失败 <span class="token comment" spellcheck="true">## user,password,IP,Port,plugin</span><span class="token comment" spellcheck="true">## 主库无法连接：网络、宕机、防护墙、最大连接数上限</span>连接主库：    （1） 网络，端口，防火墙    （2） 用户 ，密码，授权          replication slave    （3） 主库连接数上限     mysql> <span class="token function">select</span> @@max_connections<span class="token punctuation">;</span>    （4） 版本不统一  5<span class="token punctuation">.</span>7 native  ， 8<span class="token punctuation">.</span>0 sha2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-故障模拟："><a href="#2-故障模拟：" class="headerlink" title="2-故障模拟："></a>2-故障模拟：</h2><h3 id="1-主库宕机"><a href="#1-主库宕机" class="headerlink" title="(1)主库宕机"></a>(1)主库宕机</h3><pre class="line-numbers language-powershell"><code class="language-powershell"> systemctl stop mysqld3307  show slave status\G  还原:  systemctl <span class="token function">start</span> mysqld3307  mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"start slave;"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-模拟用户密码错误"><a href="#2-模拟用户密码错误" class="headerlink" title="(2) 模拟用户密码错误"></a>(2) 模拟用户密码错误</h3><pre class="line-numbers language-powershell"><code class="language-powershell">  mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"alter user repl@'10.0.0.%' identified by '11212'"</span>   mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"start slave;  show slave status\G "</span>  还原：    mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"alter user repl@'10.0.0.%' identified by '123'"</span>    mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"start slave;  show slave status\G "</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-连接数上限"><a href="#3-连接数上限" class="headerlink" title="(3) 连接数上限"></a>(3) 连接数上限</h3><pre class="line-numbers language-powershell"><code class="language-powershell"> mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">" set global max_connections=2;"</span>  mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"stop slave; start slave;  show slave status\G "</span>  还原：   mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3307<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">" set global max_connections=200;"</span>  mysql <span class="token operator">-</span>S <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3308<span class="token punctuation">.</span>sock  <span class="token operator">-</span>e <span class="token string">"stop slave; start slave;  show slave status\G "</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="排查方法："><a href="#排查方法：" class="headerlink" title="排查方法："></a>排查方法：</h3><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# mysql -urepl -p123 -h 10.0.0.51 -P 3300mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2003 (HY000): Can't connect to MySQL server on '10.0.0.51' (111)[root@db01 ~]# mysql -urepl -p123 -h 10.0.0.52 -P 3307mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2003 (HY000): Can't connect to MySQL server on '10.0.0.52' (113)[root@db01 ~]# mysql -urepla -p123 -h 10.0.0.51 -P 3307mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 1045 (28000): Access denied for user 'repla'@'db01' (using password: YES)[root@db01 ~]# mysql -urepl -p1123 -h 10.0.0.51 -P 3307mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 1045 (28000): Access denied for user 'repl'@'db01' (using password: YES)[root@db01 ~]# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-高级故障模拟二"><a href="#3-高级故障模拟二" class="headerlink" title="3-高级故障模拟二"></a>3-高级故障模拟二</h2><h3 id="1-请求日志"><a href="#1-请求日志" class="headerlink" title="1-请求日志"></a>1-请求日志</h3><p><strong>主库日志损坏、缺失。</strong></p><p><strong>主从的server_id、Server_uuid相同。</strong></p><h3 id="2-server-id-故障重现："><a href="#2-server-id-故障重现：" class="headerlink" title="2-server_id 故障重现："></a>2-server_id 故障重现：</h3><hr><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# mysql -S /tmp/mysql3307.sockmysql> set global server_id=8;[root@db01 ~]# mysql -S /tmp/mysql3307.sockmysql> select @@server_id;[root@db01 ~]# mysql -S /tmp/mysql3308.sockmysql> stop slave;start slave;show slave status;回退： [root@db01 ~]# mysql -S /tmp/mysql3307.sockmysql> set global server_id=7;[root@db01 ~]# mysql -S /tmp/mysql3307.sockmysql> select @@server_id;[root@db01 ~]# mysql -S /tmp/mysql3308.sockmysql> start slave;show slave status;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-主库日志损坏故障重现："><a href="#3-主库日志损坏故障重现：" class="headerlink" title="3-主库日志损坏故障重现："></a>3-主库日志损坏故障重现：</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3307.sock</span>mysql> reset master<span class="token punctuation">;</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3308.sock</span>mysql> <span class="token function">start</span> slave<span class="token punctuation">;</span>show slave status<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-测试环境处理方法（主从的数据当前是一致的）："><a href="#4-测试环境处理方法（主从的数据当前是一致的）：" class="headerlink" title="4-测试环境处理方法（主从的数据当前是一致的）："></a>4-测试环境处理方法（主从的数据当前是一致的）：</h3><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 ~]# mysql -S /tmp/mysql3308.sock# 将所有线程停止。mysql> stop slave;                # 将从库复制信息清空（master.info,relay-log.info清空，show slave status看不到信息了）mysql> reset slave all;  mysql> CHANGE MASTER TO  MASTER_HOST='10.0.1.51',  MASTER_USER='repl',  MASTER_PASSWORD='123',  MASTER_PORT=3307,  MASTER_LOG_FILE='mysql-bin.000001',  MASTER_LOG_POS=154,  MASTER_CONNECT_RETRY=10;mysql> start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-生产中需要额外考虑什么情景？"><a href="#5-生产中需要额外考虑什么情景？" class="headerlink" title="5-生产中需要额外考虑什么情景？"></a>5-生产中需要额外考虑什么情景？</h3><blockquote><p>需要重构主从：<br>      1. 备份恢复.<br>      2. change master to  ;    start slave</p><p><strong>5.3 SQL线程故障</strong><br><strong>SQL线程主要工作： 回放relaylog中的日志事件，可以理解为后台执行SQL语句。</strong></p><ol><li><strong>realy-log 损坏。</strong><br><strong>处理方法： 重构。</strong></li></ol></blockquote><pre><code>++++++++++++++正确的姿势++++++++++++++++++++生产中如果要 reset master; 1. 找业务不繁忙期间，停业务5分钟。2. 等待从库重放完所有主库日志3. 主库 reset master ;4. 从库重新同步主库日志mysql&gt; stop slave;mysql&gt; reset slave all;CHANGE MASTER TO  MASTER_HOST=&#39;10.0.0.51&#39;,  MASTER_USER=&#39;repl&#39;,  MASTER_PASSWORD=&#39;123&#39;,  MASTER_PORT=3307,  MASTER_LOG_FILE=&#39;mysql-bin.000001&#39;,  MASTER_LOG_POS=154,  MASTER_CONNECT_RETRY=10;start slave;+++++++++++++++++++++++++++++++++++++</code></pre><h4 id="方法1：-备份主库-change-master-to-start-slave"><a href="#方法1：-备份主库-change-master-to-start-slave" class="headerlink" title="方法1： 备份主库+change master to + start slave;"></a>方法1： 备份主库+change master to + start slave;</h4><hr><h4 id="方法2：-找到问题点-change-master-start-slave"><a href="#方法2：-找到问题点-change-master-start-slave" class="headerlink" title="方法2： 找到问题点+ change master + start slave;"></a>方法2： 找到问题点+ change master + start slave;</h4><pre class="line-numbers language-powershell"><code class="language-powershell">思路： 如何找到问题位置点。        1<span class="token punctuation">.</span> 找到SQL已经回放到什么位置了。        SQL回放的realylog位置点，对应的主库binlog的位置点<span class="token punctuation">(</span>relay<span class="token operator">-</span>log<span class="token punctuation">.</span>info<span class="token punctuation">)</span>        Relay_Log_File: db01<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token punctuation">.</span>000006        Relay_Log_Pos: 320        <span class="token operator">--</span>-<span class="token operator">-</span>》         2<span class="token punctuation">.</span> 找到主库相应位置点：        Relay_Master_Log_File: mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000001        Exec_Master_Log_Pos: 600        3<span class="token punctuation">.</span>  change master to  mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000001 600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三方工具："><a href="#第三方工具：" class="headerlink" title="第三方工具："></a>第三方工具：</h4><h4 id="pt工具"><a href="#pt工具" class="headerlink" title="pt工具"></a>pt工具</h4><h2 id="4-执行SQL出问题？"><a href="#4-执行SQL出问题？" class="headerlink" title="4-执行SQL出问题？"></a>4-执行SQL出问题？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">主要做什么工作？回放relay<span class="token operator">-</span>log中的日志。可以理解为执行relay<span class="token operator">-</span>log SQL <span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>2 SQL线程故障本质？为什么SQL线程执行不了SQL语句。1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 原因整理。创建的对象已经存在需要操作的对象不存在约束冲突。以上问题： 大几率出现在从库写入或者双主结构中容易出现。参数<span class="token punctuation">,</span>版本<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>（1）主从节点配置不一样： 平台、版本、参数、SQL_MODE  调整成一致。（2）修改的对象不存在（库、表、用户） 从库被写入了。 双主架构。异步方式主从，导致数据不一致。（3）创建的对象已存在（库、表、用户、约束冲突） 从库被写入了。 双主架构。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="故障模拟-："><a href="#故障模拟-：" class="headerlink" title="故障模拟 ："></a>故障模拟 ：</h3><pre class="line-numbers language-mysql"><code class="language-mysql">(1)先在从库 create database oldguo charset=utf8;(2)在主库   create database oldguo charset=utf8mb4;(3)检查从库SQL线程状态Slave_SQL_Running: NoLast_Error: Error 'Can't create database 'oldguo'; database exists' on query. Default database: 'oldguo'. Query: 'create database oldguo'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="处理故障"><a href="#处理故障" class="headerlink" title="处理故障"></a>处理故障</h3><pre class="line-numbers language-mysql"><code class="language-mysql">（1）思路1： 一切以主库为准    将从库进行反操作一下。重启线程    mysql> drop database oldguo;    mysql> start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">（2）思路2: 以从库为准，跳过此次复制错误    方法一：    stop slave;     set global sql_slave_skip_counter = 1;    #将同步指针向下移动一个，如果多次不同步，可以重复操作。    start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意： 如果要用此种方法，一定要保证此时故障数据是完全一致时，才能采用。</p><pre class="line-numbers language-powershell"><code class="language-powershell">方法二：不推荐<span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfslave<span class="token operator">-</span>skip<span class="token operator">-</span>errors = 1032<span class="token punctuation">,</span>1062<span class="token punctuation">,</span>1007<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">常见错误代码:1007:对象已存在1032:无法执行DML1062:主键冲突<span class="token punctuation">,</span>或约束冲突总结： SQL线程故障规避方法1<span class="token punctuation">.</span> 从库只读 ，读写分离中间件。2<span class="token punctuation">.</span> 不使用双主结构。PXC、MGR替代。3<span class="token punctuation">.</span> 半同步、增强半同步复制等，或者PXC、MGR替代。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">（3）思路2：暴力方法，遇到自动跳过。    <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf    slave<span class="token operator">-</span>skip<span class="token operator">-</span>errors = 1032<span class="token punctuation">,</span>1062<span class="token punctuation">,</span>1007    常见错误代码:    1007:对象已存在    1032:无法执行DML    1062:主键冲突<span class="token punctuation">,</span>或约束冲突<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">（4）思路4：      重新搭建主从：备份恢复<span class="token operator">+</span> 重新构建。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三方工具： 帮助我们检查主从数据一致，并可以修复主从不一致情况。<br>    pt工具 主从有关。<br>    <a href="https://www.jianshu.com/p/c97228b6f60c" target="_blank" rel="noopener">https://www.jianshu.com/p/c97228b6f60c</a></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09- mysql_备份恢复</title>
      <link href="/2020/05/16/09-mysql-bei-fen-hui-fu/"/>
      <url>/2020/05/16/09-mysql-bei-fen-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-备份恢复"><a href="#mysql-备份恢复" class="headerlink" title="mysql_备份恢复"></a>mysql_备份恢复</h1><h1 id="1-注意事项"><a href="#1-注意事项" class="headerlink" title="1-注意事项"></a>1-注意事项</h1><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 关于备份恢复方面的职责（1）备份、恢复策略的设计。    备份周期、备份工具、备份方式、恢复方式全部流程化（2）日常备份检查     日志、备份内容     （3）定期的恢复演练（4）数据故障时，利用现有的资源，快速恢复（5）数据迁移、升级。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-备份工具介绍"><a href="#2-备份工具介绍" class="headerlink" title="2-备份工具介绍"></a>2-备份工具介绍</h1><h2 id="2-1-逻辑备份"><a href="#2-1-逻辑备份" class="headerlink" title="2.1 逻辑备份"></a>2.1 逻辑备份</h2><pre class="line-numbers language-powershell"><code class="language-powershell">mysqldump  <span class="token operator">/</span> source   <span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span>mysqlbinlog  <span class="token operator">/</span>source mydumper <span class="token operator">/</span> myloader  ：多并发 工具<span class="token function">select</span> into outfile <span class="token operator">/</span> load <span class="token keyword">data</span> infile binlog2sqlmyflashback<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-物理备份"><a href="#2-2-物理备份" class="headerlink" title="2.2 物理备份"></a>2.2 物理备份</h2><pre><code>Percona Xtrabackup (PXB,XBK) *****</code></pre><h3 id="迁移表空间"><a href="#迁移表空间" class="headerlink" title="迁移表空间"></a>迁移表空间</h3><pre class="line-numbers language-java"><code class="language-java">Mysql Enterpise backup（MEB，企业版）<span class="token number">8.0</span> clone <span class="token function">plugin</span> <span class="token punctuation">(</span><span class="token number">8.0</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-3-选型"><a href="#2-3-选型" class="headerlink" title="2.3 选型"></a>2.3 选型</h2><pre><code>100G 以内： 逻辑 100G 以上： 物理 超大型： 逻辑</code></pre><h1 id="3-mysqldump-工具使用-参数"><a href="#3-mysqldump-工具使用-参数" class="headerlink" title="3. mysqldump 工具使用 ==参数=="></a>3. mysqldump 工具使用 ==参数==</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><pre><code>mdp数据逻辑备份工具。（Create database\   create  table \ insert）MySQL 自带的客户端命令。可以实现远程和本地备份。</code></pre><h2 id="3-2-参数"><a href="#3-2-参数" class="headerlink" title="3.2 参数"></a>3.2 参数</h2><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span>2 参数 3<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1 连接参数 <span class="token operator">-</span>u  <span class="token operator">-</span>p <span class="token operator">-</span>S <span class="token operator">-</span>h <span class="token operator">-</span>P 3<span class="token punctuation">.</span>2<span class="token punctuation">.</span>2 备份参数<span class="token comment" spellcheck="true"># -A  全备  </span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mkdir -p /data/backup</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p123  -A >/data/backup/full.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="B-单库或多库"><a href="#B-单库或多库" class="headerlink" title="-B  单库或多库"></a>-B  单库或多库</h3><pre><code>[root@db01 ~]# mysqldump -uroot -p123  -B world gtdb test &gt;/data/backup/db.sql</code></pre><h3 id="备份单表或多表"><a href="#备份单表或多表" class="headerlink" title="备份单表或多表"></a>备份单表或多表</h3><pre><code>[root@db01 ~]# mysqldump -uroot -p123  world t1 country &gt;/data/backup/tab.sql</code></pre><h3 id="–master-data-2"><a href="#–master-data-2" class="headerlink" title="–master-data=2"></a>–master-data=2</h3><pre class="line-numbers language-powershell"><code class="language-powershell">自动写入备份的起点功能： 1<span class="token punctuation">.</span>自动记录备份时的binlog信息（注释）       2<span class="token punctuation">.</span>自动锁定所有表，自动解锁（global read lock）。最好配合<span class="token operator">--</span>single<span class="token operator">-</span>transaction 参数，减少锁表时间。<span class="token operator">--</span>master<span class="token operator">-</span><span class="token keyword">data</span><span class="token punctuation">[</span>=<span class="token comment" spellcheck="true">#]   This causes the binary log position and filename to be</span>                      appended to the output<span class="token punctuation">.</span> <span class="token keyword">If</span> equal to 1<span class="token punctuation">,</span> will print it as a                      CHANGE MASTER command<span class="token punctuation">;</span> <span class="token keyword">if</span> equal to 2<span class="token punctuation">,</span> that command will                      be prefixed with a comment symbol<span class="token punctuation">.</span> This option will turn                      <span class="token operator">--</span>lock<span class="token operator">-</span>all<span class="token operator">-</span>tables on<span class="token punctuation">,</span> unless <span class="token operator">--</span>single<span class="token operator">-</span>transaction is                      specified too <span class="token punctuation">(</span>in which case a global read lock is only                      taken a short time at the beginning of the dump<span class="token punctuation">;</span> don't                      forget to read about <span class="token operator">--</span>single<span class="token operator">-</span>transaction below<span class="token punctuation">)</span><span class="token punctuation">.</span> In all                      cases<span class="token punctuation">,</span> any action on logs will happen at the exact moment                      of the dump<span class="token punctuation">.</span> Option automatically turns <span class="token operator">--</span>lock<span class="token operator">-</span>tables                      off<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><pre class="line-numbers language-powershell"><code class="language-powershell">这个选项可以把binlog的位置和文件名添加到输出中，如果等于1，将会打印成一个CHANGE MASTER命令；如果等于2，会加上注释前缀。并且这个选项会自动打开–lock<span class="token operator">-</span>all<span class="token operator">-</span>tables，除非同时设置了–single<span class="token operator">-</span>transaction（这种情况下，全局读锁只会在开始dump的时候加上一小段时间，不要忘了阅读–single<span class="token operator">-</span>transaction的部分）。在任何情况下，所有日志中的操作都会发生在导出的准确时刻。这个选项会自动关闭–lock<span class="token operator">-</span>tables。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><pre><code>[root@db01 ~]# mysqldump -uroot -p123  -A  --master-data=2  &gt;/data/backup/full.sql</code></pre><h3 id="–single-transaction"><a href="#–single-transaction" class="headerlink" title="–single-transaction"></a>–single-transaction</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p123  -A  --master-data=2  --single-transaction  >/data/backup/full.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>功能：</p><pre><code>   1. 对于InnoDB表，开启独立事务，通过快照备份表数据，不锁表备份，可以理解为热备。   2. 通过照片查人数。</code></pre><h3 id="–max-allowed-packet-64M"><a href="#–max-allowed-packet-64M" class="headerlink" title="–max_allowed_packet=64M"></a>–max_allowed_packet=64M</h3><pre class="line-numbers language-powershell"><code class="language-powershell">最大允许的数据包大小<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p123  -A  --master-data=2  --single-transaction  --max_allowed_packet=64M  >/data/backup/full.sql</span>max_allowed_packet = 30M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>小故障</p><hr><pre class="line-numbers language-javascript"><code class="language-javascript">学员问题： 备份时超出最大数据包大小。<span class="token number">1153</span> <span class="token operator">-</span> Got a packet bigger than <span class="token string">'max_allowed_packet'</span> bytes <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><h3 id="R-E-–triggers-备份特殊对象使用"><a href="#R-E-–triggers-备份特殊对象使用" class="headerlink" title="-R  -E  –triggers 备份特殊对象使用"></a>-R  -E  –triggers 备份特殊对象使用</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqldump -uroot -p123  -A  --master-data=2  --single-transaction  --max_allowed_packet=64M  -R -E  --triggers >/data/backup/full.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="格式化备份文件"><a href="#格式化备份文件" class="headerlink" title="格式化备份文件"></a>格式化备份文件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p  <span class="token operator">-</span>A  <span class="token operator">--</span>master<span class="token operator">-</span>data<span class="token operator">=</span><span class="token number">2</span>  <span class="token operator">--</span>single<span class="token operator">-</span>transaction  <span class="token operator">--</span>max_allowed_packet<span class="token operator">=</span>64M  <span class="token operator">-</span>R <span class="token operator">-</span>E  <span class="token operator">--</span>triggers <span class="token operator">></span><span class="token operator">/</span>data<span class="token operator">/</span>backup<span class="token operator">/</span>full_<span class="token template-string"><span class="token string">`date +%F`</span></span><span class="token punctuation">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="4-案例"><a href="#4-案例" class="headerlink" title="4-案例"></a>4-案例</h1><h2 id="1-故障恢复演练-mdp-binlog-每天全备"><a href="#1-故障恢复演练-mdp-binlog-每天全备" class="headerlink" title="1-故障恢复演练(mdp+binlog,每天全备)"></a>1-故障恢复演练(mdp+binlog,每天全备)</h2><h3 id="1-2-模拟环境"><a href="#1-2-模拟环境" class="headerlink" title="1-2 模拟环境"></a>1-2 模拟环境</h3><pre class="line-numbers language-javascript"><code class="language-javascript">mysql<span class="token operator">></span> create database mdp charset utf8mb4<span class="token punctuation">;</span>mysql<span class="token operator">></span> use mdpmysql<span class="token operator">></span> create table <span class="token function">t1</span><span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">></span> insert into t1 <span class="token function">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">></span> commit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-模拟-周一23-00-的全备"><a href="#1-3-模拟-周一23-00-的全备" class="headerlink" title="1.3-模拟 周一23:00 的全备"></a>1.3-模拟 周一23:00 的全备</h3><pre class="line-numbers language-cassandra"><code class="language-cassandra">[root@db01 ~]# mysqldump -uroot -p  -A  --master-data=2  --single-transaction  --max_allowed_packet=64M  -R -E  --triggers >/data/backup/full_`date +%F`.sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-31-查看文件"><a href="#1-31-查看文件" class="headerlink" title="1.31-查看文件"></a>1.31-查看文件</h4><pre class="line-numbers language-CQL"><code class="language-CQL">查看 GTID相关信息 ：GTID截取起点。备份那SET @@GLOBAL.GTID_PURGED='202628e9-9265-11ea-b4a0-000c29248f69:1-35';# 查看pos号，备份开始时binlog位置点信息。-- CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000023', MASTER_LOG_POS=158999;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4模拟周二白天数据变化"><a href="#1-4模拟周二白天数据变化" class="headerlink" title="1.4模拟周二白天数据变化"></a>1.4模拟周二白天数据变化</h3><pre><code>mysql&gt; use mdp;mysql&gt; create table t2 (id int);mysql&gt; insert into t2 values(1),(2),(3);mysql&gt; commit;</code></pre><h3 id="1-5-周二下午2点，误删除了mdp核心库"><a href="#1-5-周二下午2点，误删除了mdp核心库" class="headerlink" title="1.5-周二下午2点，误删除了mdp核心库"></a>1.5-周二下午2点，误删除了mdp核心库</h3><pre><code>mysql&gt; drop database mdp;</code></pre><h3 id="1-6-故障-恢复-思路："><a href="#1-6-故障-恢复-思路：" class="headerlink" title="1.6-故障==恢复 思路：=="></a>1.6-故障==恢复 思路：==</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token punctuation">(</span>1<span class="token punctuation">)</span> 恢复全备到周一晚上23:00  全被恢复 检查全备： vim <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>full_2020<span class="token operator">-</span>05<span class="token operator">-</span>11<span class="token punctuation">.</span>sql <span class="token comment" spellcheck="true"># 查看 GTID相关信息 ：GTID截取起点。</span><span class="token function">SET</span> @@GLOBAL<span class="token punctuation">.</span>GTID_PURGED=<span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1-35'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 查看pos号，备份开始时binlog位置点信息。</span><span class="token operator">--</span> CHANGE MASTER TO MASTER_LOG_FILE=<span class="token string">'mysql-bin.000023'</span><span class="token punctuation">,</span> MASTER_LOG_POS=158999<span class="token punctuation">;</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span> 截取日日志：<span class="token comment" spellcheck="true"># 起点： </span>mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023 202628e9<span class="token operator">-</span>9265<span class="token operator">-</span>11ea<span class="token operator">-</span>b4a0<span class="token operator">-</span>000c29248f69:36 或者 mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023 pos=158999<span class="token comment" spellcheck="true">#终点： drop</span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># mysql -uroot -p123 -e "show binlog events in 'mysql-bin.000023'"|grep -B 1 "drop database mdp"</span>mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023    159421    Gtid    6    159486    <span class="token function">SET</span> @@SESSION<span class="token punctuation">.</span>GTID_NEXT= <span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:38'</span>mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023    159486    Query    6    159575    drop database mdp<span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># </span><span class="token comment" spellcheck="true"># 截取日志 </span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># mysqlbinlog --skip-gtids --include-gtids='202628e9-9265-11ea-b4a0-000c29248f69:36-37' /data/3306/logs/mysql-bin.000023 >/data/backup/bin.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-7-恢复"><a href="#1-7-恢复" class="headerlink" title="1.7- 恢复"></a>1.7- 恢复</h3><pre><code>mysql&gt; set sql_log_bin=0;mysql&gt; source /data/backup/full_2020-05-11.sql mysql&gt; source /data/backup/bin.sqlmysql&gt; set sql_log_bin=1;</code></pre><h3 id="1-8-检查数据"><a href="#1-8-检查数据" class="headerlink" title="1.8-检查数据"></a>1.8-检查数据</h3><pre class="line-numbers language-cassandra"><code class="language-cassandra">mysql> use mdpReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql> show tables;+---------------+| Tables_in_mdp |+---------------+| t1            || t2            |+---------------+2 rows in set (0.01 sec)mysql> select * from t1;+------+| id   |+------+|    1 ||    2 ||    3 |+------+3 rows in set (0.00 sec)mysql> select * from t2;+------+| id   |+------+|    1 ||    2 ||    3 |+------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="2-mysqldump多种备份策略和恢复策略介绍"><a href="#2-mysqldump多种备份策略和恢复策略介绍" class="headerlink" title="2-mysqldump多种备份策略和恢复策略介绍"></a>2-mysqldump多种备份策略和恢复策略介绍</h2><blockquote><p>场景： </p><p>100G 全库数据  全库备份 30分钟-40分钟，恢复整库需要5倍时间2.5-3小时之间<br>一张表 1G 被误删除了。</p></blockquote><h3 id="1-mysqldump-备份策略-："><a href="#1-mysqldump-备份策略-：" class="headerlink" title="1-mysqldump 备份策略 ："></a>1-mysqldump 备份策略 ：</h3><blockquote><p>mdp full+ binlog 增量备份<br>恢复单表数据思路：  </p></blockquote><p><strong>（1） 提取full全备中的故障表数据 ，恢复数据</strong></p><pre class="line-numbers language-cassandra"><code class="language-cassandra"># sed -e'/./{H;$!d;}' -e 'x;/CREATE TABLE `t1`/!d;q'  full.sql>createtable.sql# grep -i 'INSERT INTO `t1`'  full.sql >data.sql <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>（2） binlog中截取全备到误删除t1之间对于这张表的修改</strong>  </p><h2 id="3-单库单表备份-binlog增量"><a href="#3-单库单表备份-binlog增量" class="headerlink" title="3-==单库单表备份==+binlog增量"></a>3-==单库单表备份==+binlog增量</h2><blockquote><p>恢复单表数据思路：<br>（1）恢复单表的备份<br>（2）binlog中截取备份到误删除t1之间对于这张表的修改  </p></blockquote><h3 id="1-故障模拟"><a href="#1-故障模拟" class="headerlink" title="1-故障模拟"></a>1-故障模拟</h3><pre class="line-numbers language-javascript"><code class="language-javascript"> 模拟原始数据 create database oldboy charset utf8mb4<span class="token punctuation">;</span> use oldboy<span class="token punctuation">;</span> create table oldguo <span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span> insert into oldguo <span class="token function">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> commit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-周一晚上全库备份"><a href="#2-周一晚上全库备份" class="headerlink" title="2-周一晚上全库备份"></a>2-周一晚上全库备份</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p  <span class="token operator">-</span>A  <span class="token operator">--</span>master<span class="token operator">-</span><span class="token keyword">data</span>=2  <span class="token operator">--</span>single<span class="token operator">-</span>transaction  <span class="token operator">--</span>max_allowed_packet=64M  <span class="token operator">-</span>R <span class="token operator">-</span>E  <span class="token operator">--</span>triggers ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>full<span class="token punctuation">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-模拟周二白天的数据变化"><a href="#3-模拟周二白天的数据变化" class="headerlink" title="3-模拟周二白天的数据变化"></a>3-模拟周二白天的数据变化</h3><pre class="line-numbers language-CQL"><code class="language-CQL">use oldboy ;insert into oldguo values(11),(22),(33);commit;create table  oldli(id int);insert into oldli values(1),(2),(3);commit;insert into oldguo values(111),(222),(333);commit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-模拟周二下午2点，误删除oldguo表"><a href="#4-模拟周二下午2点，误删除oldguo表" class="headerlink" title="4-模拟周二下午2点，误删除oldguo表"></a>4-模拟周二下午2点，误删除oldguo表</h3><pre><code>drop table  oldguo;</code></pre><hr><h3 id="5-恢复过程"><a href="#5-恢复过程" class="headerlink" title="5==-恢复过程=="></a>5==-恢复过程==</h3><h4 id="1-处理全备"><a href="#1-处理全备" class="headerlink" title="1. 处理全备"></a>1. 处理全备</h4><pre class="line-numbers language-powershell"><code class="language-powershell">这个周一的表的建表语句<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># sed -n '/CREATE TABLE `oldguo` /,/\;/p' /data/backup/full.sql >/data/backup/create.sql</span>插入数据<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># grep -i 'INSERT INTO `oldguo`'  /data/backup/full.sql >/data/backup/insert.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-binlog-的截取"><a href="#2-binlog-的截取" class="headerlink" title="2-binlog 的截取"></a>2-binlog 的截取</h4><pre class="line-numbers language-powershell"><code class="language-powershell">范围：     起点： 通过备份。    <span class="token function">SET</span> @@GLOBAL<span class="token punctuation">.</span>GTID_PURGED=<span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1-47'</span><span class="token punctuation">;</span>    终点： 通过     <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true">#  mysql -uroot -p123 -e "show binlog events in 'mysql-bin.000023'" |grep -B 1 'DROP TABLE\ `oldguo`'</span>    mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023    163044    Gtid    6    163109    <span class="token function">SET</span> @@SESSION<span class="token punctuation">.</span>GTID_NEXT= <span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:54'</span>    mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023    163109    Query    6    163232    use `oldboy`<span class="token punctuation">;</span> DROP TABLE `oldguo` <span class="token operator">/</span><span class="token operator">*</span> generated by server <span class="token operator">*</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-按照这个号码截取"><a href="#3-按照这个号码截取" class="headerlink" title="3-按照这个号码截取"></a>3-按照这个号码截取</h4><pre class="line-numbers language-mysql"><code class="language-mysql">root@db01 ~]# mysqlbinlog --include-gtids='202628e9-9265-11ea-b4a0-000c29248f69:48-53' /data/3306/logs/mysql-bin.000023 |grep -B 8  '`oldboy`.`oldguo`'|grep 'GTID_NEXT'SET @@SESSION.GTID_NEXT= '202628e9-9265-11ea-b4a0-000c29248f69:49'/*!*/;SET @@SESSION.GTID_NEXT= '202628e9-9265-11ea-b4a0-000c29248f69:50'/*!*/;SET @@SESSION.GTID_NEXT= '202628e9-9265-11ea-b4a0-000c29248f69:53'/*!*/;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-截取："><a href="#4-截取：" class="headerlink" title="4-截取："></a>4-截取：</h4><blockquote><pre class="line-numbers language-powershell"><code class="language-powershell">方法1：                                     <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlbinlog --skip-gtids --include-gtids='202628e9-9265-11ea-b4a0-000c29248f69:48-53' 【不要排除】--exclude-gtids='202628e9-9265-11ea-b4a0-000c29248f69:51-52' /data/3306/logs/mysql-bin.000023 >/data/backup/bin.sql</span>方法2： mysqlbinlog <span class="token operator">--</span>skip<span class="token operator">-</span>gtids <span class="token operator">--</span>include<span class="token operator">-</span>gtids=<span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:48-50'</span><span class="token punctuation">,</span><span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:53'</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span>logs<span class="token operator">/</span>mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000023 ><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>bin1<span class="token punctuation">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="5-1-恢复数据"><a href="#5-1-恢复数据" class="headerlink" title="5-1-恢复数据"></a>5-1-恢复数据</h3><pre class="line-numbers language-mysql"><code class="language-mysql">use oldboy;set sql_log_bin=0;source /data/backup/create.sqlsource /data/backup/insert.sqlcommit;source /data/backup/bin.sqlset sql_log_bin=1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-实现单库单表备份"><a href="#5-实现单库单表备份" class="headerlink" title="5-实现单库单表备份"></a>5-实现单库单表备份</h1><pre class="line-numbers language-mysql"><code class="language-mysql">shell# mkdir -p /data/backup/single_bakmysql> select concat("mysqldump -uroot -p123 ",table_schema," ",table_name," >/data/backup/single_bak/",table_schema,"_",table_name,".sql") from information_schema.tables where table_schema not in ('sys','information_schema','performance_schema') into outfile '/tmp/single_bak.sh';shell# sh /tmp/single_bak.sh &>/tmp/bak.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-Percona-Xtrabackup（PXB-XBK）"><a href="#6-Percona-Xtrabackup（PXB-XBK）" class="headerlink" title="6-Percona Xtrabackup（PXB\XBK）"></a>6-Percona Xtrabackup（PXB\XBK）</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>percona公司研发<br>xtrabackup  –》C  C++<br>innobackupex  –》perl语言<br>8.0之前，2.4.x<br>8.0之后，8.0<br>物理备份工具，类似于cp文件。支持：全备和增量备份。</p></blockquote><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1-安装"></a>1-安装</h2><pre class="line-numbers language-CQL"><code class="language-CQL">4.2.1 安装依赖包：wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repoyum -y install perl perl-devel libaio libaio-devel perl-Time-HiRes perl-DBD-MySQL libev4.2.2 下载软件并安装wget https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.12/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.12-1.el7.x86_64.rpmyum -y install percona-xtrabackup-24-2.4.4-1.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-全备"><a href="#2-全备" class="headerlink" title="2-全备"></a>2-全备</h2><pre class="line-numbers language-powershell"><code class="language-powershell">4<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1 介绍 拷贝，<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>下的数据文件。InnoDB  ： 热备。拷贝ibdataN<span class="token punctuation">,</span>UNDO00N <span class="token punctuation">,</span>ibtmpN <span class="token punctuation">,</span>ibd 。通过截取变化redo。 非InnoDB： FTWRL，全局锁。拷贝非INNODB的文件frm\myi\myd\<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>只能本地备份。<span class="token namespace">[client]</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-全备实现"><a href="#2-1-全备实现" class="headerlink" title="2.1-全备实现"></a>2.1-全备实现</h3><hr><pre class="line-numbers language-CQL"><code class="language-CQL">[root@db01 backup]# innobackupex --user=root --password=123 /data/backup/test说明： 备份完成后，自动生成基于时间戳的目录。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>###（1）xtrabackup_binlog_info </p><pre class="line-numbers language-CQL"><code class="language-CQL">记录binlog位置点， 截取binlog起点位置。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="（2）xtrabackup-checkpoints"><a href="#（2）xtrabackup-checkpoints" class="headerlink" title="（2）xtrabackup_checkpoints"></a>（2）xtrabackup_checkpoints</h3><pre class="line-numbers language-CQL"><code class="language-CQL"> LSN号码信息from_lsn = 0         # 一般增量备份会关注，一般上次备份的to_lsn的位置to_lsn = 180881595   # CKPT-LSNlast_lsn = 180881604 # xtrabackup_logfile LSN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（3）xtrabackup-info"><a href="#（3）xtrabackup-info" class="headerlink" title="（3）xtrabackup_info"></a>（3）xtrabackup_info</h3><pre class="line-numbers language-powershell"><code class="language-powershell">备份总览信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="（4）xtrabackup-logfile"><a href="#（4）xtrabackup-logfile" class="headerlink" title="（4）xtrabackup_logfile"></a>（4）xtrabackup_logfile</h3><pre><code># 备份期间产生的redo变化</code></pre><h2 id="3-自定义目录备份："><a href="#3-自定义目录备份：" class="headerlink" title="3-自定义目录备份："></a>3-自定义目录备份：</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 xbk]</span><span class="token comment" spellcheck="true"># innobackupex --user=root --password=123 --no-timestamp /data/backup/xbk/full_`date +%F`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-全备恢复应用"><a href="#4-全备恢复应用" class="headerlink" title="4-全备恢复应用"></a>4-全备恢复应用</h2><h3 id="1-故障模拟-1"><a href="#1-故障模拟-1" class="headerlink" title="1-故障模拟"></a>1-故障模拟</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 xbk]</span><span class="token comment" spellcheck="true"># pkill mysqld </span><span class="token namespace">[root@db01 xbk]</span><span class="token comment" spellcheck="true"># rm -rf /data/3306/data/*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-使用全备恢复数据"><a href="#2-使用全备恢复数据" class="headerlink" title="2-使用全备恢复数据"></a>2-使用全备恢复数据</h3><pre class="line-numbers language-powershell"><code class="language-powershell">（1）prepare 准备备份阶段  重用了CR ： 自动故障恢复。DWB<span class="token operator">+</span>redo前滚和undo回滚。  <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># innobackupex --apply-log /data/backup/xbk/full</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-copy-back-恢复"><a href="#3-copy-back-恢复" class="headerlink" title="3-copy-back 恢复"></a>3-copy-back 恢复</h3><pre class="line-numbers language-powershell"><code class="language-powershell">方法一：   <span class="token namespace">[root@db01 full]</span><span class="token comment" spellcheck="true"># cp -a /data/backup/xbk/full/*  /data/3306/data/</span>  或者： <span class="token function">mv</span>  <span class="token namespace">[root@db01 full]</span><span class="token comment" spellcheck="true"># chown -R mysql.mysql /data/*</span>  <span class="token namespace">[root@db01 full]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld start</span>  Starting MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span>  方法二：   <span class="token namespace">[root@db01 full]</span><span class="token comment" spellcheck="true"># innobackupex --copy-back /data/backup/xbk/full</span>  <span class="token namespace">[root@db01 full]</span><span class="token comment" spellcheck="true"># innobackupex --move-back /data/backup/xbk/full</span> 方法三：   直接指定数据路径为：  vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf  datadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>xbk<span class="token operator">/</span>full  chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span> <span class="token operator">/</span><span class="token keyword">data</span>/<span class="token operator">*</span>   <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld <span class="token function">start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-增量备份（incremental）功能"><a href="#5-增量备份（incremental）功能" class="headerlink" title="5-增量备份（incremental）功能"></a>5-增量备份（incremental）功能</h2><blockquote><h4 id="自带的功能。"><a href="#自带的功能。" class="headerlink" title="自带的功能。"></a>自带的功能。</h4><p>每次增量一般是将最近一次备份作为参照物。<br>自动读取参照物cat xtrabackup_checkpoints中to_lsn值，与当前CKPT的LSN对比，备份变化过page。备份期间新的数据变化，通过redo自动备份。<br>恢复数据时，需要把所有需要的增量合并到FULL中。无法通过增量单独恢复数据，依赖与全备。</p></blockquote><h3 id="1-增量备份演练"><a href="#1-增量备份演练" class="headerlink" title="1-增量备份演练"></a>1-增量备份演练</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 备份前数据准备：</span>mysql> create database xbk charset utf8mb4<span class="token punctuation">;</span>mysql> use xbkmysql> create table full <span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> insert into full values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 模拟周日 23:00全备 </span>innobackupex <span class="token operator">--</span>user=root <span class="token operator">--</span>password=123 <span class="token operator">--</span>no<span class="token operator">-</span>timestamp <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>full_`date <span class="token operator">+</span><span class="token operator">%</span>F`<span class="token comment" spellcheck="true"># 模拟周一白天数据变化 </span>mysql> use xbkmysql> create table inc1 <span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> insert into  inc1 values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 模拟周一23:00增量备份</span>innobackupex <span class="token operator">--</span>user=root <span class="token operator">--</span>password=123  <span class="token operator">--</span>no<span class="token operator">-</span>timestamp   <span class="token operator">--</span>incremental <span class="token operator">--</span>incremental<span class="token operator">-</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>full_2020<span class="token operator">-</span>05<span class="token operator">-</span>12  <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>inc1_`date <span class="token operator">+</span><span class="token operator">%</span>F`<span class="token comment" spellcheck="true"># 模拟周二白天数据变化 </span>mysql> use xbkmysql> create table inc2 <span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> insert into  inc2 values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 模拟周二23:00增量备份</span>innobackupex <span class="token operator">--</span>user=root <span class="token operator">--</span>password=123  <span class="token operator">--</span>no<span class="token operator">-</span>timestamp   <span class="token operator">--</span>incremental <span class="token operator">--</span>incremental<span class="token operator">-</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>inc1_2020<span class="token operator">-</span>05<span class="token operator">-</span>12  <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>inc2_`date <span class="token operator">+</span><span class="token operator">%</span>F`<span class="token comment" spellcheck="true"># 模拟周三白天数据变化 </span>mysql> use xbkmysql> create table inc3<span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> insert into  inc3 values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 模拟周三23:00增量备份</span>innobackupex <span class="token operator">--</span>user=root <span class="token operator">--</span>password=123  <span class="token operator">--</span>no<span class="token operator">-</span>timestamp   <span class="token operator">--</span>incremental <span class="token operator">--</span>incremental<span class="token operator">-</span>basedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>inc2_2020<span class="token operator">-</span>05<span class="token operator">-</span>12  <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>backup<span class="token operator">/</span>inc3_`date <span class="token operator">+</span><span class="token operator">%</span>F`<span class="token comment" spellcheck="true"># 模拟周四白天的数据变化。</span>mysql> use xbkmysql> create table inc4<span class="token punctuation">(</span>id int<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> insert into  inc4 values<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 周四下午出现数据损坏。如何恢复到误删除之前。</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># pkill mysqld</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># rm -rf /data/backup/xbk/full/*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意增量备份叠加</p><hr><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">[root@China /data/3306/logs] # innobackupex  --no-timestamp   --incremental --incremental-basedir=/data/backup/full_2020-05-13  /data/backup/inc1_`date +%F` [root@China /data/3306/logs] # innobackupex  --no-timestamp   --incremental --incremental-basedir=/data/backup/inc1_2020-05-13  /data/backup/inc2_`date +%F` [root@China /data/3306/logs] # innobackupex  --no-timestamp   --incremental --incremental-basedir=/data/backup/inc2_2020-05-13  /data/backup/inc3_`date +%F` <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-恢复思路？"><a href="#6-恢复思路？" class="headerlink" title="6-恢复思路？"></a>6-恢复思路？</h2><h3 id="（1）我们有什么？"><a href="#（1）我们有什么？" class="headerlink" title="（1）我们有什么？"></a>（1）我们有什么？</h3><hr><pre class="line-numbers language-powershell"><code class="language-powershell">备份：  full<span class="token operator">+</span>inc1<span class="token operator">+</span>inc2<span class="token operator">+</span>inc3 binlog:full以来全量的binlog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="（2）处理备份"><a href="#（2）处理备份" class="headerlink" title="（2）处理备份"></a>（2）处理备份</h3><pre class="line-numbers language-powershell"><code class="language-powershell">需要将inc1\inc2\inc3按顺序依次合并到全备，并进行prepare。    <span class="token operator">--</span>redo<span class="token operator">-</span>only       This option should be used when preparing the base full                      backup and when merging all incrementals except the last                      one<span class="token punctuation">.</span> This forces xtrabackup to skip the <span class="token string">"rollback"</span> phase                      and <span class="token keyword">do</span> a <span class="token string">"redo"</span> only<span class="token punctuation">.</span> This is necessary <span class="token keyword">if</span> the backup                      will have incremental changes applied to it later<span class="token punctuation">.</span> See                      the xtrabackup documentation <span class="token keyword">for</span> details<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-powershell"><code class="language-powershell">从官方角度：基础全备和合并所有增量（排除最后一个）都需要此参数原理角度： 使所有备份合并时，LSN必须是连续的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/QQ%E5%9B%BE%E7%89%8720200513162111-1589599559791.png" alt="QQ图片20200513162111"></p><h3 id="1-base-full"><a href="#1-base-full" class="headerlink" title="1.  base_full"></a>1.  base_full</h3><pre class="line-numbers language-SPARQL"><code class="language-SPARQL"> [root@db01 ~]# innobackupex --apply-log --redo-only  /data/backup/full_2020-05-12/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-inc1合并到full中，并且prepare"><a href="#2-inc1合并到full中，并且prepare" class="headerlink" title="2.  inc1合并到full中，并且prepare"></a>2.  inc1合并到full中，并且prepare</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># cd /data/backup/</span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># innobackupex --apply-log --redo-only   --incremental-dir=inc1_2020-05-12 full_2020-05-12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="检验合并结果："><a href="#检验合并结果：" class="headerlink" title="检验合并结果："></a>检验合并结果：</h4><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">cat</span> full_2020<span class="token operator">-</span>05<span class="token operator">-</span>12<span class="token operator">/</span>xtrabackup_checkpoints  <span class="token punctuation">|</span>grep <span class="token string">"to_lsn"</span><span class="token function">cat</span> inc1_2020<span class="token operator">-</span>05<span class="token operator">-</span>12<span class="token operator">/</span>xtrabackup_checkpoints <span class="token punctuation">|</span>grep <span class="token string">"to_lsn"</span>一样的  ok <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-inc2合并到full中，并且prepare"><a href="#3-inc2合并到full中，并且prepare" class="headerlink" title="3.  inc2合并到full中，并且prepare"></a>3.  inc2合并到full中，并且prepare</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># cd /data/backup/</span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># innobackupex --apply-log --redo-only   --incremental-dir=inc2_2020-05-12 full_2020-05-12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="检验合并结果：-1"><a href="#检验合并结果：-1" class="headerlink" title="检验合并结果："></a>检验合并结果：</h4><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># </span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># cat full_2020-05-12/xtrabackup_checkpoints  |grep "to_lsn"</span>to_lsn = 180902505<span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># cat inc2_2020-05-12/xtrabackup_checkpoints |grep "to_lsn"</span>to_lsn = 180902505<span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-inc3合并到full中，并且prepare"><a href="#4-inc3合并到full中，并且prepare" class="headerlink" title="4. inc3合并到full中，并且prepare"></a>4. inc3合并到full中，并且prepare</h3><hr><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># cd /data/backup/</span><span class="token namespace">[root@db01 backup]</span><span class="token comment" spellcheck="true"># innobackupex --apply-log   --incremental-dir=inc3_2020-05-12 full_2020-05-12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="检查合并结果"><a href="#检查合并结果" class="headerlink" title="检查合并结果"></a>检查合并结果</h4><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">cat full_2020-05-12/xtrabackup_checkpoints  |grep "to_lsn"cat inc3_2020-05-12/xtrabackup_checkpoints |grep "to_lsn"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-将合-并后全备再次prep-are"><a href="#5-将合-并后全备再次prep-are" class="headerlink" title="5. 将合==并后全备再次prep==are"></a>5. 将合==并后全备再次prep==are</h3><pre><code>innobackupex --apply-log  /data/backup/full_2020-05-12/</code></pre><h4 id="（3）恢复并启动"><a href="#（3）恢复并启动" class="headerlink" title="（3）恢复并启动"></a>（3）恢复并启动</h4><pre class="line-numbers language-javascript"><code class="language-javascript"> 到这步，数据已经恢复到周三晚上备份结束后的状态。 vim <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data rm <span class="token operator">-</span>rf <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token operator">*</span>  <span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># innobackupex <span class="token operator">--</span>copy<span class="token operator">-</span>back <span class="token operator">/</span>data<span class="token operator">/</span>backup<span class="token regex">/full_2020-05-12/</span><span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span> <span class="token operator">/</span>data<span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-截取周三增量备份后—-》故障之前所有binlog日志，并进行恢复。"><a href="#6-截取周三增量备份后—-》故障之前所有binlog日志，并进行恢复。" class="headerlink" title="6  截取周三增量备份后—-》故障之前所有binlog日志，并进行恢复。"></a>6  截取周三增量备份后—-》故障之前所有binlog日志，并进行恢复。</h3><p><strong>起点 ：inc3 备份完成后的位置点</strong>  最后一个备份的 的</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql-bin.000025        2069    202628e9-9265-11ea-b4a0-000c29248f69:1-57,88126fcb-93f6-11ea-9896-000c29248f69:1-9    [root@China /data/3306/data] # cat xtrabackup_binlog_infomysql-bin.000030    2029<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>终点： binlog 结尾</strong> </p><p><img src="G:/%E5%B0%8F%E6%98%8E%E5%90%8C%E5%AD%A6%E4%BD%9C%E4%B8%9A%E8%A1%A8/%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%E6%96%87%E4%BB%B6.md/05-mysql%E6%95%B0%E6%8D%AE%E5%BA%93/tup/image-20200516112620894.png" alt="image-20200516112620894"></p><h4 id="5-恢复binlog"><a href="#5-恢复binlog" class="headerlink" title="(5) 恢复binlog"></a>(5) 恢复binlog</h4><pre><code>mysql&gt; set sql_log_bin=0;mysql&gt; source /data/backup/bin.sqlmysql&gt; set sql_log_bin=1;</code></pre><h4 id="6-xbk恢复完成后，清空所有日志"><a href="#6-xbk恢复完成后，清空所有日志" class="headerlink" title="(6) xbk恢复完成后，清空所有日志"></a>(6) xbk恢复完成后，清空所有日志</h4><pre><code>mysql&gt; reset master;</code></pre><h4 id="7-立即再做个全备。"><a href="#7-立即再做个全备。" class="headerlink" title="(7) 立即再做个全备。"></a>(7) 立即再做个全备。</h4><pre><code>innobackupex  --no-timestamp     /data/backup/inc1_`date +%F` nnobackupex --user=root --password=123 --no-timestamp /data/backup/xbk/full_`date +%F`</code></pre><hr><blockquote><p><strong>下午作业 ：</strong><br><strong>2T XBK 完整备份+binlog完整.误删除的表是   10G  t1  ,drop table  t1<br>提示：表空间迁移+t1 binlog</strong></p></blockquote><hr><p>总结：<br>基础备份策略：<br>MDP 备份 + binlog   ===》 全备完整恢复、部分数据损坏恢复<br>XBK full+inc+binlog ===&gt;  全备完整恢复、部分数据损坏恢复<br>XBK full+binlog     ===&gt;  全备完整恢复、部分数据损坏恢复</p><hr><p>自行研究一下 into outfile  / load data in file</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08-mysq日志管理</title>
      <link href="/2020/05/16/08-mysql-ri-zhi-guan-li/"/>
      <url>/2020/05/16/08-mysql-ri-zhi-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="1-日志管理"><a href="#1-日志管理" class="headerlink" title="1-日志管理"></a>1-日志管理</h1><h2 id="1-错误日志"><a href="#1-错误日志" class="headerlink" title="1. 错误日志"></a>1. 错误日志</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>1 作用 记录数据库启动以来，状态、警告、报错。诊断数据库报错问题。1<span class="token punctuation">.</span>2 配置 默认： 开启状态。存放在数据目录下<span class="token punctuation">(</span><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token punctuation">)</span><span class="token punctuation">,</span>名字：主机名<span class="token punctuation">.</span>err 。查询配置： mysql> <span class="token function">select</span> @@log_error<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> @@log_error <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> <span class="token punctuation">.</span><span class="token operator">/</span>db01<span class="token punctuation">.</span>err  <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span>mysql> <span class="token function">select</span> @@datadir<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> @@datadir        <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span><span class="token punctuation">|</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span> <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-修改配置："><a href="#2-修改配置：" class="headerlink" title="2 修改配置："></a>2 修改配置：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">修改配置： <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mkdir -p /data/3306/logs</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># chown -R mysql.mysql /data/*</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># vim /etc/my.cnf</span><span class="token namespace">[mysqld]</span><span class="token comment" spellcheck="true">#添加：</span>log_error=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span>logs<span class="token operator">/</span>mysql<span class="token punctuation">.</span>err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-重启报错"><a href="#3-重启报错" class="headerlink" title="3-重启报错"></a>3-重启报错</h3><pre class="line-numbers language-powershell"><code class="language-powershell">重启报错 <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span><span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">+</span>Shutting down MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> Starting MySQL<span class="token punctuation">.</span>2020<span class="token operator">-</span>05<span class="token operator">-</span>09T06:51:36<span class="token punctuation">.</span>457401Z mysqld_safe error: log<span class="token operator">-</span>error <span class="token function">set</span> to <span class="token string">'/data/3306/logs/mysql.err'</span><span class="token punctuation">,</span> however file don<span class="token string">'t exists. Create writable for user '</span>mysql'<span class="token punctuation">.</span> ERROR<span class="token operator">!</span> The server quit without updating PID file <span class="token punctuation">(</span><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>db01<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">++</span>+<span class="token operator">+</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># touch /data/3306/logs/mysql.err </span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># chown -R mysql.mysql /data/*</span>重新启动<span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-查看日志"><a href="#4-查看日志" class="headerlink" title="4-查看日志"></a>4-查看日志</h3><pre class="line-numbers language-powershell"><code class="language-powershell">模拟故障 <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># chown -R root.root /data/3306/data/ibdata1 </span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span>Shutting down MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> Starting MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span> ERROR<span class="token operator">!</span> The server quit without updating PID file <span class="token punctuation">(</span><span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>db01<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># </span><span class="token comment" spellcheck="true"># 排查思路 : </span><span class="token namespace">[ERROR]</span>  行： 2020<span class="token operator">-</span>05<span class="token operator">-</span>09T06:56:09<span class="token punctuation">.</span>226056Z 0 <span class="token namespace">[ERROR]</span> InnoDB: The innodb_system <span class="token keyword">data</span> file <span class="token string">'ibdata1'</span> must be writable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-切割："><a href="#5-切割：" class="headerlink" title="5-切割："></a>5-切割：</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token function">cp</span> mysql<span class="token punctuation">.</span>err mysql<span class="token punctuation">.</span>err_`date <span class="token operator">+</span><span class="token operator">%</span>F`<span class="token function">echo</span> > mysql<span class="token punctuation">.</span>err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-二进制日志（binlog）"><a href="#2-二进制日志（binlog）" class="headerlink" title="2.二进制日志（binlog）"></a>2.二进制日志（binlog）</h2><blockquote><p>作用<br>数据恢复。<br>主从复制。</p></blockquote><h3 id="2-1记录的内容介绍"><a href="#2-1记录的内容介绍" class="headerlink" title="2.1记录的内容介绍"></a>2.1记录的内容介绍</h3><pre><code>记录修改类操作(逻辑日志，类似于SQL记录)。DML： insert update delete DDL:  create drop alter trucateDCL:  grant revoke</code></pre><h3 id="2-2配置方法"><a href="#2-2配置方法" class="headerlink" title="2.2配置方法"></a>2.2配置方法</h3><pre class="line-numbers language-powershell"><code class="language-powershell">默认： 未开启 。基础参数查询： mysql> <span class="token function">select</span> @@log_bin<span class="token punctuation">;</span>mysql> <span class="token function">select</span> @@log_bin_basename<span class="token punctuation">;</span>mysql> <span class="token function">select</span> @@server_id<span class="token punctuation">;</span>设置基础参数： vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfserver_id=6                        <span class="token comment" spellcheck="true"># 主机ID，在主从复制会使用</span>log_bin=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span>logs<span class="token operator">/</span>mysql<span class="token operator">-</span>bin  <span class="token comment" spellcheck="true"># 开关+文件路径+文件名前缀  最终格式： mysql-bin.000001 </span><span class="token comment" spellcheck="true"># 重启生效 </span><span class="token namespace">[root@db01 logs]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span>Shutting down MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> Starting MySQL<span class="token punctuation">.</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3binlog内容的记录格式"><a href="#2-3binlog内容的记录格式" class="headerlink" title="2.3binlog内容的记录格式"></a>2.3binlog内容的记录格式</h3><pre class="line-numbers language-powershell"><code class="language-powershell">2<span class="token punctuation">.</span>4<span class="token punctuation">.</span>1 事件（event）的方式记录最小的记录单元。<span class="token comment" spellcheck="true"># 每个事件：</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span>事件描述 ： 事件戳、server_id、加密方式、开始的位置（start_pos）、结束位置点（end_pos）<span class="token punctuation">(</span>2<span class="token punctuation">)</span>事件内容 :  修改类的操作：SQL 语句 或者 数据行变化。<span class="token comment" spellcheck="true"># 重点关注： </span>开始的位置（start_pos） ： 1000字节结束位置点（end_pos）   ： 事件内容 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4二进制日志事件内容格式"><a href="#2-4二进制日志事件内容格式" class="headerlink" title="2.4二进制日志事件内容格式"></a>2.4二进制日志事件内容格式</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@binlog_format<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@binlog_format <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> ROW             <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-41作用："><a href="#2-41作用：" class="headerlink" title="2.41作用："></a>2.41作用：</h4><pre class="line-numbers language-powershell"><code class="language-powershell">对于DDL、DCL语句，直接将SQL本身记录到binlog中对于DML ： insert、update、delete 受到binlog_format参数控制。SBR ： Statement :  语句模式。之前版本，默认模式RBR ： ROW       ： 行记录模式。5<span class="token punctuation">.</span>7以后，默认模式MBR ： miexd     :  混合模式。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-SBR、RBR区别："><a href="#2-5-SBR、RBR区别：" class="headerlink" title="2.5.SBR、RBR区别："></a>2.5.SBR、RBR区别：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">update t1 <span class="token function">set</span> name=<span class="token string">'zhangsan'</span> where id&lt;100<span class="token punctuation">;</span>SBR: 记录SQL本身 。RBR: 100个数据行的变化。SBR日志量少，RBR日志量大。SBR记录不够准确，RBR记录够准确。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-binlog-的应用"><a href="#2-6-binlog-的应用" class="headerlink" title="2.6.binlog 的应用"></a>2.6.binlog 的应用</h3><pre class="line-numbers language-mysql"><code class="language-mysql">查询# 日志文件情况查询 : ## 查看所有的日志文件信息mysql> show binary logs;+------------------+-----------+| Log_name         | File_size |+------------------+-----------+| mysql-bin.000001 |       154 |+------------------+-----------+## 刷新一个新的日志mysql> flush logs;mysql> flush logs;mysql> flush logs;mysql> flush logs;mysql> show binary logs;+------------------+-----------+| Log_name         | File_size |+------------------+-----------+| mysql-bin.000001 |       201 || mysql-bin.000002 |       201 || mysql-bin.000003 |       201 || mysql-bin.000004 |       201 || mysql-bin.000005 |       154 |+------------------+-----------+## 当前数据库使用的二进制日志 mysql> show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000005 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-内容查询"><a href="#2-内容查询" class="headerlink" title="2-内容查询"></a>2-内容查询</h1><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> create database ku charset utf8mb4;mysql> use kuDatabase changedmysql> create table biao (id int);mysql> insert into biao values(1);mysql> commit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-1-查看日志事件"><a href="#2-1-查看日志事件" class="headerlink" title="2.1-查看日志事件"></a>2.1-查看日志事件</h2><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> show binlog events in 'mysql-bin.000005';+------------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name         | Pos | Event_type     | Server_id | End_log_pos | Info                                  |+------------------+-----+----------------+-----------+-------------+---------------------------------------+| mysql-bin.000005 |   4 | Format_desc    |         6 |         123 | Server ver: 5.7.28-log, Binlog ver: 4 || mysql-bin.000005 | 123 | Previous_gtids |         6 |         154 |                                       || mysql-bin.000005 | 154 | Anonymous_Gtid |         6 |         219 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'  || mysql-bin.000005 | 219 | Query          |         6 |         323 | create database ku charset utf8mb4    || mysql-bin.000005 | 323 | Anonymous_Gtid |         6 |         388 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'  || mysql-bin.000005 | 388 | Query          |         6 |         484 | use `ku`; create table biao (id int)  || mysql-bin.000005 | 484 | Anonymous_Gtid |         6 |         549 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'  || mysql-bin.000005 | 549 | Query          |         6 |         619 | BEGIN                                 || mysql-bin.000005 | 619 | Table_map      |         6 |         664 | table_id: 108 (ku.biao)               || mysql-bin.000005 | 664 | Write_rows     |         6 |         704 | table_id: 108 flags: STMT_END_F       || mysql-bin.000005 | 704 | Xid            |         6 |         735 | COMMIT /* xid=24 */                   |+------------------+-----+----------------+-----------+-------------+---------------------------------------+mysql> ## 查看日志内容 [root@db01 logs]# mysqlbinlog /data/3306/logs/mysql-bin.000005 #### create table 日志内容# at 388#200509 15:49:59 server id 6  end_log_pos 484 CRC32 0x8b05dfaf     Query    thread_id=3    exec_time=0    error_code=0use `ku`/*!*/;create table biao (id int)/*!*/;# at 484#### insert 操作的日志内容# at 549#200509 15:50:36 server id 6  end_log_pos 619 CRC32 0x515eec96     Query    thread_id=3    exec_time=0    error_code=0SET TIMESTAMP=1589010636/*!*/;BEGIN/*!*/;# at 619#200509 15:50:36 server id 6  end_log_pos 664 CRC32 0xedfb82fb     Table_map: `ku`.`biao` mapped to number 108# at 664#200509 15:50:36 server id 6  end_log_pos 704 CRC32 0x5762132e     Write_rows: table id 108 flags: STMT_END_FBINLOG 'zGC2XhMGAAAALQAAAJgCAAAAAGwAAAAAAAEAAmt1AARiaWFvAAEDAAH7gvvtzGC2Xh4GAAAAKAAAAMACAAAAAGwAAAAAAAEAAgAB//4BAAAALhNiVw=='/*!*/;# at 704#200509 15:50:40 server id 6  end_log_pos 735 CRC32 0xb06a212b     Xid = 24COMMIT/*!*/;[root@db01 logs]# mysqlbinlog --base64-output=decode-rows -vv  /data/3306/logs/mysql-bin.000005 .....略。BEGIN/*!*/;# at 619#200509 15:50:36 server id 6  end_log_pos 664 CRC32 0xedfb82fb     Table_map: `ku`.`biao` mapped to number 108# at 664#200509 15:50:36 server id 6  end_log_pos 704 CRC32 0x5762132e     Write_rows: table id 108 flags: STMT_END_F### INSERT INTO `ku`.`biao`### SET###   @1=1 /* INT meta=0 nullable=1 is_null=0 */# at 704#200509 15:50:40 server id 6  end_log_pos 735 CRC32 0xb06a212b     Xid = 24COMMIT/*!*/;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-binlog日志截取及恢复演练"><a href="#2-2-binlog日志截取及恢复演练" class="headerlink" title="2.2-binlog日志截取及恢复演练"></a>2.2-binlog日志截取及恢复演练</h2><h3 id="2-21-故障模拟"><a href="#2-21-故障模拟" class="headerlink" title="2.21-故障模拟"></a>2.21-故障模拟</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> drop database ku<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> 1 row affected <span class="token punctuation">(</span>0<span class="token punctuation">.</span>01 sec<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 需求恢复ku的所有数据到删库之前。</span>思路：1<span class="token punctuation">.</span> 截取从建库以来到删库之前的所有binlog。<span class="token comment" spellcheck="true">### 起点： 建库的位置点（position）。</span>mysql> show master status<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> File             <span class="token punctuation">|</span> Position <span class="token punctuation">|</span> Binlog_Do_DB <span class="token punctuation">|</span> Binlog_Ignore_DB <span class="token punctuation">|</span> Executed_Gtid_Set <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000005 <span class="token punctuation">|</span>      886 <span class="token punctuation">|</span>              <span class="token punctuation">|</span>                  <span class="token punctuation">|</span>                   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>+<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span>mysql> show binlog events in <span class="token string">'mysql-bin.000005'</span><span class="token punctuation">;</span><span class="token punctuation">|</span> mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000005 <span class="token punctuation">|</span> 219 <span class="token punctuation">|</span> Query          <span class="token punctuation">|</span>         6 <span class="token punctuation">|</span>         323 <span class="token punctuation">|</span> create database ku charset utf8mb4   <span class="token comment" spellcheck="true">### 终点：删库的位置点（position）。</span><span class="token punctuation">|</span> mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000005 <span class="token punctuation">|</span> 800 <span class="token punctuation">|</span> Query          <span class="token punctuation">|</span>         6 <span class="token punctuation">|</span>         886 <span class="token punctuation">|</span> drop database ku   <span class="token namespace">[root@db01 logs]</span><span class="token comment" spellcheck="true"># mysqlbinlog --start-position=219 --stop-position=800 /data/3306/logs/mysql-bin.000005 >/tmp/bin.sql </span>2<span class="token punctuation">.</span> 将截取的日志进行回放。mysql> <span class="token function">set</span> sql_log_bin=0<span class="token punctuation">;</span>mysql> source <span class="token operator">/</span>tmp<span class="token operator">/</span>bin<span class="token punctuation">.</span>sql<span class="token punctuation">;</span>mysql> <span class="token function">set</span> sql_log_bin=1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-彩蛋：场景模拟"><a href="#3-彩蛋：场景模拟" class="headerlink" title="3.彩蛋：场景模拟"></a>3.彩蛋：场景模拟</h2><blockquote><p>思考一下：如果生产中会有什么痛点？</p><ol><li>需要的日志在多个文件中，怎么截取？ </li></ol><h1 id="场景模拟："><a href="#场景模拟：" class="headerlink" title="场景模拟："></a>场景模拟：</h1></blockquote><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> show master status ;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000005 |      886 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+mysql> create database tongdian charset=utf8mb4;mysql> use tongdian mysql> create table t1 (id int);mysql> flush logs;mysql> show master status ;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000006 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+mysql> insert into t1 values(1),(2),(3);mysql> commit;mysql> flush logs;mysql> show master status ;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000007 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+mysql> create table t2(id int);mysql> insert into t2 values(1),(2),(3);mysql> commit;mysql> flush logs;mysql> show master status ;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000008 |      154 |              |                  |                   |mysql> insert into t2 values(11),(22),(33);mysql> commit;mysql> drop database tongdian;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1恢复方法："><a href="#3-1恢复方法：" class="headerlink" title="3.1恢复方法："></a>3.1恢复方法：</h3><pre class="line-numbers language-javascript"><code class="language-javascript">方法<span class="token number">1</span>： 分段截取<span class="token operator">--</span>start<span class="token operator">-</span>position    <span class="token operator">--</span>stop<span class="token operator">-</span>position 方法<span class="token number">2</span><span class="token punctuation">:</span> 时间戳截取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2找起点-：建库的时间戳"><a href="#3-2找起点-：建库的时间戳" class="headerlink" title="3.2找起点 ：建库的时间戳"></a>3.2找起点 ：建库的时间戳</h3><pre class="line-numbers language-powershell"><code class="language-powershell">（1） 起点：  postion 号   mysql> show binlog events in <span class="token string">'mysql-bin.000005'</span><span class="token punctuation">;</span><span class="token punctuation">|</span> mysql<span class="token operator">-</span>bin<span class="token punctuation">.</span>000005 <span class="token punctuation">|</span>  951 <span class="token punctuation">|</span> Query          <span class="token punctuation">|</span>         6 <span class="token punctuation">|</span>        1073 <span class="token punctuation">|</span> create database tongdian charset=utf8mb4 <span class="token punctuation">|</span>（2） 通过position 过滤时间戳<span class="token namespace">[root@db01 logs]</span><span class="token comment" spellcheck="true"># mysqlbinlog --start-position=951  --stop-position=1073 mysql-bin.000005 |grep -A 1 '^\#\ at\ 951'</span><span class="token comment" spellcheck="true"># at 951</span><span class="token comment" spellcheck="true">#200509 17:11:23 server id 6  end_log_pos 1073 CRC32 0x220759ef     Query    thread_id=8    exec_time=0    error_code=0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3找终点"><a href="#3-3找终点" class="headerlink" title="3.3找终点"></a>3.3找终点</h3><pre class="line-numbers language-mysql"><code class="language-mysql">[root@db01 logs]# mysql -e "show binlog events in  'mysql-bin.000008'"+------------------+-----+----------------+-----------+-------------+---------------------------------------+| Log_name         | Pos | Event_type     | Server_id | End_log_pos | Info                                  |+------------------+-----+----------------+-----------+-------------+---------------------------------------+| mysql-bin.000008 |   4 | Format_desc    |         6 |         123 | Server ver: 5.7.28-log, Binlog ver: 4 || mysql-bin.000008 | 123 | Previous_gtids |         6 |         154 |                                       || mysql-bin.000008 | 154 | Anonymous_Gtid |         6 |         219 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'  || mysql-bin.000008 | 219 | Query          |         6 |         295 | BEGIN                                 || mysql-bin.000008 | 295 | Table_map      |         6 |         344 | table_id: 112 (tongdian.t2)           || mysql-bin.000008 | 344 | Write_rows     |         6 |         394 | table_id: 112 flags: STMT_END_F       || mysql-bin.000008 | 394 | Xid            |         6 |         425 | COMMIT /* xid=114 */                  || mysql-bin.000008 | 425 | Anonymous_Gtid |         6 |         490 | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'  || mysql-bin.000008 | 490 | Query          |         6 |         594 | drop database tongdian                | mysqlbinlog  mysql-bin.000008[root@db01 logs]#  mysqlbinlog  mysql-bin.000008#200509 17:13:52 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4截取日志"><a href="#3-4截取日志" class="headerlink" title="3.4截取日志"></a>3.4截取日志</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 logs]</span><span class="token comment" spellcheck="true"># mysqlbinlog  --start-datetime="2020-05-09 17:11:23"  --stop-datetime="2020-05-09 17:14:01"   mysql-bin.000005 mysql-bin.000006 mysql-bin.000007 mysql-bin.000008 >/tmp/data.sql</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10个文件 ：  </p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token number">1</span> 和 <span class="token number">10</span>  pos 中间mysqlbinlog start<span class="token operator">-</span>pos <span class="token number">1</span> <span class="token operator">></span><span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token number">1</span><span class="token punctuation">.</span>sql mysqlbinlog    <span class="token number">2</span>、<span class="token number">9</span>  <span class="token operator">></span> <span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">.</span>sql  mysqlbinlog stop<span class="token operator">-</span>pos <span class="token number">10</span>  <span class="token operator">></span><span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">.</span>sql <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-gtid取日志"><a href="#3-gtid取日志" class="headerlink" title="3-gtid取日志"></a>3-gtid取日志</h1><h2 id="1-日志截取"><a href="#1-日志截取" class="headerlink" title="1-日志截取"></a>1-日志截取</h2><h3 id="1-只截取某个库"><a href="#1-只截取某个库" class="headerlink" title="1-只截取某个库"></a>1-只截取某个库</h3><h4 id="binlog属于全局日志，日志中有其他库的操作，怎么排除掉？"><a href="#binlog属于全局日志，日志中有其他库的操作，怎么排除掉？" class="headerlink" title="binlog属于全局日志，日志中有其他库的操作，怎么排除掉？"></a>binlog属于全局日志，日志中有其他库的操作，怎么排除掉？</h4><pre><code> 1-只截取某个库mysqlbinlog  -d oldboy mysql-bin.000008 &gt; /tmp/bin.sql </code></pre><h3 id="2-pager-grep-‘drop’-过滤"><a href="#2-pager-grep-‘drop’-过滤" class="headerlink" title="2-pager grep   ‘drop’ 过滤"></a>2-pager grep   ‘drop’ 过滤</h3><p>binlog中100w个事件，怎么快速找到drop database的位置点？ </p><pre class="line-numbers language-CQL"><code class="language-CQL">[root@db01 ~]# mysql -e "show binlog events in 'mysql-bin.000014'" |less[root@db01 ~]# mysql -e "show binlog events in 'mysql-bin.000014'" |grep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><pre class="line-numbers language-powershell"><code class="language-powershell">比如删除的库，建库是在2年前操作的。这种情况怎么办？每天全备，binlog完好的。可以使用 全备<span class="token operator">+</span>binlog方式实现恢复数据故障之前。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="2-基于GTID的binlog应用"><a href="#2-基于GTID的binlog应用" class="headerlink" title="2-基于GTID的binlog应用"></a>2-基于GTID的binlog应用</h2><h3 id="1-GTID-全局事务ID。"><a href="#1-GTID-全局事务ID。" class="headerlink" title="1-GTID 全局事务ID。"></a>1-GTID 全局事务ID。</h3><pre class="line-numbers language-CQL"><code class="language-CQL">对每个事务，进行单独编号。连续不断进行增长。2.6.2 表示方式server_uuid:N<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2-配置"></a>2-配置</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 查看参数</span>mysql> show variables like <span class="token string">'%GTID%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 设置参数 </span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf gtid_mode=ON                  <span class="token comment" spellcheck="true">#开关</span>enforce_gtid_consistency=ON   <span class="token comment" spellcheck="true">#强制GTID一致性</span>log_slave_updates=ON          <span class="token comment" spellcheck="true">#强制从库更新binlog</span><span class="token comment" spellcheck="true"># 建议： 5.7版本以后，都开启GTID。最好是搭建环境就开启。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-应用"><a href="#3-应用" class="headerlink" title="3-应用"></a>3-应用</h3><h4 id="3-1-模拟环境"><a href="#3-1-模拟环境" class="headerlink" title="3.1-模拟环境"></a>3.1-模拟环境</h4><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> create database gtdb charset utf8mb4;Query OK, 1 row affected (0.00 sec)mysql> show master status ;+------------------+----------+--------------+------------------+----------------------------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |+------------------+----------+--------------+------------------+----------------------------------------+| mysql-bin.000016 |      329 |              |                  | 202628e9-9265-11ea-b4a0-000c29248f69:1 |+------------------+----------+--------------+------------------+----------------------------------------+mysql> use gtdb;mysql> create table t1(id int);mysql> show master status ;+------------------+----------+--------------+------------------+------------------------------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |+------------------+----------+--------------+------------------+------------------------------------------+| mysql-bin.000016 |      491 |              |                  | 202628e9-9265-11ea-b4a0-000c29248f69:1-2 |+------------------+----------+--------------+------------------+------------------------------------------+mysql> begin;mysql> insert into t1 values(1);mysql> insert into t1 values(2);mysql> insert into t1 values(3);mysql> commit;mysql> show master status ;+------------------+----------+--------------+------------------+------------------------------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |+------------------+----------+--------------+------------------+------------------------------------------+| mysql-bin.000016 |      914 |              |                  | 202628e9-9265-11ea-b4a0-000c29248f69:1-3 |+------------------+----------+--------------+------------------+------------------------------------------+-----------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-通过GTID方式截取日志"><a href="#4-通过GTID方式截取日志" class="headerlink" title="4-通过GTID方式截取日志"></a>4-通过GTID方式截取日志</h3><pre class="line-numbers language-javascript"><code class="language-javascript">错误的截取<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># mysqlbinlog <span class="token operator">--</span>include<span class="token operator">-</span>gtids<span class="token operator">=</span><span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1-3'</span> <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>logs<span class="token operator">/</span>mysql<span class="token operator">-</span>bin<span class="token number">.000016</span> <span class="token operator">></span><span class="token operator">/</span>tmp<span class="token operator">/</span>gt<span class="token punctuation">.</span>sql补充：  为什么报错？gtid有“幂等性”检查。GTID的生成，通过Set gtid_next命令实现的。例如： SET @@SESSION<span class="token punctuation">.</span>GTID_NEXT<span class="token operator">=</span> <span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1'</span>执行Set命令时，自动检查当前系统是否包含这个GTID信息，如果有就跳过。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-1-正确的方式："><a href="#4-1-正确的方式：" class="headerlink" title="4.1-正确的方式："></a>4.1-正确的方式：</h4><hr><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysqlbinlog --skip-gtids --include-gtids='202628e9-9265-11ea-b4a0-000c29248f69:1-3' /data/3306/logs/mysql-bin.000016 >/tmp/gt1.sql</span><span class="token operator">--</span>skip<span class="token operator">-</span>gtids 必须开启  跳过幂等性检测<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><pre class="line-numbers language-CQL"><code class="language-CQL">思考问题：开了GTID方式之后，是否可以pos方式截取？需要不需要加skip-gtids?可以。需要加--skip-gtids <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><h4 id="4-2-扩展用法"><a href="#4-2-扩展用法" class="headerlink" title="4.2-扩展用法"></a>4.2-扩展用法</h4><p><strong>需求：  gtid ：  1-10  跳过第5个</strong> </p><pre class="line-numbers language-javascript"><code class="language-javascript">需求：  gtid ：  <span class="token number">1</span><span class="token operator">-</span><span class="token number">10</span>  跳过第<span class="token number">5</span>个 mysqlbinlog <span class="token operator">--</span>skip<span class="token operator">-</span>gtids <span class="token operator">--</span>include<span class="token operator">-</span>gtids<span class="token operator">=</span><span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1-10'</span> <span class="token operator">--</span>exclude<span class="token operator">-</span>gtids<span class="token operator">=</span><span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:5'</span>需求： 跨文件截取，bin001 bin002  bin003   <span class="token number">202628e9</span><span class="token operator">-</span><span class="token number">9265</span><span class="token operator">-</span>11ea<span class="token operator">-</span>b4a0<span class="token operator">-</span>000c29248f69<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">10</span> mysqlbinlog <span class="token operator">--</span>skip<span class="token operator">-</span>gtids <span class="token operator">--</span>include<span class="token operator">-</span>gtids<span class="token operator">=</span><span class="token string">'202628e9-9265-11ea-b4a0-000c29248f69:1-10'</span>  bin001 bin002  bin003<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-日志滚动"><a href="#3-日志滚动" class="headerlink" title="3- 日志滚动"></a>3- 日志滚动</h2><h3 id="1-命令触发"><a href="#1-命令触发" class="headerlink" title="1-命令触发"></a>1-命令触发</h3><pre class="line-numbers language-javascript"><code class="language-javascript">mysql<span class="token operator">></span> flush logs<span class="token punctuation">;</span> shell# mysqladmin flush<span class="token operator">-</span>logsshell# mysql <span class="token operator">-</span>e <span class="token string">"flush logs"</span>shell# mysqldump <span class="token operator">-</span>F<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-自动触发"><a href="#2-自动触发" class="headerlink" title="2-自动触发"></a>2-自动触发</h3><pre class="line-numbers language-javascript"><code class="language-javascript">mysql<span class="token operator">></span> select @@max_binlog_size<span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> @@max_binlog_size <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span>        <span class="token number">1073741824</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span>重启数据库，会触发刷新 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-日志删除方式"><a href="#4-日志删除方式" class="headerlink" title="4-日志删除方式"></a>4-日志删除方式</h2><p>默认：不自动清理。直到空间写满。</p><h3 id="1-配置自动清理"><a href="#1-配置自动清理" class="headerlink" title="1- 配置自动清理"></a>1- 配置自动清理</h3><pre class="line-numbers language-javascript"><code class="language-javascript">mysql<span class="token operator">></span> select @@expire_logs_days<span class="token punctuation">;</span>最少设置多少天合适？ 参考全备时间周期。expire_logs_days<span class="token operator">=</span><span class="token number">8</span>例如： 全备周期是<span class="token number">7</span>天。可以保留<span class="token number">8</span>天。一般生产中保留两轮备份周期的日志，<span class="token number">15</span>天。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-手工清理"><a href="#2-手工清理" class="headerlink" title="2-手工清理"></a>2-手工清理</h3><hr><pre class="line-numbers language-powershell"><code class="language-powershell">Examples:PURGE BINARY LOGS TO <span class="token string">'mysql-bin.010'</span><span class="token punctuation">;</span>PURGE BINARY LOGS BEFORE <span class="token string">'2019-04-02 22:46:26'</span><span class="token punctuation">;</span>purge binary logs to 时间或者<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3-删除"></a>3-删除</h4><pre><code>删除 到 10 10 不会删除db01_5.7 [(none)]&gt;purge binary logs to &#39;mysql-bin.000010&#39;;</code></pre><hr><h1 id="4-慢日志-slwlog"><a href="#4-慢日志-slwlog" class="headerlink" title="4-慢日志 slwlog"></a>4-慢日志 slwlog</h1><h2 id="作用：-记录MySQL工作过程中较慢的语句"><a href="#作用：-记录MySQL工作过程中较慢的语句" class="headerlink" title="作用： 记录MySQL工作过程中较慢的语句"></a>作用： 记录MySQL工作过程中较慢的语句</h2><p>默认没有开启。按需求打开。</p><h2 id="1-如何配置"><a href="#1-如何配置" class="headerlink" title="1-如何配置"></a>1-如何配置</h2><h3 id="1-1在线配置"><a href="#1-1在线配置" class="headerlink" title="1.1在线配置"></a>1.1在线配置</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@slow_query_log<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true"># 开关</span>mysql> <span class="token function">set</span> global slow_query_log=1<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># 在线改</span>mysql> <span class="token function">select</span> @@slow_query_log_file<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># 文件位置。离线改。</span>mysql> <span class="token function">select</span> @@long_query_time<span class="token punctuation">;</span>     <span class="token comment" spellcheck="true"># 慢查询时间设定。</span>mysql> <span class="token function">set</span> global long_query_time=0<span class="token punctuation">.</span>1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># 在线设置，最低微秒级别。</span>mysql> <span class="token function">select</span> @@log_queries_not_using_indexes <span class="token comment" spellcheck="true">#如果没走索引会被记录</span>mysql> <span class="token function">set</span> global log_queries_not_using_indexes=1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#在线设置 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-永久生效："><a href="#1-2-永久生效：" class="headerlink" title="1.2-永久生效："></a>1.2-永久生效：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfslow_query_log=1slow_query_log_file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span>logs<span class="token operator">/</span>slow<span class="token punctuation">.</span>log long_query_time=0<span class="token punctuation">.</span>1log_queries_not_using_indexes=1<span class="token comment" spellcheck="true">#重启生效。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>随机模拟慢语句  </p><p>自行创出</p><h2 id="2-慢日志分析"><a href="#2-慢日志分析" class="headerlink" title="2-慢日志分析"></a>2-慢日志分析</h2><p>···</p><blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">mysqldumpslow <span class="token operator">-</span>s c <span class="token operator">-</span>t <span class="token number">5</span> slow<span class="token punctuation">.</span>log <span class="token operator">-</span>s   排序 <span class="token operator">-</span> c   语句发生频次<span class="token operator">-</span>t  <span class="token number">5</span>  最慢的<span class="token number">5</span> 条语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote><pre><code>Reading mysql slow query log from slow.logCount: 7  Time=0.01s (0s)  Lock=0.00s (0s)  Rows=177.1 (1240), root[root]@localhost  select * from t100w as a join t100w as b limit NCount: 6  Time=0.57s (3s)  Lock=0.00s (0s)  Rows=33.7 (202), root[root]@localhost  select k1,count(*) from t100w where id&lt;N group by k1 having count(*)&gt;NCount: 5  Time=0.59s (2s)  Lock=0.00s (0s)  Rows=893.0 (4465), root[root]@localhost  select k1,count(*) from t100w where num&lt;N group by k1,k2Count: 5  Time=0.61s (3s)  Lock=0.00s (0s)  Rows=37.0 (185), root[root]@localhost  select * from t100w where id&lt;N order by num  descCount: 4  Time=0.61s (2s)  Lock=0.00s (0s)  Rows=496.0 (1984), root[root]@localhost  select k1,count(*) from t100w where id&lt;N group by k1,k2</code></pre><h1 id="扩展：-pt-query-digest"><a href="#扩展：-pt-query-digest" class="headerlink" title="扩展： pt-query-digest"></a>扩展： pt-query-digest</h1>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07- MySQL 存储引擎</title>
      <link href="/2020/05/10/07-mysql-cun-chu-yin-qing/"/>
      <url>/2020/05/10/07-mysql-cun-chu-yin-qing/</url>
      
        <content type="html"><![CDATA[<h1 id="07-MySQL-存储引擎"><a href="#07-MySQL-存储引擎" class="headerlink" title="07- MySQL 存储引擎"></a>07- MySQL 存储引擎</h1><h1 id="1-种类与简介"><a href="#1-种类与简介" class="headerlink" title="1-种类与简介"></a>1-种类与简介</h1><h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1-介绍"></a>1-介绍</h3><pre class="line-numbers language-powershell"><code class="language-powershell">存储引擎MySQL中的“文件系统”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>种类</p><pre class="line-numbers language-powershell"><code class="language-powershell">2<span class="token punctuation">.</span> 种类2<span class="token punctuation">.</span>1  Oracle  MySQL自带的存储引擎种类mysql> show engines<span class="token punctuation">;</span>MRG_MYISAM        CSV               MyISAM                      BLACKHOLE         PERFORMANCE_SCHEMAInnoDB           <span class="token operator">*</span>*<span class="token operator">*</span>*<span class="token operator">*</span><span class="token operator">*</span>       ARCHIVE           MEMORY            FEDERATED <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-彩蛋：-请你列举MySQL中支持的存储引擎种类？"><a href="#2-彩蛋：-请你列举MySQL中支持的存储引擎种类？" class="headerlink" title="2-彩蛋： 请你列举MySQL中支持的存储引擎种类？"></a>2-彩蛋： 请你列举MySQL中支持的存储引擎种类？</h2><pre class="line-numbers language-cassandra"><code class="language-cassandra">InnoDB、MyISAM、CSV、MEMORY2.2 分支产品的引擎种类介绍TokuDB --》 percona、mariadb MyRocks、Rocksdb特点：    1. 压缩比15倍以上    2. 插入数据性能适应场景： 例如Zabbix监控类的平台。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-InnoDB存储引擎特性"><a href="#2-1-InnoDB存储引擎特性" class="headerlink" title="2-1-InnoDB存储引擎特性"></a>2-1-InnoDB存储引擎特性</h3><pre class="line-numbers language-powershell"><code class="language-powershell">MVCC       ： 多版本并发控制 聚簇索引   ： 用来组织存储数据和优化查询支持事务   ： 数据安全保证支持行级锁 ： 控制并发外键多缓冲区支持自适应Hash索引： AHI复制中支持高级特性。备份恢复： 支持热备。自动故障恢复：CR  Crash Recovery双写机制： Double <span class="token function">Write</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-彩蛋：-InnoDB-核心特性有哪些？-InnoDB和MyISAM区别有哪些？"><a href="#3-彩蛋：-InnoDB-核心特性有哪些？-InnoDB和MyISAM区别有哪些？" class="headerlink" title="3-彩蛋： InnoDB 核心特性有哪些？ InnoDB和MyISAM区别有哪些？"></a>3-彩蛋： InnoDB 核心特性有哪些？ InnoDB和MyISAM区别有哪些？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">回答：    InnoDB 支持： 事务、MVCC、聚簇索引、外键、缓冲区、AHI、CR、DW，MyISAM不支持。    InnoDB 支持： 行级锁，MyISAM支持表级锁。           InnoDB 支持热备（业务正常运行，影响低），MyISAM支持温备份（锁表备份）。    InnoDB 支持CR<span class="token punctuation">(</span>自动故障恢复<span class="token punctuation">)</span>，宕机自动故障恢复，保证数据安全和一致性可以得到保证。MyISAM不支持，宕机可能丢失当前修改。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-经典案例"><a href="#2-经典案例" class="headerlink" title="2-经典案例"></a>2-经典案例</h1><pre class="line-numbers language-CQL"><code class="language-CQL">39期学员负责: 运维 + MySQL 工作1.1 环境: zabbix 3.2  +  centos 7.3  +  mariaDB 5.5 InnoDB引擎  ,zabbix系统 监控了2000多个节点服务1.2 现象 : 每隔一段时间zabbix卡的要死 , 每隔3-4个月,都要重新搭建一遍zabbix,存储空间经常爆满.1.3 问题 :1.3.1. zabbix 版本过低。1.3.2. 数据库版本1.3.3 zabbix数据库500G,存在一个文件里ibdata1，手工删除1个月之前的数据，空间不释放。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="优化建议"><a href="#优化建议" class="headerlink" title="优化建议:"></a>优化建议:</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>1<span class="token punctuation">.</span>数据库版本升级到percona 5<span class="token punctuation">.</span>7<span class="token operator">+</span> 版本 mariadb 10<span class="token punctuation">.</span>x<span class="token operator">+</span><span class="token punctuation">,</span>zabbix升级更高版本1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>2<span class="token punctuation">.</span>存储引擎改为tokudb 1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>3<span class="token punctuation">.</span>监控数据按月份进行切割<span class="token punctuation">(</span>二次开发:zabbix 数据保留机制功能重写<span class="token punctuation">,</span>数据库分表<span class="token punctuation">)</span>1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>4<span class="token punctuation">.</span>关闭binlog和双11<span class="token punctuation">.</span>4<span class="token punctuation">.</span>5<span class="token punctuation">.</span>参数调整<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>优化结果:监控状态良好<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>为什么?</strong></p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token punctuation">(</span>1<span class="token punctuation">)</span> 原生态支持TokuDB<span class="token punctuation">,</span>另外经过测试环境<span class="token punctuation">,</span>5<span class="token punctuation">.</span>7要比5<span class="token punctuation">.</span>5 版本性能 高  2<span class="token operator">-</span>3倍<span class="token punctuation">(</span>2<span class="token punctuation">)</span> TokuDB:insert数据比Innodb快的多，数据压缩比要Innodb高<span class="token punctuation">(</span>3<span class="token punctuation">)</span>监控数据按月份进行切割<span class="token punctuation">,</span>为了能够truncate每个分区表<span class="token punctuation">,</span>立即释放空间<span class="token punctuation">(</span>4<span class="token punctuation">)</span>关闭binlog <span class="token operator">--</span>-<span class="token operator">--</span>>减少无关日志的记录<span class="token punctuation">.</span><span class="token punctuation">(</span>5<span class="token punctuation">)</span>参数调整<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">--</span>-<span class="token operator">--</span>>安全性参数关闭<span class="token punctuation">,</span>提高性能<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展：部署"><a href="#扩展：部署" class="headerlink" title="扩展：部署"></a>扩展：部署</h2><p><strong>部署 zabbix新版+ 新版本 tokudb   VS 部署  zabbix + 低版本mariadb</strong></p><pre class="line-numbers language-CQL"><code class="language-CQL">Tokudb特性： Additional features unique to TokuDB include:Up to 25x Data CompressionFast InsertsEliminates Slave Lag with Read Free ReplicationHot Schema ChangesHot Index Creation - TokuDB tables support insertions, deletions and queries with no down time while indexes are being added to that tableHot column addition, deletion, expansion, and rename - TokuDB tables support insertions, deletions and queries without down-time when an alter table adds, deletes, expands, or renames columnsOn-line Backup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参考内容："><a href="#参考内容：" class="headerlink" title="参考内容："></a>参考内容：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">https:<span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>jianshu<span class="token punctuation">.</span>com<span class="token operator">/</span>p<span class="token operator">/</span>898d2e4bd3a7https:<span class="token operator">/</span><span class="token operator">/</span>mariadb<span class="token punctuation">.</span>com<span class="token operator">/</span>kb<span class="token operator">/</span>en<span class="token operator">/</span>installing<span class="token operator">-</span>tokudb<span class="token operator">/</span>https:<span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>percona<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>percona<span class="token operator">-</span>server<span class="token operator">/</span>5<span class="token punctuation">.</span>7<span class="token operator">/</span>tokudb<span class="token operator">/</span>tokudb_installation<span class="token punctuation">.</span>html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="案例2："><a href="#案例2：" class="headerlink" title="案例2："></a>案例2：</h2><pre class="line-numbers language-mathematica"><code class="language-mathematica">环境: centos 5.8 ,MySQL 5.0版本,MyISAM存储引擎,网站业务(LNMP),数据量50G左右现象问题: 业务压力大的时候,非常卡;经历过宕机,会有部分数据丢失.问题分析:1.MyISAM存储引擎表级锁,在高并发时,会有很高锁等待2.MyISAM存储引擎不支持事务,在断电时,会有可能丢失数据职责1.监控锁的情况:有很多的表锁等待2.存储引擎查看:所有表默认是MyISAM解决方案:1. 升级MySQL 5.6.1x版本2. 升级迁移所有表到新环境3. 开启双1安全参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-存储引擎的基本操作"><a href="#3-存储引擎的基本操作" class="headerlink" title="3-存储引擎的基本操作"></a>3-存储引擎的基本操作</h1><h2 id="查看存储引擎"><a href="#查看存储引擎" class="headerlink" title="查看存储引擎"></a>查看存储引擎</h2><pre class="line-numbers language-powershell"><code class="language-powershell">查询支持的存储引擎mysql> show engines<span class="token punctuation">;</span>4<span class="token punctuation">.</span>1<span class="token punctuation">.</span>2 查询、设置默认存储引擎mysql> <span class="token function">select</span> @@default_storage_engine<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@default_storage_engine <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> InnoDB                   <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span>1 row in <span class="token function">set</span> <span class="token punctuation">(</span>0<span class="token punctuation">.</span>00 sec<span class="token punctuation">)</span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf  default_storage_engine=InnoDB重启生效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看、设定-表的存储引擎"><a href="#查看、设定-表的存储引擎" class="headerlink" title="查看、设定 表的存储引擎"></a>查看、设定 表的存储引擎</h2><p><strong>查看某张表的存储引擎</strong> </p><pre><code> mysql&gt; show create table xta;</code></pre><p> <strong>查询系统中所有业务表的存储引擎信息</strong></p><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span>  table_schema<span class="token punctuation">,</span> table_name <span class="token punctuation">,</span> engine  <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span>tables   where table_schema not in <span class="token punctuation">(</span><span class="token string">'sys'</span><span class="token punctuation">,</span><span class="token string">'mysql'</span><span class="token punctuation">,</span><span class="token string">'information_schema'</span><span class="token punctuation">,</span><span class="token string">'performance_schema'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建表设定存储引擎</strong></p><pre><code> mysql&gt; create table xxx (id int) engine=innodb charset=utf8mb4;</code></pre><p><strong>修改已有表的存储引擎</strong></p><pre><code> mysql&gt; alter table xxx engine=myisam;  mysql&gt; alter table world.xxx engine=innodb;</code></pre><p><strong>将所有的非InnoDB引擎的表查询出来，批量修改为InnoDB</strong> </p><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> table_schema<span class="token punctuation">,</span>table_name <span class="token punctuation">,</span>engine   <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span>tables    where   table_schema not in <span class="token punctuation">(</span><span class="token string">'sys'</span><span class="token punctuation">,</span><span class="token string">'mysql'</span><span class="token punctuation">,</span><span class="token string">'information_schema'</span><span class="token punctuation">,</span><span class="token string">'performance_schema'</span><span class="token punctuation">)</span>   and engine <span class="token operator">!</span>=<span class="token string">'innodb'</span><span class="token punctuation">;</span>  mysql> <span class="token function">select</span> concat<span class="token punctuation">(</span><span class="token string">"alter table "</span><span class="token punctuation">,</span>table_schema<span class="token punctuation">,</span><span class="token string">"."</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">" engine=innodb;"</span><span class="token punctuation">)</span>   <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span>tables     where    table_schema not in <span class="token punctuation">(</span><span class="token string">'sys'</span><span class="token punctuation">,</span><span class="token string">'mysql'</span><span class="token punctuation">,</span><span class="token string">'information_schema'</span><span class="token punctuation">,</span><span class="token string">'performance_schema'</span><span class="token punctuation">)</span>    and engine <span class="token operator">!</span>=<span class="token string">'innodb'</span> into outfile <span class="token string">'/tmp/a.sql'</span><span class="token punctuation">;</span>  mysql> source <span class="token operator">/</span>tmp<span class="token operator">/</span>a<span class="token punctuation">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-InnoDB-存储引擎的体系结构"><a href="#4-InnoDB-存储引擎的体系结构" class="headerlink" title="4-InnoDB  存储引擎的体系结构"></a>4-InnoDB  存储引擎的体系结构</h1><h2 id="磁盘结构"><a href="#磁盘结构" class="headerlink" title="磁盘结构"></a>磁盘结构</h2><h3 id="表空间结构"><a href="#表空间结构" class="headerlink" title="表空间结构"></a>表空间结构</h3><pre><code>介绍： 表空间的概念源于Oracle数据库。最初的目的是为了能够很好的做存储的扩容。</code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">1）共享（系统）表空间ibdata1，5<span class="token punctuation">.</span>5版本默认的表空间类型。（2）ibdata1共享表空间在各个版本的变化5<span class="token punctuation">.</span>5版本：    系统相关：（全局）数据字典信息、UNDO回滚信息、Double <span class="token function">Write</span>信息、临时表信息、change buffer    用户数据： 表数据行、表的索引数据5<span class="token punctuation">.</span>6版本：共享表空间只存储于系统数据，把用户数据独立了。    系统相关：（全局）数据字典信息、UNDO回滚信息、Double <span class="token function">Write</span>信息、临时表信息、change buffer5<span class="token punctuation">.</span>7版本：在5<span class="token punctuation">.</span>6基础上，把临时表独立出来，UNDO也可以设定为独立    系统相关：（全局）数据字典信息、UNDO回滚信息、Double <span class="token function">Write</span>信息、change buffer8<span class="token punctuation">.</span>0<span class="token punctuation">.</span>19版本：在5<span class="token punctuation">.</span>7的基础上将UNDO回滚信息默认独立        系统相关：Double <span class="token function">Write</span>信息、change buffer8<span class="token punctuation">.</span>0<span class="token punctuation">.</span>20版本:在之前版本基础上，独立 Double <span class="token function">Write</span>信息系统相关：change buffer总结：  对于InnoDB表来讲，例如 city表 city<span class="token punctuation">.</span>ibd city<span class="token punctuation">.</span>frm ibdata1 只是通过<span class="token function">cp</span>备份ibd和frm文件无法实现<span class="token punctuation">,</span>数据表的恢复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cassandra"><code class="language-cassandra">https://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="5-共享表空间管理"><a href="#5-共享表空间管理" class="headerlink" title="5-共享表空间管理"></a>5-共享表空间管理</h1><h2 id="1-扩容共享表空间"><a href="#1-扩容共享表空间" class="headerlink" title="1-扩容共享表空间"></a>1-扩容共享表空间</h2><pre class="line-numbers language-shell"><code class="language-shell">mysql> select @@innodb_data_file_path;+-------------------------+| @@innodb_data_file_path |+-------------------------+| ibdata1:12M:autoextend  |+-------------------------+1 row in set (0.00 sec)mysql> select @@innodb_autoextend_increment;+-------------------------------+| @@innodb_autoextend_increment |+-------------------------------+|                            64 |+-------------------------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>==参数用途：ibdata1文件，默认初始大小12M，不够用会自动扩展，默认每次扩展64M==</strong></p><h3 id="设置方式："><a href="#设置方式：" class="headerlink" title="设置方式："></a>设置方式：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">错误的方法： innodb_data_file_path=ibdata1:12M<span class="token punctuation">;</span>ibdata2:100M<span class="token punctuation">;</span>ibdata3:100M:autoextend重启数据库报错，查看日志文件vim <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>db01<span class="token punctuation">.</span>err<span class="token comment" spellcheck="true">###################</span><span class="token namespace">[ERROR]</span> InnoDB: The innodb_system <span class="token keyword">data</span> file <span class="token string">'./ibdata1'</span> is of a different size 4864 pages <span class="token punctuation">(</span>rounded down to MB<span class="token punctuation">)</span> than the 768 pages specified in the <span class="token punctuation">.</span>cnf file<span class="token operator">!</span><span class="token comment" spellcheck="true">###################</span>实际大小：4864<span class="token operator">*</span>16K<span class="token operator">/</span>1024=76M my<span class="token punctuation">.</span>cnf文件设置：768<span class="token operator">*</span>16K<span class="token operator">/</span>1024=12M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="正确的方法："><a href="#正确的方法：" class="headerlink" title="正确的方法："></a>正确的方法：</h3><pre class="line-numbers language-powershell"><code class="language-powershell">正确的方法： 先查看实际大小：<span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># ls -lh ibdata1 </span><span class="token operator">-</span>rw<span class="token operator">-</span>r-<span class="token operator">--</span>-<span class="token operator">-</span> 1 mysql mysql 76M May  6 17:11 ibdata1配置文件设定为和实际大小一致： innodb_data_file_path=ibdata1:76M<span class="token punctuation">;</span>ibdata2:100M<span class="token punctuation">;</span>ibdata3:100M:autoextend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>模拟在初始化时设置共享表空间（生产建议）</strong></p><pre class="line-numbers language-powershell"><code class="language-powershell">5<span class="token punctuation">.</span>7 中建议：设置共享表空间2<span class="token operator">-</span>3个，大小建议512M或者1G，最后一个定制为自动扩展。8<span class="token punctuation">.</span>0 中建议：设置1个就ok，大小建议512M或者1G<span class="token comment" spellcheck="true"># 清理数据</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld stop</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># rm -rf /data/3306/data/*</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># vim /etc/my.cnf</span><span class="token comment" spellcheck="true"># 修改 </span>innodb_data_file_path=ibdata1:100M<span class="token punctuation">;</span>ibdata2:100M<span class="token punctuation">;</span>ibdata3:100M:autoextend<span class="token comment" spellcheck="true"># 重新初始化</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql --datadir=/data/3306/data</span><span class="token comment" spellcheck="true"># 重启数据库生效</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld start</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-独立表空间"><a href="#2-独立表空间" class="headerlink" title="2-独立表空间"></a>2-独立表空间</h2><p>介绍 </p><hr><p><strong>5.6版本中，针对用户数据，单独的存储管理。存储表的数据行和索引。</strong></p><hr><p>通过参数控制： </p><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">innodb_file_per_table=0关闭独立的表空间查看是否开启：mysql> show variables like '%per_table%';mysql> select @@innodb_file_per_table;+-------------------------+| @@innodb_file_per_table |+-------------------------+|                       1 |+-------------------------+测试： 共享表空间存储用户数据mysql> set global innodb_file_per_table=0;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-项目独立表空间数据迁移"><a href="#3-项目独立表空间数据迁移" class="headerlink" title="3-项目独立表空间数据迁移"></a>3-项目独立表空间数据迁移</h3><pre class="line-numbers language-powershell"><code class="language-powershell">源端:3306<span class="token operator">/</span>test<span class="token operator">/</span>t100w  <span class="token operator">--</span>-<span class="token operator">--</span>> 目标端：3307<span class="token operator">/</span>test<span class="token operator">/</span>t100w1<span class="token punctuation">.</span> 锁定源端t100w表 mysql> lock tables test<span class="token punctuation">.</span>t100w read<span class="token punctuation">;</span>mysql> show create table test<span class="token punctuation">.</span>t100w<span class="token punctuation">;</span>CREATE TABLE `t100w` <span class="token punctuation">(</span>  `id` int<span class="token punctuation">(</span>11<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `num` int<span class="token punctuation">(</span>11<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `k1` char<span class="token punctuation">(</span>2<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `k2` char<span class="token punctuation">(</span>4<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `dt` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP<span class="token punctuation">)</span> ENGINE=InnoDB DEFAULT CHARSET=utf8mb4<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>2<span class="token punctuation">.</span> 目标端创建test库和t100w空表mysql> create database test charset=utf8mb4<span class="token punctuation">;</span>mysql> use test<span class="token punctuation">;</span>CREATE TABLE `t100w` <span class="token punctuation">(</span>  `id` int<span class="token punctuation">(</span>11<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `num` int<span class="token punctuation">(</span>11<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `k1` char<span class="token punctuation">(</span>2<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `k2` char<span class="token punctuation">(</span>4<span class="token punctuation">)</span> DEFAULT NULL<span class="token punctuation">,</span>  `dt` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP<span class="token punctuation">)</span> ENGINE=InnoDB DEFAULT CHARSET=utf8mb4<span class="token punctuation">;</span>3<span class="token punctuation">.</span>  单独删除空的表空间文件（保留t100w的frm<span class="token punctuation">,</span>ibdata1中关于t100w的系统数据）mysql> alter table test<span class="token punctuation">.</span>t100w discard tablespace<span class="token punctuation">;</span>4<span class="token punctuation">.</span> 拷贝源端ibd文件到目标端目录，并设置权限<span class="token namespace">[root@db01 test]</span><span class="token comment" spellcheck="true"># cp /data/3306/data/test/t100w.ibd /data/3307/data/test/</span><span class="token namespace">[root@db01 test]</span><span class="token comment" spellcheck="true"># chown -R mysql.mysql /data/*</span>5<span class="token punctuation">.</span> 导入表空间mysql> alter table test<span class="token punctuation">.</span>t100w import tablespace<span class="token punctuation">;</span>mysql> <span class="token function">select</span> count<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span> count<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">+</span><span class="token punctuation">|</span>  1000000 <span class="token punctuation">|</span>6<span class="token punctuation">.</span> 解锁源端数据表mysql> unlock tables<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-彩蛋-表空间迁移功能实现数据损坏恢复"><a href="#3-彩蛋-表空间迁移功能实现数据损坏恢复" class="headerlink" title="3-彩蛋-表空间迁移功能实现数据损坏恢复"></a>3-彩蛋-表空间迁移功能实现数据损坏恢复</h2><h3 id="案例1-利用表空间迁移功能实现数据损坏恢复。"><a href="#案例1-利用表空间迁移功能实现数据损坏恢复。" class="headerlink" title="案例1:  利用表空间迁移功能实现数据损坏恢复。"></a>案例1:  利用表空间迁移功能实现数据损坏恢复。</h3><pre class="line-numbers language-cassandra"><code class="language-cassandra">案例背景:硬件及软件环境:联想服务器（IBM） ，8核16G磁盘500G 没有raidcentos 6.8mysql 5.6.33  innodb引擎  独立表空间备份没有，日志也没开开发自用专用库:jira(bug追踪) 、 confluence(内部知识库)    ------>LNMT故障描述:断电了，启动完成后“/” 只读fsck 重启,系统成功启动,mysql启动不了。结果：confulence库在  ， jira库不见了。学员求助内容:求助：这种情况怎么恢复？我问：有备份没求助：连二进制日志都没有，没有备份，没有主从我说：没招了，jira需要硬盘恢复了。求助：1、jira问题拉倒中关村了2、能不能暂时把confulence库先打开用着将生产库confulence，拷贝到1:1虚拟机上/var/lib/mysql,直接访问时访问不了的问：有没有工具能直接读取ibd我说：我查查，最后发现没有我想出一个办法来：表空间迁移:create table xxxalter table  confulence.t1 discard tablespace;alter table confulence.t1 import tablespace;虚拟机测试可行。处理问题思路:confulence库中一共有107张表。困惑1： 1、创建107和和原来一模一样的表。他有2016年的历史库，我让他去他同时电脑上 mysqldump备份confulence库mysqldump -uroot -ppassw0rd -B  confulence --no-data >test.sql################万一是自研数据库,怎么办？又没备份，那怎么办？mysql工具包，mysqlfrm 读取frm文件获得表结构。################2、表空间删除。select concat('alter table ',table_schema,'.'table_name,' discard tablespace;') from information_schema.tables where table_schema='confluence' into outfile '/tmp/discad.sql';source /tmp/discard.sql执行过程中发现，有20-30个表无法成功。主外键关系很绝望，一个表一个表分析表结构，很痛苦。set foreign_key_checks=0 跳过外键检查。把有问题的表表空间也删掉了。3、拷贝生产中confulence库下的所有表的ibd文件拷贝到准备好的环境中select concat('alter table ',table_schema,'.'table_name,' import tablespace;') from information_schema.tables where table_schema='confluence' into outfile '/tmp/import.sql';4、验证数据表都可以访问了，数据挽回到了出现问题时刻的状态（2-8）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="案例2-：-误删除了ibdata1文件，导致数据无法启动"><a href="#案例2-：-误删除了ibdata1文件，导致数据无法启动" class="headerlink" title="案例2  ：  误删除了ibdata1文件，导致数据无法启动"></a>案例2  ：  误删除了ibdata1文件，导致数据无法启动</h3><pre><code></code></pre><h2 id="4-undo表空间"><a href="#4-undo表空间" class="headerlink" title="4-undo表空间"></a>4-undo表空间</h2><h3 id="作用：-用来作撤销工作。"><a href="#作用：-用来作撤销工作。" class="headerlink" title="作用： 用来作撤销工作。"></a>作用： 用来作撤销工作。</h3><pre class="line-numbers language-csharp"><code class="language-csharp">存储位置： <span class="token number">5.7</span>版本，默认存储在共享表空间中（ibdataN）。<span class="token number">8.0</span>版本以后默认就是独立的（undo_001<span class="token operator">-</span>undo_002）。<span class="token number">3</span><span class="token punctuation">.</span> 生产建议： <span class="token number">5.7</span>版本后，将undo手工进行独立。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="undo-表空间管理"><a href="#undo-表空间管理" class="headerlink" title="undo 表空间管理"></a>undo 表空间管理</h3><pre class="line-numbers language-javascript"><code class="language-javascript"> 如何查看undo的配置参数SELECT @@innodb_undo_tablespaces<span class="token punctuation">;</span>  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span><span class="token number">3</span><span class="token operator">-</span><span class="token number">5</span>个    #打开独立undo模式，并设置undo的个数。SELECT @@innodb_max_undo_log_size<span class="token punctuation">;</span>               #undo日志的大小，默认1G。SELECT @@innodb_undo_log_truncate<span class="token punctuation">;</span>               #开启undo自动回收的机制（undo_purge）。SELECT @@innodb_purge_rseg_truncate_frequency<span class="token punctuation">;</span>   #触发自动回收的条件，单位是检测次数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置undo表空间"><a href="#配置undo表空间" class="headerlink" title="配置undo表空间"></a>配置undo表空间</h3><pre class="line-numbers language-javascript"><code class="language-javascript">配置undo表空间#########官方文档说明############ImportantThe number <span class="token keyword">of</span> undo tablespaces can only be configured when initializing a MySQL instance and is fixed <span class="token keyword">for</span> the life <span class="token keyword">of</span> the instance<span class="token punctuation">.</span>初始化之前设置<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>#################################<span class="token punctuation">[</span>root@db01 tmp<span class="token punctuation">]</span># <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld stop<span class="token punctuation">[</span>root@db01 tmp<span class="token punctuation">]</span># rm <span class="token operator">-</span>rf <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token operator">*</span># 必须初始化vim <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf# 添加参数innodb_undo_tablespaces<span class="token operator">=</span><span class="token number">3</span>           innodb_max_undo_log_size<span class="token operator">=</span>128Minnodb_undo_log_truncate<span class="token operator">=</span>ONinnodb_purge_rseg_truncate_frequency<span class="token operator">=</span><span class="token number">32</span># 重新初始化数据库生效<span class="token operator">=</span><span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># mysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data# 启动数据库 <span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld start<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># ll <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span>undo00<span class="token operator">*</span><span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span> mysql mysql <span class="token number">10485760</span> May  <span class="token number">7</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">39</span> <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span>undo001<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span> mysql mysql <span class="token number">10485760</span> May  <span class="token number">7</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">39</span> <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span>undo002<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> <span class="token number">1</span> mysql mysql <span class="token number">10485760</span> May  <span class="token number">7</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">39</span> <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span>undo003<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>注： 8.0 undo表空间与5.7稍有区别，可参考：https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html</code></pre><h2 id="5-临时表空间"><a href="#5-临时表空间" class="headerlink" title="5-临时表空间"></a>5-临时表空间</h2><h3 id="作用：-存储临时表。"><a href="#作用：-存储临时表。" class="headerlink" title="作用： 存储临时表。"></a>作用： 存储临时表。</h3><pre class="line-numbers language-javascript"><code class="language-javascript">管理：innodb_temp_data_file_path<span class="token operator">=</span>ibtmp1<span class="token punctuation">:</span>12M<span class="token punctuation">;</span>ibtmp2<span class="token punctuation">:</span>128M<span class="token punctuation">:</span>autoextend<span class="token punctuation">:</span>max<span class="token punctuation">:</span>500M重启生效。<span class="token number">3</span><span class="token punctuation">.</span> 建议数据初始化之前设定好，一般<span class="token number">2</span><span class="token operator">-</span><span class="token number">3</span>个，大小512M<span class="token operator">-</span>1G。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-InnoDB-事务日志"><a href="#6-InnoDB-事务日志" class="headerlink" title="6- InnoDB 事务日志"></a>6- InnoDB 事务日志</h1><h2 id="1-redo-log-重做日志"><a href="#1-redo-log-重做日志" class="headerlink" title="1-redo log 重做日志"></a>1-redo log 重做日志</h2><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">作用: 记录数据页的变化。实现“前进”的功能。WAL（write ahead log），MySQL保证redo优先于数据写入磁盘。2. 存储位置： 数据路径下，进行轮序覆盖记录日志ib_logfile0  48Mib_logfile1  48M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>管理：</p><pre class="line-numbers language-javascript"><code class="language-javascript">查询redo log文件配置mysql<span class="token operator">></span> show variables like <span class="token string">'%innodb_log_file%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span class="token operator">|</span> Variable_name             <span class="token operator">|</span> Value    <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span class="token operator">|</span> innodb_log_file_size      <span class="token operator">|</span> <span class="token number">50331648</span> <span class="token operator">|</span><span class="token operator">|</span> innodb_log_files_in_group <span class="token operator">|</span> <span class="token number">2</span>        <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><pre class="line-numbers language-powershell"><code class="language-powershell">生产建议：     大小： 512M<span class="token operator">-</span>4G    组数： 2<span class="token operator">-</span>4组vim  <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token comment" spellcheck="true"># 添加参数：</span>innodb_log_file_size=100Minnodb_log_files_in_group=3<span class="token comment" spellcheck="true">#重启生效 </span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># ll /data/3306/data/ib_logfile*</span><span class="token operator">-</span>rw<span class="token operator">-</span>r-<span class="token operator">--</span>-<span class="token operator">-</span> 1 mysql mysql 104857600 May  7 16:17 <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>ib_logfile0<span class="token operator">-</span>rw<span class="token operator">-</span>r-<span class="token operator">--</span>-<span class="token operator">-</span> 1 mysql mysql 104857600 May  7 16:17 <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>ib_logfile1<span class="token operator">-</span>rw<span class="token operator">-</span>r-<span class="token operator">--</span>-<span class="token operator">-</span> 1 mysql mysql 104857600 May  7 16:17 <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3306<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>ib_logfile2<span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-undo-log-回滚日志"><a href="#2-undo-log-回滚日志" class="headerlink" title="2-undo log 回滚日志"></a>2-undo log 回滚日志</h2><h3 id="其他结构"><a href="#其他结构" class="headerlink" title="其他结构"></a>其他结构</h3><h2 id="3-ib-buffer-pool"><a href="#3-ib-buffer-pool" class="headerlink" title="3-ib_buffer_pool"></a>3-ib_buffer_pool</h2><pre class="line-numbers language-powershell"><code class="language-powershell">作用：缓冲和缓存，用来做“热”（经常查询或修改）数据页，减少物理IO。当关闭数据库的时候，缓冲和缓存会失效。5<span class="token punctuation">.</span>7版本中，MySQL正常关闭时，会将内存的热数据存放（流方式）至ib_buffer_pool。下次重启直接读取ib_buffer_pool加载到内存中。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Double Write Buffer（DWB）（5.7 默认在ibdataN中，8.0.20以后可以独立了。）作用：MySQL，最小IO单元page（16KB），OS中最小的IO单元是block（4KB）为了防止出现以下问题： mysqld process crash in the middle of a page write</code></pre><h2 id="4-内存结构"><a href="#4-内存结构" class="headerlink" title="4-内存结构"></a>4-内存结构</h2><h3 id="InnoDB-BUFFER-POOL（IBP）"><a href="#InnoDB-BUFFER-POOL（IBP）" class="headerlink" title="InnoDB BUFFER POOL（IBP）"></a>InnoDB BUFFER POOL（IBP）</h3><pre class="line-numbers language-powershell"><code class="language-powershell">作用：     用来缓冲、缓存，MySQL的数据页和索引页。MySQL中最大的、最重要的内存区域。管理：    查询：    mysql> <span class="token function">select</span> @@innodb_buffer_pool_size<span class="token punctuation">;</span>    默认大小： 128M    生产建议： 物理内存的：50<span class="token operator">-</span>80<span class="token operator">%</span>。    在线设置：     mysql> <span class="token function">set</span> global innodb_buffer_pool_size=268435456<span class="token punctuation">;</span>    重新登录mysql生效。    永久设置：    vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf     <span class="token comment" spellcheck="true">#添加参数</span>    innodb_buffer_pool_size=256M    重启生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="InnoDB-LOG-BUFFER-ILB"><a href="#InnoDB-LOG-BUFFER-ILB" class="headerlink" title="InnoDB LOG BUFFER (ILB)"></a>InnoDB LOG BUFFER (ILB)</h2><h3 id="用来缓冲-redo-log日志信息。"><a href="#用来缓冲-redo-log日志信息。" class="headerlink" title="用来缓冲 redo log日志信息。"></a>用来缓冲 redo log日志信息。</h3><pre class="line-numbers language-powershell"><code class="language-powershell">管理 ：      查询：       mysql> <span class="token function">select</span> @@innodb_log_buffer_size<span class="token punctuation">;</span>      默认大小：16M      生产建议：和innodb_log_file_size有关，1<span class="token operator">-</span>N倍      设置方式 ：       vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf       innodb_log_buffer_size=33554432      重启生效：       <span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># /etc/init.d/mysqld restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-InnoDB核心特性–事务支持"><a href="#7-InnoDB核心特性–事务支持" class="headerlink" title="7-InnoDB核心特性–事务支持"></a>7-InnoDB核心特性–事务支持</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><pre class="line-numbers language-powershell"><code class="language-powershell">事务：Transaction （交易）。 伴随着交易类的业务出现的概念（工作模式）交易？     物换物，等价交换。    货币换物，等价交换。    虚拟货币换物（虚拟物品），等价交换。现实生活中怎么保证交易“和谐” ，法律、道德等规则约束。数据库中为了保证线上交易的“和谐”，加入了“事务”工作机制。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-事务ACID特性"><a href="#1-事务ACID特性" class="headerlink" title="1-事务ACID特性"></a>1-事务ACID特性</h2><pre class="line-numbers language-javascript"><code class="language-javascript"> 原子性不可再分性：一个事务生命周期中的DML语句，要么全成功要么全失败，不可以出现中间状态。begin<span class="token punctuation">;</span>DML1<span class="token punctuation">;</span>DML2<span class="token punctuation">;</span>DML3<span class="token punctuation">;</span>commit<span class="token punctuation">;</span>C：一致性 事务发生前，中，后，数据都最终保持一致。CR  <span class="token operator">+</span> double writeI：隔离性 事务操作数据行的时候，不会受到其他时候的影响。D<span class="token punctuation">:</span> 持久性一但事务提交，永久生效（落盘）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2事务的生命周期管理"><a href="#2事务的生命周期管理" class="headerlink" title="2事务的生命周期管理"></a>2事务的生命周期管理</h2><pre class="line-numbers language-powershell"><code class="language-powershell">标准<span class="token punctuation">(</span>显示<span class="token punctuation">)</span>的事务控制语句<span class="token comment" spellcheck="true"># 开启事务</span><span class="token keyword">begin</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 提交事务</span>commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 回滚事务</span>rollback<span class="token punctuation">;</span>注意：事务生命周期中，只能使用DML语句（<span class="token function">select</span>、update、delete、insert）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3事务的生命周期演示："><a href="#3事务的生命周期演示：" class="headerlink" title="3事务的生命周期演示："></a>3事务的生命周期演示：</h2><p><img src="QQ%E5%9B%BE%E7%89%8720200508140111.png" alt="QQ图片20200508140111"></p><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> use worldmysql> <span class="token keyword">begin</span><span class="token punctuation">;</span>mysql> delete <span class="token keyword">from</span> city where id=1<span class="token punctuation">;</span>mysql> update city <span class="token function">set</span> countrycode=<span class="token string">'CHN'</span> where id=2<span class="token punctuation">;</span>mysql> commit<span class="token punctuation">;</span>mysql> <span class="token keyword">begin</span><span class="token punctuation">;</span>mysql> <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city limit 10<span class="token punctuation">;</span>mysql> update city <span class="token function">set</span> countrycode=<span class="token string">'AFG'</span> where id=2<span class="token punctuation">;</span>mysql> delete <span class="token keyword">from</span> city where id=3<span class="token punctuation">;</span>mysql> rollback<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-MySQL的自动提交机制（auto-commit）"><a href="#4-MySQL的自动提交机制（auto-commit）" class="headerlink" title="4 MySQL的自动提交机制（auto_commit）"></a>4 MySQL的自动提交机制（auto_commit）</h2><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@autocommit<span class="token punctuation">;</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span> @@autocommit <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">|</span>            1 <span class="token punctuation">|</span><span class="token operator">+</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token operator">+</span>作用： 在没有显示的使用<span class="token keyword">begin</span>语句的时候，执行DML，会在DML前自动添加<span class="token keyword">begin</span>，并在DML执行后自动添加commit。建议： 频繁事务业务场景中，关闭autocommit。或者每次事务执行时都是显示的<span class="token keyword">begin</span>和commit<span class="token punctuation">;</span>关闭方法： <span class="token comment" spellcheck="true"># 临时： </span>mysql> <span class="token function">set</span> global autocommit=0<span class="token punctuation">;</span>退出会话，重新连接配置生效。<span class="token comment" spellcheck="true"># 永久： </span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># vim /etc/my.cnf</span>autocommit=0重启生效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-隐式提交和回滚"><a href="#3-1-隐式提交和回滚" class="headerlink" title="3.1-隐式提交和回滚"></a>3.1-隐式提交和回滚</h3><pre class="line-numbers language-powershell"><code class="language-powershell">隐式提交情况 <span class="token keyword">begin</span> ab<span class="token keyword">begin</span><span class="token function">SET</span> AUTOCOMMIT = 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3导致提交的非事务语句"><a href="#3导致提交的非事务语句" class="headerlink" title="3导致提交的非事务语句"></a>3导致提交的非事务语句</h3><pre class="line-numbers language-powershell"><code class="language-powershell">DDL语句： （ALTER、CREATE 和 DROP）DCL语句： （GRANT、REVOKE 和 <span class="token function">SET</span> PASSWORD）锁定语句：（LOCK TABLES 和 UNLOCK TABLES）导致隐式提交的语句示例：TRUNCATE TABLELOAD <span class="token keyword">DATA</span> INFILE<span class="token function">SELECT</span> <span class="token keyword">FOR</span> UPDATE<span class="token comment" spellcheck="true"># 隐式回滚 </span>会话窗口被关闭。数据库关闭 。出现事务冲突（死锁）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5事务的隔离级别"><a href="#5事务的隔离级别" class="headerlink" title="5事务的隔离级别"></a>5事务的隔离级别</h2><p><strong>作用</strong><br><strong>实现事务工作期间的“读”的隔离</strong><br><strong>读？ —-》 数据页的读</strong></p><hr><h3 id="5级别类型"><a href="#5级别类型" class="headerlink" title="5级别类型"></a>5级别类型</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@transaction_isolation<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># RU ： READ-UNCOMMITTED 读未提交</span>可以读取到事务未提交的数据。隔离性差，会出现脏读（当前内存读），不可重复读，幻读问题<span class="token comment" spellcheck="true"># RC ： READ-COMMITTED   读已提交（可以用）：</span>可以读取到事务已提交的数据。隔离性一般，不会出现脏读问题，但是会出现不可重复读，幻读问题<span class="token comment" spellcheck="true"># RR ： REPEATABLE-READ  可重复读（默认）  ：</span>防止脏读（当前内存读），不可重复读，幻读问题<span class="token comment" spellcheck="true"># SR ： SERIALIZABLE     可串行化</span>结论： 隔离性越高，事务的并发读就越差。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6事务的工作流程原理"><a href="#6事务的工作流程原理" class="headerlink" title="6事务的工作流程原理"></a>6事务的工作流程原理</h2><p>（ACID特性如何保证）</p><pre class="line-numbers language-powershell"><code class="language-powershell">名词介绍<span class="token comment" spellcheck="true">#  重做日志 （redo log）</span>ib_logfile0~N   48M   <span class="token punctuation">,</span> 轮询使用<span class="token comment" spellcheck="true"># 日志缓冲区</span>redo log buffer ： redo内存区域<span class="token comment" spellcheck="true"># 表空间数据文件</span>ibd  ： 存储数据行和索引 <span class="token comment" spellcheck="true"># 数据缓冲区</span>InnoDB buffer pool ： 缓冲区池<span class="token punctuation">,</span>数据和索引的缓冲<span class="token comment" spellcheck="true"># 日志序列号 </span>LSN磁盘数据页<span class="token punctuation">(</span>ibd文件的page<span class="token punctuation">)</span><span class="token punctuation">,</span>redo log文件（ib_logfile）<span class="token punctuation">,</span>Innodb_buffer_pool中的数据页<span class="token punctuation">,</span>redo bufferMySQL 每次数据库启动<span class="token punctuation">,</span>都会比较磁盘数据页和redolog的LSN<span class="token punctuation">,</span>必须要求两者LSN一致数据库才能正常启动<span class="token comment" spellcheck="true">#WAL : Write Ahead Log</span>Redo日志优先于数据页写到磁盘。<span class="token comment" spellcheck="true"># 脏页: Dirty Page</span>内存脏页<span class="token punctuation">,</span>内存中发生了修改<span class="token punctuation">,</span>没写入到磁盘之前<span class="token punctuation">,</span>我们把内存页称之为脏页<span class="token punctuation">.</span><span class="token comment" spellcheck="true"># CheckPoint</span>CKPT:检查点<span class="token punctuation">,</span>就是将脏页刷写到磁盘的动作<span class="token comment" spellcheck="true"># DB_TRX_ID（6字节）  事务ID号</span>InnoDB会为每一个事务生成一个事务号<span class="token punctuation">,</span>伴随着整个事务生命周期<span class="token punctuation">.</span><span class="token comment" spellcheck="true"># DB_ROLL_PTR（7字节） 回滚指针</span>rollback 时，会使用 undo 日志回滚已修改的数据。DB_ROLL_PTR指向了此次事务的回滚位置点，用来找到undo日志信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-事务工作流程原理"><a href="#1-事务工作流程原理" class="headerlink" title="1-事务工作流程原理"></a>1-事务工作流程原理</h3><pre class="line-numbers language-powershell"><code class="language-powershell">事务举例： <span class="token keyword">begin</span><span class="token punctuation">;</span> update t1 <span class="token function">set</span> A=2 where A=1<span class="token punctuation">;</span>commit<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># redo log 重做日志如何应用</span>1<span class="token punctuation">.</span> 用户发起update事务语句，将磁盘数据页（page100<span class="token punctuation">,</span>A=1<span class="token punctuation">,</span>LSN=1000）加载到内存<span class="token punctuation">(</span>buffer_pool<span class="token punctuation">)</span>缓冲区。2<span class="token punctuation">.</span> 在内存中发生数据页修改（A=1改成A=2），形成脏页，更改中数据页的变化，记录到redo buffer中，加入1000个字节日志。LSN=1000<span class="token operator">+</span>1000=2000。3<span class="token punctuation">.</span> 当commit语句执行时，基于WAL机制，等到redo buffer中的日志完全落盘到ib_logfileN中，commit正式完成。4<span class="token punctuation">.</span> ib_logfileN中记录了一条日志。内容：page100数据页变化<span class="token operator">+</span>LSN=2000。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>情景： 当此时，redo落地了，数据页没有落地，宕机了。</strong></p><hr><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> MySQL CR（自动故障恢复）工作模式，启动数据库时，自动检查redo的LSN和数据页LSN。2<span class="token punctuation">.</span> 如果发现redoLSN>数据页的LSN ，加载原始数据页<span class="token operator">+</span>变化redo指定内存。使用redo重构脏页（前滚）。3<span class="token punctuation">.</span> 如果确认此次事务已经提交（commit标签），立即触发CKPT动作，将脏页刷写到磁盘上。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-powershell"><code class="language-powershell">MySQL有一种机制，批量刷写redo的机制。会在A事务commit时，顺便将redo buffer中的未提交的redo日志也一并刷到磁盘。    为了区分不同状态的redo，日志记录时，会标记是否COMMIT。      一起提交并发<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2redo保证了ACID哪些特性"><a href="#2redo保证了ACID哪些特性" class="headerlink" title="2redo保证了ACID哪些特性?"></a>2redo保证了ACID哪些特性?</h3><hr><pre class="line-numbers language-powershell"><code class="language-powershell">主要是D的特性，另外A、C也有间接关联。<span class="token comment" spellcheck="true"># undo log 回滚日志如何应用？</span>1<span class="token punctuation">.</span> 事务发生数据页修改之前，会申请一个undo事务操作，保存事务回滚日志（逆向操作的逻辑日志）。2<span class="token punctuation">.</span> undo写完之后，事务修改数据页头部（会记录DB_TRX_ID<span class="token operator">+</span>DB_ROLL_PTR），这个信息也会被记录的redo。情景1： 当执行rollback命令时。根据数据页的DB_TRX_ID<span class="token operator">+</span>DB_ROLL_PTR信息，找到undo日志，进行回滚。情景2：    <span class="token keyword">begin</span><span class="token punctuation">;</span>     update t1 <span class="token function">set</span> A=2 where A=1<span class="token punctuation">;</span>    宕机。假设： undo 有  ， redo   没有启动数据库时，检查redo和数据页的LSN号码。发现是一致的。所以不需要进行redo的前滚，此时也不需要回滚。undo信息直接被标记为可覆盖状态。假设：undo 有，redo也有（没有commit标签。）1<span class="token punctuation">.</span> MySQL CR（自动故障恢复）工作模式，启动数据库时，自动检查redo的LSN和数据页LSN。2<span class="token punctuation">.</span> 如果发现redoLSN>数据页的LSN ，加载原始数据页<span class="token operator">+</span>变化redo指定内存。使用redo重构脏页（前滚）。3<span class="token punctuation">.</span> 如果确认此次事务没有commit标记，立即触发回滚操作，根据DB_TRX_ID<span class="token operator">+</span>DB_ROLL_PTR信息，找到und回滚日志，实现回滚。以上流程被称之为InnoDB的核心特性：自动故障恢复（Crash Recovery）。先前滚再回滚，先应用redo再应用undo。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3undo在ACID中保证了啥"><a href="#3undo在ACID中保证了啥" class="headerlink" title="3undo在ACID中保证了啥"></a>3undo在ACID中保证了啥</h3><pre><code>主要保证事务的A的特性，同时C和I的特性也有关系。</code></pre><h3 id="4-事务中的C特性怎么保证？"><a href="#4-事务中的C特性怎么保证？" class="headerlink" title="4-事务中的C特性怎么保证？"></a>4-事务中的C特性怎么保证？</h3><pre class="line-numbers language-CQL"><code class="language-CQL">InnoDB crash recovery：数据库意外宕机时刻，通过redo前滚+undo回滚保证数据的最终一致。InnoDB doublewrite buffer： 默认存储在ibdataN中。解决数据页写入不完整mysqld process crash in the middle of a page write, InnoDB can find a good copy of the page from the doublewrite buffer during crash recovery.DWB一共2M。分两次，每次1M写入<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="QQ%E5%9B%BE%E7%89%8720200508200727-1588943218383.png" alt="QQ图片20200508200727"></p><hr><h3 id="5-事务中的I的特性怎么保证？"><a href="#5-事务中的I的特性怎么保证？" class="headerlink" title="5-事务中的I的特性怎么保证？"></a>5-事务中的I的特性怎么保证？</h3><pre class="line-numbers language-powershell"><code class="language-powershell">隔离级别：读隔离性    RU : 脏读 、 不可重复读 、幻读    RC : 不可重复读、幻读    RR ：有可能会出现幻读。    SR ：事务串行工作。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-1-锁机制：写的隔离"><a href="#5-1-锁机制：写的隔离" class="headerlink" title="5.1-锁机制：写的隔离"></a>5.1-锁机制：写的隔离</h4><p>作用：保护并发访问资源。</p><pre class="line-numbers language-powershell"><code class="language-powershell">保护的资源分类：     latch（闩锁）：rwlock、mutex，主要保护内存资源    MDL： Metadata_lock<span class="token punctuation">,</span>元数据<span class="token punctuation">(</span>DDL操作<span class="token punctuation">)</span>    table_lock: 表级别                 lock table t1 read <span class="token punctuation">;</span>                mysqldump、XBK（PBK）：备份非InnoDB数据时，触发FTWRL全<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2局锁表（Global）"><a href="#5-2局锁表（Global）" class="headerlink" title="5.2局锁表（Global）"></a>5.2局锁表（Global）</h4><p>行锁升级为表锁。</p><pre class="line-numbers language-powershell"><code class="language-powershell">row lock：InnoDB 默认锁粒度，加锁方式都是在索引加锁的。record lock ： 记录锁，在聚簇索引锁定。RC级别只有record lock。gap lock    ： 间隙锁，在辅助索引间隙加锁。RR级别存在。防止幻读。next lock   ： 下一键锁， GAP<span class="token operator">+</span>Record。     RR级别存在。防止幻读。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-什么是幻读，-RR又是如何-防止幻读？"><a href="#6-什么是幻读，-RR又是如何-防止幻读？" class="headerlink" title="6-什么是幻读，==RR又是如何==防止幻读？"></a>6-什么是幻读，==RR又是如何==防止幻读？</h3><hr><p><strong>RC级别下不可重读现象演示：</strong>  </p><pre><code>vim /etc/my.cnf #添加隔离级别参数：transaction_isolation=READ-COMMITTED#重启数据库 [root@db01 ~]# /etc/init.d/mysqld restart</code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">打开两个会话窗口： sessionA: 第一步：mysql> select @@transaction_isolation;+-------------------------+| @@transaction_isolation |+-------------------------+| READ-COMMITTED          |+-------------------------+1 row in set (0.00 sec)第三步： mysql> create database test charset utf8mb4;mysql> use test;mysql> create table t1 (id int primary key auto_increment,num int not null , name varchar(20) not null);mysql> insert into t1(num,name) values(1,'a'),(3,'c'),(6,'d'),(7,'x');mysql> insert into t1(num,name) values(11,'a'),(23,'c'),(36,'d'),(37,'x');mysql> insert into t1(num,name) values(51,'as'),(63,'hc'),(76,'ds'),(87,'x','xyz');mysql> commit;mysql> select * from t1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | a    ||  2 |   3 | c    ||  3 |   6 | d    ||  4 |   7 | x    ||  5 |  11 | a    ||  6 |  23 | c    ||  7 |  36 | d    ||  8 |  37 | x    ||  9 |  51 | as   || 10 |  63 | hc   || 11 |  76 | ds   || 12 |  87 | xyz  |+----+-----+------+第五步： mysql> begin;第七步： mysql> update t1 set name='aa' where id=1;Query OK, 1 row affected (0.00 sec)Rows matched: 1  Changed: 1  Warnings: 0mysql> commit;Query OK, 0 rows affected (0.00 sec)=================================================sessinB: 第二步:mysql> select @@transaction_isolation;+-------------------------+| @@transaction_isolation |+-------------------------+| READ-COMMITTED          |+-------------------------+1 row in set (0.00 sec)第四步： mysql> use test;mysql> select * from test.t1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | a    ||  2 |   3 | c    ||  3 |   6 | d    ||  4 |   7 | x    ||  5 |  11 | a    ||  6 |  23 | c    ||  7 |  36 | d    ||  8 |  37 | x    ||  9 |  51 | as   || 10 |  63 | hc   || 11 |  76 | ds   || 12 |  87 | xyz  |+----+-----+------+12 rows in set (0.00 sec)第六步： mysql> begin;mysql> select * from t1 where id=1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | a    |+----+-----+------+1 row in set (0.00 sec)第八步： mysql> select * from t1 where id=1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | aa   |+----+-----+------+1 row in set (0.00 sec)==================================RC级别下幻读现象演示：  准备工作： mysql> alter table t1 add index(num);[root@db01 ~]# mysqldump  test t1 >/tmp/t1.sqlsession A : 第一步： mysql> begin;Query OK, 0 rows affected (0.00 sec)mysql> select * from t1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | aa   ||  2 |   3 | c    ||  3 |   6 | d    ||  4 |   7 | x    ||  5 |  11 | a    ||  6 |  23 | c    ||  7 |  36 | d    ||  8 |  37 | x    ||  9 |  51 | as   || 10 |  63 | hc   || 11 |  76 | ds   || 12 |  87 | xyz  |+----+-----+------+12 rows in set (0.00 sec)第三步： mysql> update t1 set num=10 where num<10;Query OK, 4 rows affected (0.00 sec)Rows matched: 4  Changed: 4  Warnings: 0第五步： mysql> commit;Query OK, 0 rows affected (0.00 sec)mysql> select * from t1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |  10 | aa   ||  2 |  10 | c    ||  3 |  10 | d    ||  4 |  10 | x    ||  5 |  11 | a    ||  6 |  23 | c    ||  7 |  36 | d    ||  8 |  37 | x    ||  9 |  51 | as   || 10 |  63 | hc   || 11 |  76 | ds   || 12 |  87 | xyz  || 13 |   5 | aaa  |+----+-----+------+Session B: 第二步： mysql> begin;Query OK, 0 rows affected (0.00 sec)mysql> select * from t1;+----+-----+------+| id | num | name |+----+-----+------+|  1 |   1 | aa   ||  2 |   3 | c    ||  3 |   6 | d    ||  4 |   7 | x    ||  5 |  11 | a    ||  6 |  23 | c    ||  7 |  36 | d    ||  8 |  37 | x    ||  9 |  51 | as   || 10 |  63 | hc   || 11 |  76 | ds   || 12 |  87 | xyz  |+----+-----+------+12 rows in set (0.00 sec)第四步： mysql> insert into t1(num,name) values(5,'aaa');Query OK, 1 row affected (0.00 sec)mysql> commit;Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-锁功能性上："><a href="#7-锁功能性上：" class="headerlink" title="7-锁功能性上："></a>7-锁功能性上：</h1><pre class="line-numbers language-powershell"><code class="language-powershell">IS   ：                          <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 lock in shared mode<span class="token punctuation">;</span>    S    ： 读锁。                 IX   :  意向排他锁。表上添加的。 <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">for</span> update<span class="token punctuation">;</span>    X    :  排他锁，写锁。  行硕<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="MVCC-：-多版本并发控制"><a href="#MVCC-：-多版本并发控制" class="headerlink" title="MVCC ： 多版本并发控制"></a>MVCC ： 多版本并发控制</h2><blockquote><p><strong>乐观锁： 乐观。</strong><br><strong>悲观锁： 悲观。</strong></p></blockquote><p>==每个事务操作都要经历两个阶段：== </p><pre class="line-numbers language-powershell"><code class="language-powershell">读:  乐观锁。MVCC利用乐观锁机制，实现非锁定读取。read view：<span class="token function">RV</span><span class="token punctuation">,</span>版本号集合。trx1 : <span class="token keyword">begin</span><span class="token punctuation">;</span> dml1  <span class="token operator">--</span><span class="token operator">-</span>> 在做第一个查询的时候，当前事务，获取系统最新的：RV1 版本快照。dml2  <span class="token operator">--</span><span class="token operator">-</span>> 生成 RV2 版本快照。<span class="token function">select</span>  查询  RV2 快照数据commit<span class="token punctuation">;</span> <span class="token operator">--</span>-<span class="token operator">-</span>>  RV2 快照数据  <span class="token operator">--</span>-<span class="token operator">-</span>》系统最新快照。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>RC</p><hr><pre><code>RCtrx1: Rv1  Rv2  commit;trx2 RVV1 RVV1 RV2</code></pre><p>RR </p><hr><pre class="line-numbers language-powershell"><code class="language-powershell">trx1 : 第一个查询时， 生成global consitence snapshot  <span class="token function">RV</span><span class="token operator">-</span>CS1<span class="token punctuation">(</span>10:00<span class="token punctuation">)</span> <span class="token punctuation">,</span>一直伴随着事务生命周期结束。trx2 :  第一个查询时，生成global consitence snapshot  <span class="token function">RV</span><span class="token operator">-</span>CS2（10:01<span class="token punctuation">)</span> <span class="token punctuation">,</span>一直伴随着事务生命周期结束。快照技术由undo log来提供。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="写-悲观锁-X"><a href="#写-悲观锁-X" class="headerlink" title="写: 悲观锁 X"></a>写: 悲观锁 X</h2><pre class="line-numbers language-powershell"><code class="language-powershell">总结： 1<span class="token punctuation">.</span> MVCC采用乐观锁机制，实现非锁定读取。2<span class="token punctuation">.</span> 在RC级别下，事务中可以立即读取到其他事务commit过的readview3<span class="token punctuation">.</span> 在RR级别下，事务中从第一次查询开始，生成一个一致性readview，直到事务结束。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="QQ%E5%9B%BE%E7%89%8720200510175245.png" alt="QQ图片20200510175245"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-索引优化</title>
      <link href="/2020/05/03/06-suo-yin-you-hua/"/>
      <url>/2020/05/03/06-suo-yin-you-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="1-索引原理及应用"><a href="#1-索引原理及应用" class="headerlink" title="1- 索引原理及应用"></a>1- 索引原理及应用</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><blockquote><p>索引相当于一本书的目录，可以优化查询。</p><ol start="2"><li>索引查找算法<br>1 —》 100 盒子<br>谁最快猜到数字，礼品归谁。<br>我会给大家提示。</li><li>遍历 </li><li>二分法   —&gt; 二叉树 —&gt; 红黑树 —&gt; Balance Ttree(平衡多叉树，简称为BTREE)</li><li>BTREE查找算法演变<br>3.1 B-TREE ：            普通 BTREE<br>3.2 B+TREE ：            叶子节点双向指针<br>3.3 B++TREE（B*TREE）：枝节点的双向指针</li></ol></blockquote><h2 id="2-MySQL中如何使用BTREE"><a href="#2-MySQL中如何使用BTREE" class="headerlink" title="2-MySQL中如何使用BTREE"></a>2-MySQL中如何使用BTREE</h2><blockquote><p>==聚簇（区）索引（集群索==引，聚集索引）</p></blockquote><pre class="line-numbers language-CQL"><code class="language-CQL">前提：    1、 如果表中设置了主键（例如ID列），自动根据ID列生成索引树。    2、 如果没有设置主键，自动选择第一个唯一键的列作为聚簇索引    3、 自动生成隐藏的聚簇索引。4.1.2 建议： 在建表时，显示的创建主键，最好是数字自增列<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-功能"><a href="#3-功能" class="headerlink" title="3-功能"></a>3-功能</h4><pre><code>录入数据时，按照聚簇索引组织存储数据，在磁盘上有序存储数据行。2. 加速查询。基于ID作为条件的判断查询。    </code></pre><p><strong>4 btree构建过程</strong></p><pre class="line-numbers language-powershell"><code class="language-powershell">a<span class="token punctuation">.</span> 叶子节点： 存储数据行时就是有序的，直接将数据行的page作为叶子节点（相邻的叶子结点，有双向指针）b<span class="token punctuation">.</span> 枝节点  ： 提取叶子节点ID的范围<span class="token operator">+</span>指针，构建枝节点（相邻枝节点，有双向指针）c<span class="token punctuation">.</span> 根节点  ： 提取枝节点的ID的范围<span class="token operator">+</span>指针，构建根节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="2-辅助索引"><a href="#2-辅助索引" class="headerlink" title="2-辅助索引"></a>2-辅助索引</h1><p><img src="image-20200503180912667.png" alt="image-20200503180912667"></p><p><img src="image-20200503180926001.png" alt="image-20200503180926001"></p><blockquote><p>==需要人为创建辅助索引，将经常作为查询条件==的列创建辅助索引，起到加速查询的效果。</p></blockquote><h2 id="1-btree-构建过程"><a href="#1-btree-构建过程" class="headerlink" title="1- btree 构建过程"></a>1- btree 构建过程</h2><pre class="line-numbers language-powershell"><code class="language-powershell">a<span class="token punctuation">.</span> 叶子节点：提取主键（ID）<span class="token operator">+</span>辅助索引列，按照辅助索引列进行从小到大排序后，生成叶子节点。（相邻的叶子结点，有双向指针）b<span class="token punctuation">.</span> 枝节点  ：提取叶子节点辅助索引列的范围<span class="token operator">+</span>指针，构建枝节点（相邻枝节点，有双向指针）c<span class="token punctuation">.</span> 根节点  ：提取枝节点的辅助索引列的范围<span class="token operator">+</span>指针，构建根节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-功能"><a href="#2-功能" class="headerlink" title="2-功能"></a>2-功能</h2><pre class="line-numbers language-scss"><code class="language-scss">按照辅助索引列，作为查询条件时。<span class="token number">1.</span> 查找辅助索引树，得到ID值<span class="token number">2.</span> 拿着ID值回表（聚簇索引）查询<span class="token number">5.</span> 使用索引考虑的事项 <span class="token number">5.1</span> 回表是什么？ 回表会带来什么问题？ 怎么减少回表？a<span class="token number">.</span> 按照辅助索引列，作为查询条件时，先查找辅助索引树，再到聚簇索引树查找数据行的过程。b<span class="token number">.</span> IO量多、IO次数多、随机IO会增多c<span class="token number">.</span> 减少回表：           <span class="token number">1.</span> 辅助索引能够完全覆盖查询结果，可以使用联合索引。           <span class="token number">2.</span> 尽量让查询条件精细化，尽量使用唯一值多的列作为查询条件           <span class="token number">3.</span> 优化器：MRR（Multi-Range-Read）， 锦上添花的功能。           mysql> select @@optimizer_switch<span class="token punctuation">;</span>           mysql> set global optimizer_switch=<span class="token string">'mrr=on'</span><span class="token punctuation">;</span>           功能：                <span class="token number">1.</span> 辅助索引查找后得到ID值，进行自动排序           <span class="token number">2.</span> 一次性回表，很有可能受到B+TREE中的双向指针的优化查找。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-索引树高度的影响因素？-如何解决？"><a href="#3-索引树高度的影响因素？-如何解决？" class="headerlink" title="3-索引树高度的影响因素？ 如何解决？"></a>3-索引树高度的影响因素？ 如何解决？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">a<span class="token punctuation">.</span> 高度越低越好b<span class="token punctuation">.</span> 数据行越多，高度越高。   1<span class="token punctuation">.</span> 分区表。一个实例里管理。   2<span class="token punctuation">.</span> 按照数据特点，进行归档表。   3<span class="token punctuation">.</span> 分布式架构。针对海量数据、高并发业务主流方案。   4<span class="token punctuation">.</span> 在设计方面，满足三大范式。c<span class="token punctuation">.</span> 主键规划：长度过长。   1<span class="token punctuation">.</span> 主键，尽量使用自增数字列。d<span class="token punctuation">.</span> 列值长度越长，数据量大的话，会影响到高度。   1<span class="token punctuation">.</span> 使用前缀索引   100字符  只取前10个字符，构建索引树。e<span class="token punctuation">.</span> 数据类型的选择。   选择合适的、简短的数据类性。   例如：    1<span class="token punctuation">.</span> 存储人的年龄  ，使用 tinyint 和 char<span class="token punctuation">(</span>3<span class="token punctuation">)</span>哪个好一些   2<span class="token punctuation">.</span> 存储人名，char<span class="token punctuation">(</span>20<span class="token punctuation">)</span>和varchar<span class="token punctuation">(</span>20<span class="token punctuation">)</span>的选择哪一个好。      a<span class="token punctuation">.</span> 站在数据插入性能角度思考，应该选：char          b<span class="token punctuation">.</span> 从节省空间角度思考<span class="token punctuation">,</span>应该选：varchar      c<span class="token punctuation">.</span> 从索引树高度的角度思考，应该选：varchar  建议使用varchar类型存储变长列值。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-索引应用"><a href="#3-索引应用" class="headerlink" title="3-索引应用"></a>3-索引应用</h1><h2 id="压测"><a href="#压测" class="headerlink" title="压测"></a>压测</h2><pre class="line-numbers language-csharp"><code class="language-csharp">source <span class="token operator">/</span>root<span class="token operator">/</span>t100w<span class="token punctuation">.</span>sqlmysqlslap <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf <span class="token operator">--</span>concurrency<span class="token operator">=</span><span class="token number">100</span> <span class="token operator">--</span>iterations<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">--</span>create<span class="token operator">-</span>schema<span class="token operator">=</span><span class="token string">'test'</span> <span class="token operator">--</span>query<span class="token operator">=</span><span class="token string">"select * from test.t100w where k2='780P'"</span> engine<span class="token operator">=</span>innodb <span class="token operator">--</span>number<span class="token operator">-</span>of<span class="token operator">-</span>queries<span class="token operator">=</span><span class="token number">2000</span> <span class="token operator">-</span>uroot <span class="token operator">-</span>p123 <span class="token operator">-</span>verbose<span class="token operator">--</span>concurrency<span class="token operator">=</span><span class="token number">100</span>  ：  模拟同时<span class="token number">100</span>会话连接<span class="token operator">--</span>create<span class="token operator">-</span>schema<span class="token operator">=</span><span class="token string">'test'</span> ： 操作的库是谁<span class="token operator">--</span>query<span class="token operator">=</span><span class="token string">"select * from test.t100w where k2='780P'"</span>  ：做了什么操作<span class="token operator">--</span>number<span class="token operator">-</span>of<span class="token operator">-</span>queries<span class="token operator">=</span><span class="token number">2000</span> ： 一共做了多少次查询Average number of seconds to run all queries<span class="token punctuation">:</span> <span class="token number">719.431</span> secondsMinimum number of seconds to run all queries<span class="token punctuation">:</span> <span class="token number">719.431</span> secondsMaximum number of seconds to run all queries<span class="token punctuation">:</span> <span class="token number">719.431</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-查询表的索引"><a href="#2-查询表的索引" class="headerlink" title="2-查询表的索引"></a>2-查询表的索引</h2><pre><code>desc t100w;  ----- Key -----PK     --&gt; 主键（聚簇索引）     MUL    --&gt; 辅助索引   UK     --&gt; 唯一索引  mysql&gt; show index from t100w;</code></pre><h2 id="3-创建索引"><a href="#3-创建索引" class="headerlink" title="3 创建索引"></a>3 创建索引</h2><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span>1 单列辅助索引 <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test<span class="token punctuation">.</span>t100w where k2=<span class="token string">'780P'</span>优化方式： 语法：alter table 表名 add index 索引名<span class="token punctuation">(</span>列名<span class="token punctuation">)</span><span class="token punctuation">;</span>    alter table t100w add index idx_k2<span class="token punctuation">(</span>k2<span class="token punctuation">)</span><span class="token punctuation">;</span>6<span class="token punctuation">.</span>3<span class="token punctuation">.</span>2 联合索引创建 mysql> alter table t100w add index idx_k1_num<span class="token punctuation">(</span>k1<span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>6<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 前缀索引创建判断前缀长度多少合适：<span class="token function">select</span> count<span class="token punctuation">(</span>distinct<span class="token punctuation">(</span>left<span class="token punctuation">(</span>name<span class="token punctuation">,</span>5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> city <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#distinct 江name 取出来去重复</span><span class="token function">select</span> count<span class="token punctuation">(</span>distinct name<span class="token punctuation">)</span>  <span class="token keyword">from</span> city <span class="token punctuation">;</span>创建前缀索引mysql> alter table city add index idx_n<span class="token punctuation">(</span>name<span class="token punctuation">(</span>5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-删除索引"><a href="#4-删除索引" class="headerlink" title="4- 删除索引"></a>4- 删除索引</h2><pre class="line-numbers language-CQL"><code class="language-CQL">alter table city drop index idx_n;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="4-执行计划获取和分析"><a href="#4-执行计划获取和分析" class="headerlink" title="4-执行计划获取和分析"></a>4-执行计划获取和分析</h1><blockquote><p>命令介绍: 获取语句的执行计划工具。</p></blockquote><ul><li>==explain==<br>desc </li></ul><h2 id="1-使用方法"><a href="#1-使用方法" class="headerlink" title="1- 使用方法"></a>1- 使用方法</h2><pre><code>mysql&gt; desc select * from city where countrycode=&#39;CHN&#39;;mysql&gt; explain  select * from city where countrycode=&#39;CHN&#39;;+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+| id | select_type | table | partitions | type | possible_keys | key         | key_len | ref   | rows | filtered | Extra |+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+|  1 | SIMPLE      | city  | NULL       | ref  | CountryCode   | CountryCode | 3       | const |  363 |   100.00 | NULL  |+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+</code></pre><h2 id="2-执行计划信息介绍"><a href="#2-执行计划信息介绍" class="headerlink" title="2-执行计划信息介绍"></a>2-执行计划信息介绍</h2><pre class="line-numbers language-csharp"><code class="language-csharp">table         ：此次查询访问的表type          ：索引查询的类型（ALL、index、range、<span class="token keyword">ref</span>、eq_ref、<span class="token keyword">const</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span>、NULL）possible_keys ：可能会应用的索引key           <span class="token punctuation">:</span> 最终选择的索引key_len       ：索引覆盖长度，主要是用来判断联合索引应用长度。rows          ：需要扫描的行数Extra         ：额外信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-type信息详解"><a href="#3-type信息详解" class="headerlink" title="3-type信息详解"></a>3-type信息详解</h2><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">ALL 没有使用到索引a. 查询条件没建立索引mysql> desc select * from city where district='shandong';b. 有索引不走mysql> desc select * from city where countrycode!='CHN';mysql> desc select * from city where countrycode not in ('CHN','USA');mysql> desc select * from city where countrycode like '%CH%';7.4.2 index 全索引扫描 mysql> desc select countrycode from city;7.4.2 range 索引范围扫描 会受到： B+TREE额外优化，叶子节点双向指针mysql> desc select * from city where id<10;mysql> desc select * from city where countrycode like 'CH%';以下两种查询，大几率受不到叶子节点双向指针优化。mysql> desc select * from city where countrycode in ('CHN','USA');mysql> desc select * from city where countrycode='CHN' or countrycode='USA';建议： 如果查询列重复值少的话，我们建议改写为 union all desc select * from city where countrycode='CHN'union allselect * from city where countrycode='USA';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-ref-辅助索引等值查询"><a href="#4-ref-辅助索引等值查询" class="headerlink" title="4-ref  辅助索引等值查询"></a>4-ref  辅助索引等值查询</h2><pre><code>desc select * from city where countrycode=&#39;CHN&#39;;</code></pre><h2 id="5-eq-ref-多表连接查询中"><a href="#5-eq-ref-多表连接查询中" class="headerlink" title="5-eq_ref : 多表连接查询中"></a>5-eq_ref : 多表连接查询中</h2><pre><code>eq_ref : 多表连接查询中，非驱动表的连接条件是主键或唯一键时。mysql&gt; desc select city.name,country.name from city left join country on city.countrycode=country.code where city.population&lt;100;</code></pre><h2 id="6-const-system-：-主键或唯一键等值查询"><a href="#6-const-system-：-主键或唯一键等值查询" class="headerlink" title="6- const(system)： 主键或唯一键等值查询"></a>6- const(system)： 主键或唯一键等值查询</h2><pre><code>mysql&gt; select * from city where id=1;</code></pre><pre><code>7.4.6 NULLmysql&gt; desc select * from city where id=1000000000000000;</code></pre><h1 id="5-key-len"><a href="#5-key-len" class="headerlink" title="5-key_len"></a>5-key_len</h1><blockquote><p>用来判断联合索引应用的部分。<br>例如：<br>idx(a,b,c)<br>我们希望应用联合索引的部分越多越好<br>1.2 如何计算<br>key_len=a+b+c<br>列的key_len长度，按照每列的最大预留长度来做的计算。</p></blockquote><pre class="line-numbers language-CQL"><code class="language-CQL">create table t1 (id int,a int ,b char(10),c varchar(10))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CQL"><code class="language-CQL">最大存储预留长度（字节）: -------------------------------------------------------------------------------    数据类型 ：        占用字节量                有not null           没有Not Null -------------------------------------------------------------------------------        数字类型：      tinyint      :  1字节                    1                   1+1    int          ： 4字节                    4                   4+1    bigint       ： 8字节                    8                   8+1-------------------------------------------------------------------------------    字符串类型：     utf8:      char(10)     ： 10*3字节 =30             30                  30+1    varchar(10)  ： 10*3+2字节=32            32                  32+1-------------------------------------------------------------------------------                    utf8mb4:     char(10)     ：10*4字节 =40              40                  40+1    varchar(10)  ：10*4字节+2 =42            42                  42+1-------------------------------------------------------------------------------use test;    create table test (id int not null primary key auto_increment,a  int not null ,                            # 4  b  int ,                                     # 5c  char(10) not null ,                       # 40d  varchar(10),                              # 43e  varchar(10) not null                      # 42)engine=innodb charset=utf8mb4;alter table test add index idx(a,b,c,d,e);5个列覆盖： 4+5+40+43+42=1344个列覆盖：4+5+40+43=923个列覆盖： 4+5+40=49 2个列覆盖：4+5=9 应用1个列：41.3 测试： mysql> desc select * from test where a=10 and b=10 and  c='a' and d='a' and e='a';mysql> desc select * from test where a=10 and b=10 and  c='a' and d='a';mysql> desc select * from test where a=10 and b=10 and  c='a';mysql> desc select * from test where a=10 and b=10;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-联合索引应用细节"><a href="#1-联合索引应用细节" class="headerlink" title="1-联合索引应用细节"></a>1-联合索引应用细节</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>1 条件：联合索引应用要满足最左原则    a<span class="token punctuation">.</span> 建立联合索引时，选择重复值最少的列作为最左列。    b<span class="token punctuation">.</span> 使用联合索引时，查询条件中，必须包含最左列，才有可能应用到联合索引。1<span class="token punctuation">.</span>4<span class="token punctuation">.</span>2 联合索引不同覆盖场景<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> alter table t100w add index idx<span class="token punctuation">(</span>num<span class="token punctuation">,</span>k1<span class="token punctuation">,</span>k2<span class="token punctuation">)</span><span class="token punctuation">;</span>num :  5k1  :  9k2  :  17a<span class="token punctuation">.</span> 全部覆盖 <span class="token punctuation">(</span>key_len:31<span class="token punctuation">)</span>mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where num=913759  and k1=<span class="token string">'ej'</span> and k2=<span class="token string">'EFfg'</span><span class="token punctuation">;</span>mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where k1=<span class="token string">'ej'</span> and k2=<span class="token string">'EFfg'</span> and  num=913759 <span class="token punctuation">;</span>mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where num=913759  and k1=<span class="token string">'ej'</span> and k2 in<span class="token punctuation">(</span><span class="token string">'EFfg'</span><span class="token punctuation">,</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where num=913759  and k1=<span class="token string">'ej'</span> and k2 like <span class="token string">'EF%'</span>说明： <span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span>a= and b=  and c=  b= and c= and  a= b<span class="token punctuation">.</span> 部分覆盖idx<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> where a =  and   b = where b =  and  a = where a = where a =  and   b> &lt; >= &lt;= in like between and   and  c= 例如： mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where num=913759  and k1><span class="token string">'zz'</span> and k2=<span class="token string">'EFfg'</span><span class="token punctuation">;</span>如何优化？ <span class="token punctuation">(</span>num<span class="token punctuation">,</span>k1<span class="token punctuation">,</span>k2<span class="token punctuation">)</span>   <span class="token operator">--</span>-<span class="token operator">-</span>>  <span class="token punctuation">(</span>num<span class="token punctuation">,</span>k2<span class="token punctuation">,</span>k1<span class="token punctuation">)</span>mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t100w where num=913759  and k2=<span class="token string">'EFfg'</span> and k1><span class="token string">'zz'</span> <span class="token punctuation">;</span>c<span class="token punctuation">.</span> 完全不覆盖idx<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span> where  b  c  where  b   where  c 1<span class="token punctuation">.</span>5<span class="token punctuation">.</span> extra 额外的信息<span class="token keyword">using</span> filesort   <span class="token operator">--</span><span class="token operator">-</span>> <span class="token function">group</span> by \ order by \distinct \ union all mysql> desc <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city where countrycode=<span class="token string">'CHN'</span> order by population<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-应用场景"><a href="#2-应用场景" class="headerlink" title="2-应用场景"></a>2-应用场景</h2><pre><code>数据库慢：     a. 应急性的慢。    show full processlist; ----&gt; 慢语句 ----&gt; explain SQL ---&gt; 优化索引、改写语句    b. 间歇性慢。    slowlog    ----&gt;   慢语句  ---&gt;   explain SQL ---&gt; 优化索引、改写语句</code></pre><h2 id="3-索引应用规范"><a href="#3-索引应用规范" class="headerlink" title="3-索引应用规范"></a>3-索引应用规范</h2><pre class="line-numbers language-powershell"><code class="language-powershell">2<span class="token punctuation">.</span>1 建立索引的原则（DBA运维规范）2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>0 说明为了使索引的使用效率更高，在创建索引时，必须考虑在哪些字段上创建索引和创建什么类型的索引。2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 <span class="token punctuation">(</span>必须的<span class="token punctuation">)</span> 建表时一定要有主键<span class="token punctuation">,</span>一般是个无关自增列数字列。1<span class="token punctuation">.</span> 降低索引树高度。2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>2 选择唯一性索引唯一性索引的值是唯一的，可以更快速的通过该索引来确定某条记录。例如，学生表中学号是具有唯一性的字段。为该字段建立唯一性索引可以很快的确定某个学生的信息。如果使用姓名的话，可能存在同名现象，从而降低查询速度。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-优化方案"><a href="#4-优化方案" class="headerlink" title="4-优化方案:"></a>4-优化方案:</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token punctuation">(</span>1<span class="token punctuation">)</span> 如果非得使用重复值较多的列作为查询条件<span class="token punctuation">(</span>例如:男女<span class="token punctuation">)</span><span class="token punctuation">,</span>可以将表逻辑拆分<span class="token punctuation">(</span>2<span class="token punctuation">)</span> 可以将此列和其他的查询类<span class="token punctuation">,</span>做联和索引<span class="token function">select</span> count<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> world<span class="token punctuation">.</span>city<span class="token punctuation">;</span><span class="token function">select</span> count<span class="token punctuation">(</span>distinct countrycode<span class="token punctuation">)</span> <span class="token keyword">from</span> world<span class="token punctuation">.</span>city<span class="token punctuation">;</span><span class="token function">select</span> count<span class="token punctuation">(</span>distinct countrycode<span class="token punctuation">)</span> <span class="token keyword">from</span> world<span class="token punctuation">.</span>city<span class="token punctuation">;</span><span class="token function">select</span> count<span class="token punctuation">(</span>distinct countrycode<span class="token punctuation">,</span>population <span class="token punctuation">)</span> <span class="token keyword">from</span> world<span class="token punctuation">.</span>city<span class="token punctuation">;</span>2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">(</span>必须的<span class="token punctuation">)</span> 为经常需要where 、ORDER BY、<span class="token function">GROUP</span> BY<span class="token punctuation">,</span>join on等操作的字段，排序操作会浪费很多时间。2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>4 尽量使用前缀来索引如果索引字段的值很长，最好使用值的前缀来索引。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-限制索引的数目"><a href="#6-限制索引的数目" class="headerlink" title="6-限制索引的数目"></a>6-限制索引的数目</h2><pre class="line-numbers language-powershell"><code class="language-powershell">索引的数目不是越多越好。可能会产生的问题:<span class="token punctuation">(</span>1<span class="token punctuation">)</span> 每个索引都需要占用磁盘空间，索引越多，需要的磁盘空间就越大。<span class="token punctuation">(</span>2<span class="token punctuation">)</span> 修改表时，对索引的重构和更新很麻烦。越多的索引，会使更新表变得很浪费时间。<span class="token punctuation">(</span>3<span class="token punctuation">)</span> 优化器的负担会很重<span class="token punctuation">,</span>有可能会影响到优化器的选择<span class="token punctuation">.</span>percona<span class="token operator">-</span>toolkit中有个工具<span class="token punctuation">,</span>专门分析索引是否有用2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>6 删除不再使用或者很少使用的索引<span class="token punctuation">(</span>percona toolkit<span class="token punctuation">)</span>表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。数据库管理员应当定期找出这些索引，将它们删除，从而减少索引对更新操作的影响。2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>7 大表加索引<span class="token punctuation">,</span>要在业务不繁忙期间操作推荐使用PT<span class="token operator">-</span>OSC2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>8 尽量少在经常更新值的列上建索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结：-建索引原则"><a href="#总结：-建索引原则" class="headerlink" title="总结：  建索引原则"></a>总结：  建索引原则</h2><blockquote><p>(1) 必须要有主键,如果没有可以做为主键条件的列,创建无关列<br>(2) 经常做为where条件列  order by  group by  join on, distinct 的条件(业务:产品功能+用户行为)<br>(3) 最好使用唯一值多的列作为索引,如果索引列重复值较多,可以考虑使用联合索引<br>(4) 列值长度较长的索引列,我们建议使用前缀索引.<br>(5) 降低索引条目,一方面不要创建没用索引,不常使用的索引清理,percona toolkit(xxxxx)<br>(6) 索引维护要避开业务繁忙期，建议用pt-osc</p></blockquote><h1 id="6-不走索引的情况"><a href="#6-不走索引的情况" class="headerlink" title="6-不走索引的情况"></a>6-不走索引的情况</h1><pre><code>2.2.1 没有查询条件，或者查询条件没有建立索引select * from city; select * from city where 1=1;2.2.2 查询结果集是原表中的大部分数据，应该是15-25%以上。100w  num 有索引   select * from t100w where num&gt;1    ----&gt; 全表查询的结果集，超过了总数行数25%，优化器觉得就没有必要走索引了。MySQL的预读功能有关。可以通过精确查找范围，达到优化的效果。1000000&gt;500000 and &lt; 6000002.2.3 索引本身失效，统计信息不真实（过旧）索引有自我维护的能力。对于表内容变化比较频繁的情况下，有可能会出现索引失效。一般是删除重建现象:有一条select语句平常查询时很快,突然有一天很慢,会是什么原因select?  ---&gt;索引失效,统计数据不真实innodb_index_stats  innodb_table_stats  mysql&gt; ANALYZE TABLE world.city;2.2.4 查询条件使用函数在索引列上，或者对索引列进行运算，运算包括(+，-，*，/，! 等)例子：错误的例子：select * from test where id-1=9;正确的例子：select * from test where id=10;算术运算函数运算子查询2.2.5 隐式转换导致索引失效.这一点应当引起重视.也是开发中经常会犯的错误.这样会导致索引失效. 错误的例子：mysql&gt; alter table tab add index inx_tel(telnum);Query OK, 0 rows affected (0.03 sec)Records: 0  Duplicates: 0  Warnings: 0mysql&gt;mysql&gt; desc tab;+--------+-------------+------+-----+---------+-------+| Field  | Type        | Null | Key | Default | Extra |+--------+-------------+------+-----+---------+-------+| id    | int(11)    | YES  |    | NULL    |      || name  | varchar(20) | YES  |    | NULL    |      || telnum | varchar(20) | YES  | MUL | NULL    |      |+--------+-------------+------+-----+---------+-------+3 rows in set (0.01 sec)mysql&gt; select * from tab where telnum=&#39;1333333&#39;;+------+------+---------+| id  | name | telnum  |+------+------+---------+|    1 | a    | 1333333 |+------+------+---------+1 row in set (0.00 sec)mysql&gt; select * from tab where telnum=1333333;+------+------+---------+| id  | name | telnum  |+------+------+---------+|    1 | a    | 1333333 |+------+------+---------+1 row in set (0.00 sec)mysql&gt; explain  select * from tab where telnum=&#39;1333333&#39;;+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+| id | select_type | table | type | possible_keys | key    | key_len | ref  | rows | Extra                |+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+|  1 | SIMPLE      | tab  | ref  | inx_tel      | inx_tel | 63      | const |    1 | Using index condition |+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+1 row in set (0.00 sec)mysql&gt; explain  select * from tab where telnum=1333333;+----+-------------+-------+------+---------------+------+---------+------+------+-------------+| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra      |+----+-------------+-------+------+---------------+------+---------+------+------+-------------+|  1 | SIMPLE      | tab  | ALL  | inx_tel      | NULL | NULL    | NULL |    2 | Using where |+----+-------------+-------+------+---------------+------+---------+------+------+-------------+1 row in set (0.00 sec)mysql&gt; explain  select * from tab where telnum=1555555;+----+-------------+-------+------+---------------+------+---------+------+------+-------------+| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra      |+----+-------------+-------+------+---------------+------+---------+------+------+-------------+|  1 | SIMPLE      | tab  | ALL  | inx_tel      | NULL | NULL    | NULL |    2 | Using where |+----+-------------+-------+------+---------------+------+---------+------+------+-------------+1 row in set (0.00 sec)mysql&gt; explain  select * from tab where telnum=&#39;1555555&#39;;+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+| id | select_type | table | type | possible_keys | key    | key_len | ref  | rows | Extra                |+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+|  1 | SIMPLE      | tab  | ref  | inx_tel      | inx_tel | 63      | const |    1 | Using index condition |+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+1 row in set (0.00 sec)mysql&gt;2.2.6 &lt;&gt; ，not in 不走索引（辅助索引）EXPLAIN  SELECT * FROM teltab WHERE telnum  &lt;&gt; &#39;110&#39;;EXPLAIN  SELECT * FROM teltab WHERE telnum  NOT IN (&#39;110&#39;,&#39;119&#39;);mysql&gt; select * from tab where telnum &lt;&gt; &#39;1555555&#39;;+------+------+---------+| id  | name | telnum  |+------+------+---------+|    1 | a    | 1333333 |+------+------+---------+1 row in set (0.00 sec)mysql&gt; explain select * from tab where telnum &lt;&gt; &#39;1555555&#39;;单独的&gt;,&lt;,in 有可能走，也有可能不走，和结果集有关，尽量结合业务添加limitor或in 可以修改成union allEXPLAIN  SELECT * FROM teltab WHERE telnum  IN (&#39;110&#39;,&#39;119&#39;);改写成：EXPLAIN SELECT * FROM teltab WHERE telnum=&#39;110&#39;UNION ALLSELECT * FROM teltab WHERE telnum=&#39;119&#39;2.2.7 like &quot;%_&quot; 百分号在最前面不走EXPLAIN SELECT * FROM teltab WHERE telnum LIKE &#39;31%&#39;  走range索引扫描EXPLAIN SELECT * FROM teltab WHERE telnum LIKE &#39;%110&#39;  不走索引%linux%类的搜索需求，可以使用elasticsearch 或者 mongodb 专门做搜索服务的数据库产品</code></pre><h1 id="7-彩蛋-扩展-：优化器针对索引的算法"><a href="#7-彩蛋-扩展-：优化器针对索引的算法" class="headerlink" title="7-彩蛋(扩展)：优化器针对索引的算法"></a>7-彩蛋(扩展)：优化器针对索引的算法</h1><p>``</p><pre><code>3.1 自优化能力： 3.1.1  MySQL索引的自优化-AHI（自适应HASH索引）MySQL的InnoDB引擎，能够创建只有Btree。AHI作用： 自动评估&quot;热&quot;的内存索引page,生成HASH索引表。帮助InnoDB快速读取索引页。加快索引读取的效果。相当与索引的索引。3.1.2 MySQL索引的自优化-Change buffer比如insert，update，delete 数据。对于聚簇索引会立即更新。对于辅助索引，不是实时更新的。在InnoDB 内存结构中，加入了insert buffer（会话），现在版本叫change buffer。Change buffer 功能是临时缓冲辅助索引需要的数据更新。当我们需要查询新insert 的数据，会在内存中进行merge(合并)操作，此时辅助索引就是最新的。3.1.3 8.0 版本索引的新特性 a. 不可见索引。invisable/visable  index 针对优化器不可见。但是索引还在磁盘存在，还会自动维护。对于索引维护时，不确定索引是否还有用。这时可以临时设定为invisable。b. 倒序索引。select * from t1 where c =  order by   a ASC , b desc ;idx(c,a, b desc )3.2 可选的优化器算法-索引3.2.1 优化器算法查询select @@optimizer_switch;index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,engine_condition_pushdown=on,index_condition_pushdown=on,mrr=on,mrr_cost_based=on,block_nested_loop=on,batched_key_access=off,materialization=on,semijoin=on,loosescan=on,firstmatch=on,duplicateweedout=on,subquery_materialization_cost_based=on,use_index_extensions=on,condition_fanout_filter=on,derived_merge=on3.2.2 如何修改?1. my.cnf optimizer_switch=&#39;batched_key_access=on&#39;2. set global optimizer_switch=&#39;batched_key_access=on&#39;;3. hints 了解一下SELECT /*+ NO_RANGE_OPTIMIZATION(t3 PRIMARY, f2_idx) */ f1FROM t3 WHERE f1 &gt; 30 AND f1 &lt; 33;SELECT /*+ BKA(t1) NO_BKA(t2) */ * FROM t1 INNER JOIN t2 WHERE ...;SELECT /*+ NO_ICP(t1, t2) */ * FROM t1 INNER JOIN t2 WHERE ...;SELECT /*+ SEMIJOIN(FIRSTMATCH, LOOSESCAN) */ * FROM t1 ...;EXPLAIN SELECT /*+ NO_ICP(t1) */ * FROM t1 WHERE ...;https://dev.mysql.com/doc/refman/5.7/en/optimizer-hints.html3.2.3 index_condition_pushdown （ICP）介绍： 索引下推 ，5.6+ 加入的特性idx(a,b,c)where  a =  and   b &gt;   and  c = 作用： SQL层做完过滤后，只能用a,b的部分辅助索引，将c列条件的过滤下推到engine层，进行再次过滤。排除无用的数据页。最终去磁盘上拿数据页。大大减少无用IO的访问。测试1: ICP开启时idx(k1,k2)mysql&gt; SET global optimizer_switch=&#39;index_condition_pushdown=ON&#39;[root@db01 ~]# mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema=&#39;test&#39; --query=&quot;select * from test.t100w where  k1 &gt; &#39;Za&#39; and k2=&#39;rsEF&#39;&quot; engine=innodb --number-of-queries=2000 -uroot -p123 -verbose测试2:ICP关闭时：idx(k1,k2)mysql&gt; SET global optimizer_switch=&#39;index_condition_pushdown=OFF&#39;[root@db01 ~]# mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema=&#39;test&#39; --query=&quot;select * from test.t100w where  k1 &gt; &#39;Za&#39; and k2=&#39;rsEF&#39;&quot; engine=innodb --number-of-queries=2000 -uroot -p123 -verbose测试3:优化索引 idx(k2,k1)[root@db01 ~]# mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema=&#39;test&#39; --query=&quot;select * from test.t100w where  k1 &gt; &#39;Za&#39; and k2=&#39;rsEF&#39;&quot; engine=innodb --number-of-queries=2000 -uroot -p123 -verbose具体参考 ： https://dev.mysql.com/doc/refman/5.7/en/index-condition-pushdown-optimization.htmlhttps://mariadb.com/kb/en/index-condition-pushdown/3.4 MRR  :  Multi Range Read3.4.1 作用： 减少回表。3.4.2 开关方法：mysql&gt; set global optimizer_switch=&#39;mrr=on,mrr_cost_based=off&#39;;3.4.3 区别具体参考 ： https://dev.mysql.com/doc/refman/5.7/en/mrr-optimization.htmlhttps://mariadb.com/kb/en/multi-range-read-optimization/压力测试： mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema=&#39;world&#39; --query=&quot;select * from world.city where name in (&#39;Aachen&#39;,&#39;Aalborg&#39;,&#39;Aba&#39;,&#39;Abadan&#39;,&#39;Abaetetuba&#39;)&quot; engine=innodb --number-of-queries=20000 -uroot -p123 -verbose3.5 SNLJ例子： A  join  B on   A.xx = B.yy 伪代码：for each row in A matching range {    block     for each row in B {      A.xx = B.yy ，send to client    }}以上例子，可以通过 left join 强制驱动表。3.6 BNLJ在 A和B关联条件匹配时，不再一次一次进行循环。而是采用一次性将驱动表的关联值和非驱动表匹配.一次性返回结果主要优化了， CPU消耗，减少了IO次数In EXPLAIN output, use of BNL for a table is signified when the Extra value contains Using join buffer (Block Nested Loop)3.7 BKA 主要作用，使用来优化非驱动表的关联列有辅助索引。BNL+ MRR的功能。开启方式： mysql&gt; set global optimizer_switch=&#39;mrr=on,mrr_cost_based=off&#39;;mysql&gt; set global optimizer_switch=&#39;batched_key_access=on&#39;;重新登陆生效。</code></pre><h1 id="8-MRR"><a href="#8-MRR" class="headerlink" title="8-MRR"></a>8-MRR</h1><p><img src="image-20200506194949612.png" alt="image-20200506194949612"></p><pre><code>作用： 减少回表。减少随机IO。</code></pre><h3 id="开关方法"><a href="#开关方法" class="headerlink" title="开关方法"></a>开关方法</h3><pre class="line-numbers language-CQL"><code class="language-CQL"> set global optimizer_switch='mrr=on,mrr_cost_based=off';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h6><pre class="line-numbers language-CQL"><code class="language-CQL">具体参考 ： https://dev.mysql.com/doc/refman/5.7/en/mrr-optimization.htmlhttps://mariadb.com/kb/en/multi-range-read-optimization/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>压力测试：</strong> </p><pre class="line-numbers language-CQL"><code class="language-CQL">mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from world.city where name in ('Aachen','Aalborg','Aba','Abadan','Abaetetuba')" engine=innodb --number-of-queries=20000 -uroot -p123 -verbose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="SNLJ-普通嵌套循环连接"><a href="#SNLJ-普通嵌套循环连接" class="headerlink" title="SNLJ 普通嵌套循环连接"></a>SNLJ 普通嵌套循环连接</h2><pre class="line-numbers language-CQL"><code class="language-CQL">例子： A  join  B on   A.xx = B.yy where  伪代码：for each row in A matching range {    block     for each row in B {      A.xx = B.yy ，send to client    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例子：  </p><pre class="line-numbers language-cassandra"><code class="language-cassandra">mysql> desc select * from teacher join course on teacher.tno=course.tno;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="优化器默认优化规则："><a href="#优化器默认优化规则：" class="headerlink" title="优化器默认优化规则："></a>优化器默认优化规则：</h2><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 选择驱动表默认选择方式（非驱动表）：     按照on的条件列，是否有索引，索引的类型选择。    1<span class="token punctuation">.</span> 在on条件中，优化器优先选择有索引的列为非驱动表。    2<span class="token punctuation">.</span> 如果两个列都有索引，优化器会按照执行的代价去选择驱动表和非驱动表。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CQL"><code class="language-CQL">for each row in course matching range {    join buffer     block     for each row in teacher {      course.tno = tracher.tno ，send to client    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关于驱动表选择的优化思路："><a href="#关于驱动表选择的优化思路：" class="headerlink" title="关于驱动表选择的优化思路："></a>关于驱动表选择的优化思路：</h2><pre class="line-numbers language-CQL"><code class="language-CQL">理论支撑：mysql> desc   select * from city join country on city.countrycode=country.code ;mysql> desc   select * from city left join country on city.countrycode=country.code ;查询语句执行代价： mysql> desc   format=json select * from city join country on city.countrycode=country.code ;mysql> desc   format=json select * from city left join country on city.countrycode=country.code ;实践检验： [root@db01 ~]# mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city left join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose[root@db01 ~]# mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city  join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose注： 可以通过 left join 强制驱动表。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="9-BNLJ"><a href="#9-BNLJ" class="headerlink" title="9-BNLJ"></a>9-BNLJ</h1><h4 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4><pre class="line-numbers language-powershell"><code class="language-powershell">在 A和B关联条件匹配时，不再一次一次进行循环。采用块循环连接。A表中需要关联的数据，现在join buffer缓冲而是采用一次性将驱动表的关联值和非驱动表匹配<span class="token punctuation">.</span>一次性返回结果主要优化了CPU消耗，减少了一部分IO消耗。触发条件：非驱动表的连接条件有辅助索引。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">In EXPLAIN output<span class="token punctuation">,</span> use of BNL <span class="token keyword">for</span> a table is signified when the Extra value contains <span class="token keyword">Using</span> join buffer <span class="token punctuation">(</span>Block Nested Loop<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="10-BKA"><a href="#10-BKA" class="headerlink" title="10-BKA"></a>10-BKA</h1><pre class="line-numbers language-powershell"><code class="language-powershell">主要作用，使用来优化非驱动表的关联列有辅助索引。BNL<span class="token operator">+</span> MRR的功能。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">开启方式： mysql> <span class="token function">set</span> global optimizer_switch=<span class="token string">'mrr=on,mrr_cost_based=off'</span><span class="token punctuation">;</span>mysql> <span class="token function">set</span> global optimizer_switch=<span class="token string">'batched_key_access=on'</span><span class="token punctuation">;</span>重新登陆生效。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结：-多表连接优化"><a href="#总结：-多表连接优化" class="headerlink" title="总结： 多表连接优化"></a>总结： 多表连接优化</h2><pre class="line-numbers language-powershell"><code class="language-powershell">0<span class="token punctuation">.</span> 驱动表选择 A  join  B  on  A<span class="token punctuation">.</span>x=b<span class="token punctuation">.</span>y 0<span class="token punctuation">.</span>1<span class="token punctuation">.</span> 让优化器自己决定：     （1）<span class="token punctuation">.</span> 在on条件中，优化器优先选择有索引的列为非驱动表。    （2）<span class="token punctuation">.</span> 如果两个列都有索引，优化器会按照执行的代价去选择驱动表和非驱动表。0<span class="token punctuation">.</span>2<span class="token punctuation">.</span> 自主选择：     left join强制驱动表0<span class="token punctuation">.</span>3<span class="token punctuation">.</span> 关于驱动表选择的优化思路： 理论支撑：mysql> desc   <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>mysql> desc   <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city left join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>查询语句执行代价： mysql> desc   format=json <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>mysql> desc   format=json <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city left join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>实践检验： <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city left join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city  join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span> 情景一： 触发SNL的情况非驱动表，关联条件 如果没有任何索引的话，只能默认使用SNL算法代价较高，建议做合理优化。例如：将非驱动表关联条件建立索引。      （1）主键或唯一键，会自动使用eq_ref算法进行执行查询。      （2）辅助索引，默认会采用BNL。如果开启BKA，会走BKA。2<span class="token punctuation">.</span> 情景二： 触发BNL的情况 非驱动表，连接条件如果有普通索引。会默认会用BNL。3<span class="token punctuation">.</span> 情景三： 触发BKA的情况非驱动表，连接条件如果有普通索引。默认是关闭的，启动方式： mysql> <span class="token function">set</span> global optimizer_switch=<span class="token string">'mrr=on,mrr_cost_based=off'</span><span class="token punctuation">;</span>mysql> <span class="token function">set</span> global optimizer_switch=<span class="token string">'batched_key_access=on'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选择-BNL和BKA算法的判断思路："><a href="#选择-BNL和BKA算法的判断思路：" class="headerlink" title="选择 BNL和BKA算法的判断思路："></a>选择 BNL和BKA算法的判断思路：</h2><pre class="line-numbers language-powershell"><code class="language-powershell">理论支撑：mysql> desc   <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>mysql> desc   <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city left join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>查询语句执行代价： mysql> desc   format=json <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>mysql> desc   format=json <span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> city left join country on city<span class="token punctuation">.</span>countrycode=country<span class="token punctuation">.</span>code <span class="token punctuation">;</span>实践检验： <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city left join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='world' --query="select * from city  join country on city.countrycode=country.code ;" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose</span>最终结论：不管是优化单表或多表，重点是在于索引和语句本身优化。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二章   体系结构</title>
      <link href="/2020/04/22/02-mysql-lesson02-ti-xi-jie-gou-yu-guan-li/"/>
      <url>/2020/04/22/02-mysql-lesson02-ti-xi-jie-gou-yu-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="1-体系结构"><a href="#1-体系结构" class="headerlink" title="1. 体系结构"></a>1. 体系结构</h1><h2 id="1-1-C-S-客户端-服务端-模型介绍"><a href="#1-1-C-S-客户端-服务端-模型介绍" class="headerlink" title="1.1 C/S(客户端/服务端)模型介绍"></a>1.1 C/S(客户端/服务端)模型介绍</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-301b140a033d0dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/712/format/webp" alt="img"></p><p>image</p><pre class="line-numbers language-scss"><code class="language-scss">TCP/IP方式（远程、本地）：mysql -uroot -poldboy<span class="token number">123</span> -h <span class="token number">10.0.0.51</span> -P<span class="token number">3306</span>Socket方式<span class="token punctuation">(</span>仅本地<span class="token punctuation">)</span>：mysql -uroot -poldboy<span class="token number">123</span> -S /tmp/mysql<span class="token number">.</span>sock----------------------------------Linux 中一切皆文件。Linux中一切皆命令。MySQL 中一切皆表。一切皆SQL。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-实例介绍"><a href="#1-2-实例介绍" class="headerlink" title="1.2 实例介绍"></a>1.2 实例介绍</h2><p>MySQL 逻辑对象的特点</p><pre><code>库 ： 库名 + 库属性表 ： 列(字段：列名，列属性) + 行（记录）+ 表属性</code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">实例=mysqld后台守护进程+Master Thread +干活的Thread+预分配的内存公司=老板+经理+员工+办公室<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="1-3-mysqld程序运行原理"><a href="#1-3-mysqld程序运行原理" class="headerlink" title="1.3 mysqld程序运行原理"></a>1.3 mysqld程序运行原理</h2><h3 id="1-3-1-mysqld程序结构"><a href="#1-3-1-mysqld程序结构" class="headerlink" title="1.3.1 mysqld程序结构"></a>1.3.1 mysqld程序结构</h3><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-7824255ca53f23e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/645/format/webp" alt="img"></p><p>image</p><h3 id="1-3-2-一条SQL语句的执行过程"><a href="#1-3-2-一条SQL语句的执行过程" class="headerlink" title="1.3.2 一条SQL语句的执行过程"></a>1.3.2 一条SQL语句的执行过程</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">2.1</span> 连接层（<span class="token number">1</span>）提供连接协议：<span class="token constant">TCP</span><span class="token operator">/</span><span class="token constant">IP</span> 、<span class="token constant">SOCKET</span>（<span class="token number">2</span>）提供验证：用户、密码，<span class="token constant">IP</span>，<span class="token constant">SOCKET</span>（<span class="token number">3</span>）提供专用连接线程：接收用户<span class="token constant">SQL</span>，返回结果通过以下语句可以查看到连接线程基本情况mysql<span class="token operator">></span> show processlist<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.3.2.2 SQL层 （重点）</p><pre class="line-numbers language-undefined"><code class="language-undefined">（1）接收上层传送的SQL语句（2）语法验证模块：验证语句语法,是否满足SQL_MODE（3）语义检查：判断SQL语句的类型DDL ：数据定义语言DCL ：数据控制语言DML ：数据操作语言DQL： 数据查询语言...（4）权限检查：用户对库表有没有权限（5）解析器：对语句执行前,进行预处理，生成解析树(执行计划),说白了就是生成多种执行方案.（6）优化器：根据解析器得出的多种执行计划，进行判断，选择最优的执行计划        代价模型：资源（CPU IO MEM）的耗损评估性能好坏（7）执行器：根据最优执行计划，执行SQL语句，产生执行结果执行结果：在磁盘的xxxx位置上（8）提供查询缓存（默认是没开启的），会使用redis tair替代查询缓存功能（9）提供日志记录（日志管理章节）：binlog，默认是没开启的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.3.2.3 存储引擎层（类似于Linux中的文件系统）</p><pre class="line-numbers language-undefined"><code class="language-undefined">负责根据SQL层执行的结果，从磁盘上拿数据。将16进制的磁盘数据，交由SQL结构化化成表，连接层的专用线程返回给用户。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="1-4-逻辑结构"><a href="#1-4-逻辑结构" class="headerlink" title="1.4 逻辑结构"></a>1.4 逻辑结构</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-127fff46fdb7fea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/505/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-4-1-库："><a href="#1-4-1-库：" class="headerlink" title="1.4.1 库："></a>1.4.1 库：</h3><pre class="line-numbers language-undefined"><code class="language-undefined">库名，库属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-4-2-表"><a href="#1-4-2-表" class="headerlink" title="1.4.2 表"></a>1.4.2 表</h3><p>微观</p><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">扇区、OS block、PAGE、extents 设计理念，都是为了能够程序  -----> OS -----> HDISK 从逻辑操作，到物理操作都能够保证尽可能“连续”IO。段 ： segments , 一个表就是一个段，由1-N个区构成。区 ： extents,  又被称之为“簇”，由64个连续的PAGE构成。默认大小1M。页 :  PAGE，MySQL 最小IO单元，默认大小 16KB，连续的4个OS block。OS block : 文件系统块，默认是4KB，连续的8个扇区。扇区     ： 默认512字节，连续的512字节长度的磁盘区域。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">表名属性列:列名(字段),列属性(数据类型,约束等)数据行(记录)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-5-物理存储结构引入"><a href="#1-5-物理存储结构引入" class="headerlink" title="1.5 物理存储结构引入"></a>1.5 物理存储结构引入</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-bfd40838aef7971b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/973/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-5-1-库的物理存储结构"><a href="#1-5-1-库的物理存储结构" class="headerlink" title="1.5.1 库的物理存储结构"></a>1.5.1 库的物理存储结构</h3><pre class="line-numbers language-undefined"><code class="language-undefined">用文件系统的目录来存储<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-5-2-表的物理存储结构"><a href="#1-5-2-表的物理存储结构" class="headerlink" title="1.5.2 表的物理存储结构"></a>1.5.2 表的物理存储结构</h3><pre class="line-numbers language-css"><code class="language-css">MyISAM（一种引擎）的表：-rw-r----- <span class="token number">1</span> mysql mysql   <span class="token number">10816</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> user<span class="token number">.</span>frm-rw-r----- <span class="token number">1</span> mysql mysql     <span class="token number">396</span> Apr <span class="token number">18</span> <span class="token property">12</span><span class="token punctuation">:</span><span class="token number">20</span>  user<span class="token number">.</span>MYD-rw-r----- <span class="token number">1</span> mysql mysql    <span class="token number">4096</span> Apr <span class="token number">18</span> <span class="token property">14</span><span class="token punctuation">:</span><span class="token number">48</span> user<span class="token number">.</span>MYI<span class="token function">InnoDB</span><span class="token punctuation">(</span>默认的存储引擎<span class="token punctuation">)</span>的表：-rw-r----- <span class="token number">1</span> mysql mysql    <span class="token number">8636</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> time_zone<span class="token number">.</span>frm-rw-r----- <span class="token number">1</span> mysql mysql   <span class="token number">98304</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> time_zone<span class="token number">.</span>ibdtime_zone<span class="token number">.</span>frm：存储列相关信息time_zone<span class="token number">.</span>ibd：数据行+索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-3-表的段、区、页（16k）（了解）"><a href="#1-5-3-表的段、区、页（16k）（了解）" class="headerlink" title="1.5.3 表的段、区、页（16k）（了解）"></a>1.5.3 表的段、区、页（16k）（了解）</h3><pre class="line-numbers language-undefined"><code class="language-undefined">页：最小的存储单元，默认16k区：64个连续的页，共1M段：一个表就是一个段，包含一个或多个区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-基础管理"><a href="#2-基础管理" class="headerlink" title="2. 基础管理"></a>2. 基础管理</h1><h2 id="2-1-用户、权限管理"><a href="#2-1-用户、权限管理" class="headerlink" title="2.1 用户、权限管理"></a>2.1 用户、权限管理</h2><h3 id="2-1-1-用户"><a href="#2-1-1-用户" class="headerlink" title="2.1.1 用户"></a>2.1.1 用户</h3><h3 id="2-查询"><a href="#2-查询" class="headerlink" title="2-查询"></a>2-查询</h3><pre><code>mysql&gt; select user,host ,authentication_string ,plugin from mysql.user;mysql&gt; desc mysql.user;    -- 查询表定义</code></pre><p>作用：</p><pre class="line-numbers language-undefined"><code class="language-undefined">登录，管理数据库逻辑对象<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>定义：</p><pre class="line-numbers language-kotlin"><code class="language-kotlin">用户名@<span class="token string">'白名单'</span>白名单支持的方式？<span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.%'</span>    <span class="token label symbol">wordpress@</span><span class="token string">'%'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.200'</span><span class="token label symbol">wordpress@</span><span class="token string">'localhost'</span><span class="token label symbol">wordpress@</span><span class="token string">'db02'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.5%'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.0/255.255.254.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>管理操作：</p><pre class="line-numbers language-css"><code class="language-css">增：mysql> create user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>查：mysql> desc mysql<span class="token number">.</span>user<span class="token punctuation">;</span>    ---->  authentication_stringmysql> select user ,host ,authentication_string from mysql<span class="token number">.</span>user改<span class="token punctuation">:</span>mysql> alter user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'456'</span><span class="token punctuation">;</span>删：mysql> drop user oldboy@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span>用户锁定 ACCOUNT LOCK    ACCOUNT UNLOCK        mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT LOCK<span class="token punctuation">;</span>    mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT UNLOCK<span class="token punctuation">;</span>    ## 密码过期 （了解）    alter user oldboy@<span class="token string">'10.0.0.%'</span> PASSWORD EXPIRE<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-2-权限"><a href="#2-1-2-权限" class="headerlink" title="2.1.2 权限"></a>2.1.2 权限</h3><p>权限管理操作：</p><pre class="line-numbers language-css"><code class="language-css">mysql> grant all on wordpress<span class="token number">.</span>* to wordpress@<span class="token string">'10.0.0.%'</span> identified  by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常用权限介绍:</p><pre class="line-numbers language-dart"><code class="language-dart">ALL<span class="token punctuation">:</span>SELECT<span class="token punctuation">,</span>INSERT<span class="token punctuation">,</span> UPDATE<span class="token punctuation">,</span> DELETE<span class="token punctuation">,</span> CREATE<span class="token punctuation">,</span> DROP<span class="token punctuation">,</span> RELOAD<span class="token punctuation">,</span> SHUTDOWN<span class="token punctuation">,</span> PROCESS<span class="token punctuation">,</span> FILE<span class="token punctuation">,</span> REFERENCES<span class="token punctuation">,</span> INDEX<span class="token punctuation">,</span> ALTER<span class="token punctuation">,</span> SHOW DATABASES<span class="token punctuation">,</span> SUPER<span class="token punctuation">,</span> CREATE TEMPORARY TABLES<span class="token punctuation">,</span> LOCK TABLES<span class="token punctuation">,</span> EXECUTE<span class="token punctuation">,</span> REPLICATION SLAVE<span class="token punctuation">,</span> REPLICATION CLIENT<span class="token punctuation">,</span> CREATE VIEW<span class="token punctuation">,</span> SHOW VIEW<span class="token punctuation">,</span> CREATE ROUTINE<span class="token punctuation">,</span> ALTER ROUTINE<span class="token punctuation">,</span> CREATE USER<span class="token punctuation">,</span> EVENT<span class="token punctuation">,</span> TRIGGER<span class="token punctuation">,</span> CREATE TABLESPACEALL <span class="token punctuation">:</span> 以上所有权限，一般是普通管理员拥有的<span class="token keyword">with</span> grant option：超级管理员才具备的，给别的用户授权的功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>权限作用范围:</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span>                  <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>管理员用户wordpress<span class="token punctuation">.</span><span class="token operator">*</span>          <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>开发和应用用户wordpress<span class="token punctuation">.</span>t1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需求1：windows机器的navicat登录到linux中的MySQL，管理员用户。</p><pre class="line-numbers language-css"><code class="language-css">mysql> grant all on *<span class="token number">.</span>* to root@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需求2：创建一个应用用户app用户，能从windows上登录mysql，并能操作app库</p><pre class="line-numbers language-csharp"><code class="language-csharp">mysql<span class="token operator">></span> grant <span class="token keyword">select</span> <span class="token punctuation">,</span>update<span class="token punctuation">,</span>insert<span class="token punctuation">,</span>delete on app<span class="token punctuation">.</span><span class="token operator">*</span> to app<span class="token string">@'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-3-开发人员用户授权流程"><a href="#2-1-3-开发人员用户授权流程" class="headerlink" title="2.1.3 开发人员用户授权流程"></a>2.1.3 开发人员用户授权流程</h3><pre class="line-numbers language-undefined"><code class="language-undefined">1.权限2.对谁操作3.你从哪来4.密码要求<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-4-提示：8-0在grant命令添加新特性"><a href="#2-1-4-提示：8-0在grant命令添加新特性" class="headerlink" title="2.1.4 提示：8.0在grant命令添加新特性"></a>2.1.4 提示：8.0在grant命令添加新特性</h3><pre class="line-numbers language-undefined"><code class="language-undefined">建用户和授权分开了grant 不再支持自动创建用户了，不支持改密码授权之前，必须要提前创建用户。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-1-5-查看授权"><a href="#2-1-5-查看授权" class="headerlink" title="2.1.5 查看授权"></a>2.1.5 查看授权</h3><pre class="line-numbers language-css"><code class="language-css">mysql> show grants for app@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-6-回收权限"><a href="#2-1-6-回收权限" class="headerlink" title="2.1.6 回收权限"></a>2.1.6 回收权限</h3><pre class="line-numbers language-csharp"><code class="language-csharp">revoke  delete on app<span class="token punctuation">.</span><span class="token operator">*</span>  <span class="token keyword">from</span> app<span class="token string">@'10.0.0.%'</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-7-本地管理员用户密码忘记"><a href="#2-1-7-本地管理员用户密码忘记" class="headerlink" title="2.1.7 本地管理员用户密码忘记."></a>2.1.7 本地管理员用户密码忘记.</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># mysqld_safe <span class="token operator">--</span>skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables <span class="token operator">--</span>skip<span class="token operator">-</span>networking <span class="token operator">&amp;</span>mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>mysql<span class="token operator">></span>  alter user root<span class="token string">@'localhost'</span> identified by <span class="token string">'123456'</span><span class="token punctuation">;</span><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># pkill mysqld<span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># systemctl start  mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-连接管理"><a href="#2-2-连接管理" class="headerlink" title="2.2 连接管理"></a>2.2 连接管理</h2><h3 id="2-2-1-自带客户端命令"><a href="#2-2-1-自带客户端命令" class="headerlink" title="2.2.1 自带客户端命令"></a>2.2.1 自带客户端命令</h3><p>mysql  常用参数：</p><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">-</span>u                   用户<span class="token operator">-</span>p                   密码<span class="token operator">-</span>h                   <span class="token constant">IP</span><span class="token operator">-</span><span class="token constant">P</span>                   端口<span class="token operator">-</span><span class="token constant">S</span>                   socket文件<span class="token operator">-</span>e                   免交互执行命令<span class="token operator">&lt;</span>                    导入<span class="token constant">SQL</span>脚本<span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -h 10.0.0.51 -P3306</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span>mysql<span class="token operator">></span> select <span class="token variable">@@socket</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token variable">@@socket</span>        <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">|</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -S /tmp/mysql.sock</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -e "select user,host from mysql.user;"</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> user          <span class="token operator">|</span> host      <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> abc          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> app          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> root          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> mysql<span class="token punctuation">.</span>session <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">|</span> mysql<span class="token punctuation">.</span>sys    <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">|</span> root          <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p &lt;world.sql</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-多种启动方式介绍"><a href="#2-3-多种启动方式介绍" class="headerlink" title="2.3 多种启动方式介绍"></a>2.3 多种启动方式介绍</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-54becae60bf4ca48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/860/format/webp" alt="img"></p><p>image</p><p>提示：</p><pre class="line-numbers language-undefined"><code class="language-undefined">以上多种方式，都可以单独启动MySQL服务mysqld_safe和mysqld一般是在临时维护时使用。另外，从Centos 7系统开始，支持systemd直接调用mysqld的方式进行启动数据库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-4-初始化配置"><a href="#2-4-初始化配置" class="headerlink" title="2.4 初始化配置"></a>2.4 初始化配置</h2><h3 id="2-4-0-作用"><a href="#2-4-0-作用" class="headerlink" title="2.4.0 作用"></a>2.4.0 作用</h3><pre class="line-numbers language-undefined"><code class="language-undefined">控制MySQL的启动影响到客户端的连接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-4-1-初始化配置的方法"><a href="#2-4-1-初始化配置的方法" class="headerlink" title="2.4.1 初始化配置的方法"></a>2.4.1 初始化配置的方法</h3><pre class="line-numbers language-undefined"><code class="language-undefined">预编译**配置文件(所有启动方式)**命令行参数 (仅限于 mysqld_safe mysqld)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4-2-初始配置文件"><a href="#2-4-2-初始配置文件" class="headerlink" title="2.4.2 初始配置文件"></a>2.4.2 初始配置文件</h3><p>初始化配置文件的默认读取路径</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@db01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqld --help --verbose |grep my.cnf</span>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf注:默认情况下，MySQL启动时，会依次读取以上配置文件，如果有重复选项，会以最后一个文件设置的为准。但是，如果启动时加入了--defaults-file<span class="token operator">=</span>xxxx时，以上的所有文件都不会读取.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置文件的书写方式:</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>标签<span class="token punctuation">]</span>配置项<span class="token operator">=</span>xxxx标签类型：服务端、客户端服务器端标签：<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span><span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span><span class="token punctuation">[</span>server<span class="token punctuation">]</span>客户端标签：<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span><span class="token punctuation">[</span>mysqldump<span class="token punctuation">]</span><span class="token punctuation">[</span>client<span class="token punctuation">]</span>配置文件的示例展示：<span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># cat <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysqlsocket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockserver_id<span class="token operator">=</span><span class="token number">6</span>port<span class="token operator">=</span><span class="token number">3306</span>log_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql<span class="token operator">/</span>mysql<span class="token punctuation">.</span>log<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockprompt<span class="token operator">=</span>Master <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5-多实例的应用"><a href="#2-5-多实例的应用" class="headerlink" title="2.5 多实例的应用"></a>2.5 多实例的应用</h2><h3 id="2-5-1-准备多个目录"><a href="#2-5-1-准备多个目录" class="headerlink" title="2.5.1 准备多个目录"></a>2.5.1 准备多个目录</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">330</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token keyword">data</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-2-准备配置文件"><a href="#2-5-2-准备配置文件" class="headerlink" title="2.5.2 准备配置文件"></a>2.5.2 准备配置文件</h3><pre class="line-numbers language-jsx"><code class="language-jsx">cat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3307/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3307</span>server_id<span class="token operator">=</span><span class="token number">7</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOFcat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3308/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3308</span>server_id<span class="token operator">=</span><span class="token number">8</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOFcat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3309/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3309</span>server_id<span class="token operator">=</span><span class="token number">9</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-3-初始化三套数据"><a href="#2-5-3-初始化三套数据" class="headerlink" title="2.5.3 初始化三套数据"></a>2.5.3 初始化三套数据</h3><pre class="line-numbers language-jsx"><code class="language-jsx">mv <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf<span class="token punctuation">.</span>bakmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-4-systemd管理多实例"><a href="#2-5-4-systemd管理多实例" class="headerlink" title="2.5.4 systemd管理多实例"></a>2.5.4 systemd管理多实例</h3><pre class="line-numbers language-ruby"><code class="language-ruby">cd <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>systemcp mysqld<span class="token punctuation">.</span>service mysqld3307<span class="token punctuation">.</span>servicecp mysqld<span class="token punctuation">.</span>service mysqld3308<span class="token punctuation">.</span>servicecp mysqld<span class="token punctuation">.</span>service mysqld3309<span class="token punctuation">.</span>servicevim mysqld3307<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnfvim mysqld3308<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnfvim mysqld3309<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-5-授权"><a href="#2-5-5-授权" class="headerlink" title="2.5.5 授权"></a>2.5.5 授权</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-6-启动"><a href="#2-5-6-启动" class="headerlink" title="2.5.6 启动"></a>2.5.6 启动</h3><pre class="line-numbers language-css"><code class="language-css">systemctl start mysqld<span class="token number">3307.</span>servicesystemctl start mysqld<span class="token number">3308.</span>servicesystemctl start mysqld<span class="token number">3309.</span>service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-5-7-验证多实例"><a href="#2-5-7-验证多实例" class="headerlink" title="2.5.7 验证多实例"></a>2.5.7 验证多实例</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">netstat <span class="token operator">-</span>lnp|grep <span class="token number">330</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-mysql8-0特性"><a href="#3-mysql8-0特性" class="headerlink" title="3.mysql8.0特性"></a>3.mysql8.0特性</h1><h2 id="1-增加用户"><a href="#1-增加用户" class="headerlink" title="1-增加用户"></a>1-增加用户</h2><pre class="line-numbers language-css"><code class="language-css"> 增加mysql> create user IF NOT EXISTS oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>彩蛋： <span class="token number">8.0</span> + 版本新特性：    <span class="token number">1.</span> 必须先建用户，再授权。    以下命令不再被支持：    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>    正确方法：     create user zabbix@<span class="token string">'%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span><span class="token punctuation">;</span>    <span class="token number">2.</span> <span class="token number">8.0</span>+ 版本，采用了全新的密码加密插件（caching_sha<span class="token number">2</span>_password）    部分场景下，需要将加密插件替换为<span class="token number">5.7</span>版本支持 mysql_native_password    例如：     主从    MHA    客户端软件    配置方法：     create user zabbix@<span class="token string">'%'</span> identified  by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span><span class="token punctuation">;</span>    替换为<span class="token punctuation">:</span>     create user zabbix<span class="token number">2</span>@<span class="token string">'%'</span> identified  with mysql_native_password   by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix<span class="token number">2</span>@<span class="token string">'%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>##2- 修改密码 </p><pre class="line-numbers language-powershell"><code class="language-powershell">alter user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 8.0 修改密码插件</span>    alter user zabbix@<span class="token string">'%'</span>  identified with mysql_native_password  by <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 用户锁定 </span>    ACCOUNT LOCK    ACCOUNT UNLOCK        mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT LOCK<span class="token punctuation">;</span>    mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT UNLOCK<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 密码过期 （了解）</span>    alter user oldboy@<span class="token string">'10.0.0.%'</span> PASSWORD EXPIRE<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 删除 </span>    mysql> drop user test@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-权限的定义"><a href="#3-权限的定义" class="headerlink" title="3-权限的定义"></a>3-权限的定义</h2><pre><code>MySQL : 8.0 以前，以命令为授权粒度。8.0 以后，加入了role（角色）方式授权。通过以下命令，可以查看可授权的列表mysql&gt; show privileges;8.0 中角色(role)功能    # 创建角色： CREATE ROLE &#39;app_developer&#39;, &#39;app_read&#39;, &#39;app_write&#39;;    # 角色授权：GRANT ALL ON app_db.* TO &#39;app_developer&#39;;GRANT SELECT ON app_db.* TO &#39;app_read&#39;;GRANT INSERT, UPDATE, DELETE ON app_db.* TO &#39;app_write&#39;;    # 创建用户： CREATE USER &#39;dev1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dev1pass&#39;;CREATE USER &#39;read_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user1pass&#39;;CREATE USER &#39;read_user2&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user2pass&#39;;CREATE USER &#39;rw_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;rw_user1pass&#39;;    # 授权用户角色GRANT &#39;app_developer&#39; TO &#39;dev1&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39; TO &#39;read_user1&#39;@&#39;localhost&#39;, &#39;read_user2&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39;, &#39;app_write&#39; TO &#39;rw_user1&#39;@&#39;localhost&#39;;    </code></pre><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><pre><code>day02-老男孩教育-MySQL中级DBA课程-15K+第二章体系结构及基础管理（下）1. MySQL 逻辑结构（抽象）1.1 MySQL逻辑结构和Linux对比MySQL        Linux库           目录表           文件Linux 中一切皆文件。Linux中一切皆命令。MySQL 中一切皆表。一切皆SQL。1.2 MySQL 逻辑对象的特点库 ： 库名 + 库属性表 ： 列(字段：列名，列属性) + 行（记录）+ 表属性2. 物理结构    2.1  宏观    2.1.1 库     2.1.2 表 略 。 见图片。2.2  微观扇区、OS block、PAGE、extents 设计理念，都是为了能够程序  -----&gt; OS -----&gt; HDISK 从逻辑操作，到物理操作都能够保证尽可能“连续”IO。段 ： segments , 一个表就是一个段，由1-N个区构成。区 ： extents,  又被称之为“簇”，由64个连续的PAGE构成。默认大小1M。页 :  PAGE，MySQL 最小IO单元，默认大小 16KB，连续的4个OS block。OS block : 文件系统块，默认是4KB，连续的8个扇区。扇区     ： 默认512字节，连续的512字节长度的磁盘区域。3. MySQL基础管理   3.1 用户管理   3.1.1 作用# Linux 用户的作用？ 登录 管理对象（文件）# MySQL 用户作用？登录 管理对象（库、表）3.1.2 用户的定义？# Linux字符串表示用户名 oldguo oldboy# MySQL 用户名@&#39;白名单&#39;oldboy@&#39;白名单&#39;白名单？允许登录数据库的主机名单例子：     常用的： oldboy@&#39;localhost&#39;  -- 只允许本机oldboy登录oldboy@&#39;10.0.0.%&#39;   -- 允许10.0.0.0/24网段，以oldboy用户登录数据库oldboy@&#39;10.0.0.5%&#39;  -- 允许50-59段的地址，以oldboy用户登录数据库oldboy@&#39;10.0.0.0/255.255.254.0&#39; -- 允许10.0.0.0/23网段，以oldboy用户登录数据库    不常用：oldboy@&#39;%&#39;          -- 允许所有网络地址，以oldboy用户登录数据库oldboy@&#39;db02&#39;oldboy@&#39;oldboy.com&#39;3.1.3 用户管理  # 查询 mysql&gt; select user,host ,authentication_string ,plugin from mysql.user;+---------------+-----------+-------------------------------------------+-----------------------+| user          | host      | authentication_string                     | plugin                |+---------------+-----------+-------------------------------------------+-----------------------+| root          | localhost | *23AE809DDACAF96AF0FD78ED04B6A265E05AA257 | mysql_native_password || mysql.session | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password || mysql.sys     | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |+---------------+-----------+-------------------------------------------+-----------------------+mysql&gt; desc mysql.user;    -- 查询表定义# 增加mysql&gt; create user IF NOT EXISTS oldboy@&#39;10.0.0.%&#39; identified by &#39;123&#39;;彩蛋： 8.0 + 版本新特性：    1. 必须先建用户，再授权。    以下命令不再被支持：    grant all on *.* to zabbix@&#39;%&#39; identified by &#39;123&#39;;    正确方法：     create user zabbix@&#39;%&#39; identified by &#39;123&#39;;    grant all on *.* to zabbix@&#39;%&#39;;    2. 8.0+ 版本，采用了全新的密码加密插件（caching_sha2_password）    部分场景下，需要将加密插件替换为5.7版本支持 mysql_native_password    例如：     主从    MHA    客户端软件    配置方法：     create user zabbix@&#39;%&#39; identified  by &#39;123&#39;;    grant all on *.* to zabbix@&#39;%&#39;;    替换为:     create user zabbix2@&#39;%&#39; identified  with mysql_native_password   by &#39;123&#39;;    grant all on *.* to zabbix2@&#39;%&#39;;# 修改     ## 修改密码      alter user oldboy@&#39;10.0.0.%&#39; identified by &#39;123456&#39;;    ## 8.0 修改密码插件    alter user zabbix@&#39;%&#39;  identified with mysql_native_password  by &#39;123456&#39;;    ## 用户锁定     ACCOUNT LOCK    ACCOUNT UNLOCK        mysql&gt; alter user test@&#39;10.0.0.%&#39; ACCOUNT LOCK;    mysql&gt; alter user test@&#39;10.0.0.%&#39; ACCOUNT UNLOCK;    ## 密码过期 （了解）    alter user oldboy@&#39;10.0.0.%&#39; PASSWORD EXPIRE;# 删除     mysql&gt; drop user test@&#39;10.0.0.%&#39;;3.2 权限 3.2.1 作用 #  Linux 中的作用 ？ 约束、控制 用户能够对 Linux 文件 做什么样的操作。权限属于文件的属性。# MySQL 中的作用约束、控制用户能够对 MySQL 中的对象（库、表）做什么样的操作。权限属于用户的属性。3.2.2 权限的定义？ #  Linux ：R 、W 、X4   2   1#  MySQL : 8.0 以前，以命令为授权粒度。8.0 以后，加入了role（角色）方式授权。通过以下命令，可以查看可授权的列表mysql&gt; show privileges;比较特殊的权限： ALL,包含了权限列表中，所有的权限，除了Grant optiongrant all privileges  on  .....3.2.3 权限管理 #  授权  ##  例子1：超级管理员用户（oldguo@&#39;10.0.0.%&#39;）授权   ## 5.7    mysql&gt; grant  all   on   *.*   to   oldguo@&#39;10.0.0.%&#39;   identified by &#39;123&#39;    with grant option;   grant  权限     on  权限范围  to  用户  identified by 密码  ;权限范围? 指的是，用户能够操作的对象是哪些。*.*          ====&gt;      chmod -R 777  /            全库级别，管理员用户oldboy.*     ====&gt;      chmod -R 777 /oldboy/*     单库级别，普通用户oldboy.t1    ====&gt;      chmod -R 777 /oldboy/t1##   例子2： 授权一个普通用户 test@&#39;10.0.0.%&#39; ,权限为 select 、update、delete、insert，范围：test.*mysql&gt; grant select,update,delete,insert on test.*  to test@&#39;10.0.0.%&#39; identified by &#39;123&#39;;# 查看授权 mysql&gt; show grants for test@&#39;10.0.0.%&#39;;# 回收权限注意： MySQL中不能重复授权，达到修改权限的目录。是相加关系。mysql&gt; revoke delete on test.* from &#39;test&#39;@&#39;10.0.0.%&#39; ;mysql&gt; show grants for test@&#39;10.0.0.%&#39;;扩展： 权限列表介绍------------------------+---------------------------------------+-------------------------------------------------------+| Privilege               | Context                               | Comment                                               |+-------------------------+---------------------------------------+---------------------------------------| Alter                   | Tables                                | To alter the table                                    || Alter routine           | Functions,Procedures                  | To alter or drop stored functions/procedures          || Create                  | Databases,Tables,Indexes              | To create new databases and tables                    || Create routine          | Databases                             | To use CREATE FUNCTION/PROCEDURE                      || Create temporary tables | Databases                             | To use CREATE TEMPORARY TABLE                         || Create view             | Tables                                | To create new views                                   || Create user             | Server Admin                          | To create new users                                   || Delete                  | Tables                                | To delete existing rows                               || Drop                    | Databases,Tables                      | To drop databases, tables, and views                  || Event                   | Server Admin                          | To create, alter, drop and execute events             || Execute                 | Functions,Procedures                  | To execute stored routines                            || File                    | File access on server                 | To read and write files on the server                 || Grant option            | Databases,Tables,Functions,Procedures | To give to other users those privileges you possess   || Index                   | Tables                                | To create or drop indexes                             || Insert                  | Tables                                | To insert data into tables                            || Lock tables             | Databases                             | To use LOCK TABLES (together with SELECT privilege)   || Process                 | Server Admin                          | To view the plain text of currently executing queries || Proxy                   | Server Admin                          | To make proxy user possible                           || References              | Databases,Tables                      | To have references on tables                          || Reload                  | Server Admin                          | To reload or refresh tables, logs and privileges      || Replication client      | Server Admin                          | To ask where the slave or master servers are          || Replication slave       | Server Admin                          | To read binary log events from the master             || Select                  | Tables                                | To retrieve rows from table                           || Show databases          | Server Admin                          | To see all databases with SHOW DATABASES              || Show view               | Tables                                | To see views with SHOW CREATE VIEW                    || Shutdown                | Server Admin                          | To shut down the server                               || Super                   | Server Admin                          | To use KILL thread, SET GLOBAL, CHANGE MASTER, etc.   || Trigger                 | Tables                                | To use triggers                                       || Create tablespace       | Server Admin                          | To create/alter/drop tablespaces  彩蛋：      8.0 中角色(role)功能    # 创建角色： CREATE ROLE &#39;app_developer&#39;, &#39;app_read&#39;, &#39;app_write&#39;;    # 角色授权：GRANT ALL ON app_db.* TO &#39;app_developer&#39;;GRANT SELECT ON app_db.* TO &#39;app_read&#39;;GRANT INSERT, UPDATE, DELETE ON app_db.* TO &#39;app_write&#39;;    # 创建用户： CREATE USER &#39;dev1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dev1pass&#39;;CREATE USER &#39;read_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user1pass&#39;;CREATE USER &#39;read_user2&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user2pass&#39;;CREATE USER &#39;rw_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;rw_user1pass&#39;;    # 授权用户角色GRANT &#39;app_developer&#39; TO &#39;dev1&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39; TO &#39;read_user1&#39;@&#39;localhost&#39;, &#39;read_user2&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39;, &#39;app_write&#39; TO &#39;rw_user1&#39;@&#39;localhost&#39;;    3.3 连接管理 3.3.1 自带的客户端程序连接# mysql      ## 参数 ： -u  -p -S -h -P -e &lt;  ### 本地连接（socket文件）前提：提前创建可以本地连接的用户，例如 :  test@&#39;localhost&#39;mysql&gt; grant all on *.* to test@&#39;localhost&#39; identified by &#39;123&#39;;[root@db01 data]# mysql     -utest      -p123     -S /tmp/mysql.sock说明:  什么情况下可以不加-S 参数？    1. 配置文件中 [mysql] 或者 [client]下已经制定socket正确位置。    2. 二进制版本的软件，如果服务器启动时，将socket存放到了/tmp/mysql.sock。### 远程登录 前提：提前创建能够用做远程登录的用户，例如：test1@&#39;10.0.0.%&#39;mysql&gt; grant all on *.* to test1@&#39;10.0.0.%&#39; identified by &#39;123&#39;;[root@db02 ~]# mysql -utest1 -p123     -h 10.0.0.51        -P 3306 ### -e  免交互执行MySQL 内置命令 [root@db01 tmp]# mysql -uroot -p123 -e &quot;select user,host from mysql.user;&quot; 2&gt;/dev/null### &lt;  导入SQL脚本[root@db01 ~]# mysql -uroot -p123 &lt; world.sql ## 内置功能help           :  获取客户端命令帮助\c (Ctrl+C)    :  结束上条命令运行Ctrl+l         :  清理屏幕Ctrl+d（\q）   :  退出会话\G             ： 格式化输出source         :  导入SQL脚本system         :  MySQL中调用操作系统命令use            ： 进入某个库# mysqladmin # mysqldump（备份章节） 3.3.2  开发工具# sqlyog # navicat# workbench </code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/22/hello-world/"/>
      <url>/2020/04/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>01-mysql光速入门</title>
      <link href="/2020/02/28/01mysql-guang-su-ru-men-pian/"/>
      <url>/2020/02/28/01mysql-guang-su-ru-men-pian/</url>
      
        <content type="html"><![CDATA[<h2 id="必会单词"><a href="#必会单词" class="headerlink" title="必会单词"></a>必会单词</h2><ol><li><code>create</code> 创建</li><li><code>insert</code> 插入</li><li><code>primary key</code> 主键</li><li><code>alter</code> 修改</li><li><code>change</code> 改变/修改</li><li><code>rename</code> 重命名</li><li><code>modify</code> 修改</li><li><code>character</code> 字符</li><li><code>engine</code> 引擎</li><li><code>table</code> 数据表</li><li><code>database</code> 数据库</li><li><code>foreign key</code> 外键</li><li><code>update</code> 更新</li><li><code>delete</code> 删除</li><li><code>drop</code> 扔掉/删除</li><li><code>show</code> 展示</li><li><code>unique</code> 唯一</li></ol><h2 id="数据库四门基本功课-增删改查"><a href="#数据库四门基本功课-增删改查" class="headerlink" title="数据库四门基本功课:增删改查"></a>数据库四门基本功课:<code>增删改查</code></h2><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><h3 id="创建数据库的语法"><a href="#创建数据库的语法" class="headerlink" title="创建数据库的语法"></a>创建数据库的语法</h3><pre><code>create database db_name character set character_name复制代码</code></pre><ul><li><code>db_name</code> :表示所要创建的数据库的名称。</li><li><code>character_name</code> :表示数据库的字符集。</li></ul><blockquote><p>『示例』创建一个名为 bookshop 的数据库,并设置其字符集为gbk。</p></blockquote><pre><code>create database bookshop character set gbk;复制代码</code></pre><p>结果:</p><pre><code>mysql&gt; create database bookshop character set gbk;query ok, 1 row affected (0.00 sec)复制代码</code></pre><h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p>成功创建数据库后,可以使 用<code>show</code>命令查看 mysql 服务器中的所有数据库信息</p><pre><code>show  databases;复制代码</code></pre><blockquote><p>『示例』show命令査看 mysql 服务器中的所有数据库</p></blockquote><pre><code>mysql&gt; show databases;+--------------------+| Database           |+--------------------+| information_schema || bookshop           || mysql              || performance_schema || sys                |+--------------------+5 rows in set (0.00 sec)复制代码</code></pre><h3 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h3><p>虽然成功创建了数据库,但并不表示当前就在操作操作库  <code>bookshop</code> 。可以使用 <code>use</code> 语句选择一个数据库。</p><pre><code>use db_name;复制代码</code></pre><p>例如,选择名称为  <code>bookshop</code> 的数据库,设置其为当前默认的数据库,命令执行结果如下所示</p><pre><code>mysql&gt; use bookshop;Database changed复制代码</code></pre><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><p>数据库创建后,如果需要修改数据库的参数,可以使用 <code>alter database</code> 命令。语法如下:</p><pre><code>alter database db_name character set character_name;复制代码</code></pre><blockquote><p>『示例』将数据库 bookshop所用的字符集修改成 gb2312。</p></blockquote><pre><code>alter database bookshop character set gb2312;复制代码</code></pre><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>删除数据库的操作可以使用  <code>drop database</code> 语句,语法如下:</p><pre><code>drop database db_name;复制代码</code></pre><p>例如,通过 drop database 语句删除名称为 bookshop 的数据库,如下所示。</p><pre><code>mysql&gt; drop database bookshop;query ok, 0 rows affected (0.03 sec)复制代码</code></pre><h2 id="数据库存储引擎"><a href="#数据库存储引擎" class="headerlink" title="数据库存储引擎"></a>数据库存储引擎</h2><ul><li>数据库存储引擎是数据库底层软件组件,数据库管理系统( <code>dbms</code> ) 使用数据引擎进行创建、查询、更新和删除数据 操作。</li><li>目前, mysql的存储引擎至少10种,使用 mysql命令“ <code>show engines;</code> ” 即可查看mysql服务实例支持的存储引擎。</li></ul><p>如下所示。</p><p>![111.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="261"/>)</p><h3 id="innodb存储引擎"><a href="#innodb存储引擎" class="headerlink" title="innodb存储引擎"></a>innodb存储引擎</h3><ul><li>支持自动增长列。</li><li>支持外键完整性约束。</li><li>存储格式</li></ul><h3 id="myisam存储引擎"><a href="#myisam存储引擎" class="headerlink" title="myisam存储引擎"></a>myisam存储引擎</h3><ul><li>myisam存储引擎的文件类型有三个。<ul><li>.frm 文件存储表定义。</li><li>数据文件的扩展名为 .myd (mydata)。</li><li>索引文件的扩展名是 .myi (myindex)。</li></ul></li><li>基于 myisam 存储引擎的表支持3种不同的存储格式, 分别是<ul><li>静态型</li><li>动态型</li><li>压缩型</li></ul></li></ul><h3 id="memory存储引擎"><a href="#memory存储引擎" class="headerlink" title="memory存储引擎"></a>memory存储引擎</h3><ul><li>memory表的大小是受到限制的。</li><li>memory不支持varchar、blob、和text数据类型,因为这种表类型按固定长度的记录格式存储</li></ul><h2 id="如何选择存储引擎"><a href="#如何选择存储引擎" class="headerlink" title="如何选择存储引擎"></a>如何选择存储引擎</h2><p>![1553474200843.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="542"/>)</p><h2 id="掌握数据表的基础知识"><a href="#掌握数据表的基础知识" class="headerlink" title="掌握数据表的基础知识"></a>掌握数据表的基础知识</h2><h3 id="表的定义"><a href="#表的定义" class="headerlink" title="表的定义"></a>表的定义</h3><ul><li>表是包含数据库中所有数据的数据库对象。</li><li>在表中,数据成二维行列格式,每一行代表一个唯一的记录,每一列代表一个域。</li></ul><p>![1553474228031.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="437"/>)</p><h3 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h3><p>列名是用来访问表中具体域的标识符,列名必须遵循下列规则:</p><ul><li>列名是可以含有从1到128的asc码字符,它的组成包括字母、下划线、符号以及数字</li><li>不要给列名命名为与sql关键字相同的名字,比如 select, in, desc等。</li><li>列名应该反映数据的属性。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><ul><li><p>整数数据类型</p><ul><li><p>整数数据类型包括 </p><pre><code>bigint</code></pre><p>、</p><pre><code>int</code></pre><p>、 </p><pre><code>mediumint</code></pre><p>、 </p><pre><code>smallint</code></pre><p>和 </p><pre><code>tinyint</code></pre><p>![1553474246891.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="482"/>)</p></li></ul></li><li><p>小数数据类型</p><ul><li>小数数据类型包括 <code>decimal</code>、 <code>numeric</code>两类。从功能上说两者完全等价,两者的唯一区别在于 decimal不能用于带有 <code>indentity</code> 关键字的列</li><li>声明小数型数据的格式是 numeric | decimal(p[,s]),其中p 为精度,s为小数位数,s的默认值为0</li></ul></li><li><p>浮点数据类型</p><ul><li>浮点型也称近似类型。这种类型不能提供精确表示数据的精度,使用这种类型来存储某些数值时,有可能会损失些精度。</li></ul></li></ul><p>![1553474289406.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="252"/>)</p><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><p>常用的字符串类型主要包括<code>char</code>、 <code>varchar</code>、 <code>binary</code>、 <code>varbinary</code> 等类型。</p><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e70c3363ff57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="1553474306952.png"></p><h3 id="日期时间类型"><a href="#日期时间类型" class="headerlink" title="日期时间类型"></a>日期时间类型</h3><p>在 mysql中,日期时间类型包括 <code>datetime</code>、<code>time</code>、<code>timestamp</code>、<code>date</code>等。</p><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e70c3529e2dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="1553474417005.png"></p><ul><li>enum类型和set类型<ul><li>所谓枚举类型enum,就是指定数据只能取指定范围内的值。</li><li>对于可以选取多个值的字段,可以选择set类型,例如,“爱好”字段就可以选择set类型,因为可能有多种爱好</li></ul></li><li>text类型和blob类型<ul><li>text类型存储只能存储字符数据。而blob类型可以用于存储二进制数据。</li><li>text类型包括 tinytext、text、 mediumtext和 longtext</li></ul></li><li>长度<ul><li>给列定义的大小部分指的是该列能接受多少个字符,比如char允许用户只输入一个字符,而另一些则不允许这些做,所以建议使列值尽可能小,显示列越小,表所占的空间也就越少。</li><li>但是还有一个问题就是如果减少列的大小, mysql将用截断数据以满足新的大小尺寸,所以很可能丢失有价值的信 息数据。</li></ul></li></ul><h2 id="管理网上书城系统数据库"><a href="#管理网上书城系统数据库" class="headerlink" title="管理网上书城系统数据库"></a>管理网上书城系统数据库</h2><h3 id="表的设计步骤"><a href="#表的设计步骤" class="headerlink" title="表的设计步骤"></a>表的设计步骤</h3><ol><li>表的命名方式。</li><li>表中每一列的名称、数据类型及其长度。</li><li>表中的列是否允许空值, 是否唯一, 是否要进行默认设置或添加用户定义约束。</li><li>表间的关系, 即确定哪些列是主键, 哪些是外键</li></ol><h3 id="使用sql语句创建数据表"><a href="#使用sql语句创建数据表" class="headerlink" title="使用sql语句创建数据表"></a>使用sql语句创建数据表</h3><p>语法</p><pre><code>create table tb_name(    column name1 datatype[列级别约束条件],    column name2 datatype[列级别约束条件]    ...    [表级别约束条件]);复制代码</code></pre><p>创建如下数据表的话</p><p>![1553475040319.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="1240" height="659"/>)</p><p>实际代码</p><pre><code>create table customers(    cid char(6) not null primary key,    ctruename varchar(50),    cpassword varchar (50),    csex char (2),    caddress varchar(50),    cmobile varchar(11),    cemail varchar(50),    cregisterdate datetime)engine=innodb;复制代码</code></pre><h1 id="数据完整性约束"><a href="#数据完整性约束" class="headerlink" title="数据完整性约束"></a>数据完整性约束</h1><h2 id="数据完整性概述"><a href="#数据完整性概述" class="headerlink" title="数据完整性概述"></a>数据完整性概述</h2><h3 id="什么是数据完整性"><a href="#什么是数据完整性" class="headerlink" title="什么是数据完整性?"></a>什么是数据完整性?</h3><blockquote><p>存在你数据库里的数据, 就要符合你数据库的<code>规矩</code></p></blockquote><p>在 mysql中可以通过 primary key约束、foreign key约束、 unique、空值约束和默认值约束等来实施数据完整性</p><ul><li>实体完整性(每行数据都不一样)</li><li>域完整性(数据大小在字段允许的范围内)</li><li>引用完整性约束(外键和对应主键的值要一致)</li><li>自定义完整性(自己定义的一些规则)</li></ul><h2 id="主健约束"><a href="#主健约束" class="headerlink" title="主健约束"></a>主健约束</h2><p>主键(<code>primary key</code>)约束是使用最为频繁的约束 它的作用是<code>唯一标记一条数据</code></p><p>所以:</p><ol><li>主键不能为null</li><li>主键不能重复</li><li>用过的主键, 即便删除来这条记录, 最好也不要再用</li><li>主键不能修改</li></ol><p>总结起来就是<code>四不</code></p><blockquote><p>不为空, 不相同, 不重用, 不改动</p></blockquote><h3 id="单字段主键"><a href="#单字段主键" class="headerlink" title="单字段主键"></a>单字段主键</h3><blockquote><p>『示例』顾客信息表 customers中需要以“顾客编号”作为顾客的唯一标识,在创建数据表 customers时,为cid列设置primary key约束,由于单列组成主键,故该主键可以定义为列级主键。</p></blockquote><pre><code>create table customers(    cid char(6) not null primary key,    ctruename varchar (30) not null,    cpassword varchar (30) not null,    csex char(2)not null,    caddress varchar (50) null,    cmobile varchar (11) not null,    cemail varchar(50) null,    cregisterdate datetime not null);复制代码</code></pre><h3 id="多字段主键"><a href="#多字段主键" class="headerlink" title="多字段主键"></a>多字段主键</h3><blockquote><p>『示例』如果在订单详情表中不设置编号,则可以将表中“订单编号 + 商品编号”作为订单详情的唯一标识,在创建数据表 orderdetails时, 为oid和gid的组合设置 primary key约束。</p></blockquote><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e70c395b0a03?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="1553476242358.png"></p><pre><code>create table orderdetails(    oid char(14) not null,    gid char(6) not null,    odprice float not null,    odnumber int not null,    primary key (oid, gid));复制代码</code></pre><h3 id="外健约束"><a href="#外健约束" class="headerlink" title="外健约束"></a>外健约束</h3><p>外键( foreign key )约束标识表之间的关系,用于强制参照完整性,为表中一列或者多列数据提供参照完整性。</p><p>简单说, 外键是连接另一个表的<code>锚点</code></p><p>创建外键的基本语法如下:</p><pre><code>[constraint&lt;外键名&gt;] foreign key 列名1 [, 列名2, ...] references &lt;主键表&gt; 主键列1 [主键列2...]复制代码</code></pre><p>看着挺唬人, 其实很简单, 看个例子</p><blockquote><p>『示例』在创建数据表订单表 orders时,表中的cid(客户编号)引用了客户表 customers中的客户编号,需要建立 orders表和 customers 表之间的关系。其中cid为关联列, customers 表为主键表, orders表为外键表。</p></blockquote><p>![1553480030204.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="942" height="836"/>)</p><pre><code>create table orders(    oid char(14) not null primary key,    cid char(6) not null,    odate datetime not null,    osum float not null,    ostatus char(1) not null,    foreign key(cid) references customers(cid))engine=innodb;复制代码</code></pre><h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><p>『示例』为了保证<code>客户信息表</code>表 customers中的<code>手机号</code>不重复,在创建数据表 customers时,为 cmobile设置 unique约 束</p><p>![1553480144712.png](data:image/svg+xml;utf8,<?xml version="1.0"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="939" height="510"/>)</p><pre><code>-- 如果存在就删除, 防止重复建表而报错drop table if exists customers; create table customers(    cid char(6) not null primary key,    ctruename varchar (30) not null,    cpassword varchar (30) not null,    csex char(2)not null,    caddress varchar (50) null,    cmobile varchar (11) not null unique,    cemail varchar(50) null,    cregisterdate datetime not null);复制代码</code></pre><h3 id="默认值约束"><a href="#默认值约束" class="headerlink" title="默认值约束"></a>默认值约束</h3><p>『示例』在创建<code>客户信息</code>表 customers时,为用户性别csex 字段设置为默认值“男”。</p><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e70c5741bc11?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="1553480570751.png"></p><pre><code>create table customers(    cid char(6) not null primary key,    ctruename varchar (30) not null,    cpassword varchar (30) not null,    csex char(2)not null default &#39;男&#39;,    caddress varchar (50) null,    cmobile varchar (11) not null unique,    cemail varchar(50) null,    cregisterdate datetime not null);复制代码</code></pre><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><ul><li>非空值约束限制一列或多个列的值不能为空(null) 空表示未定义或未知的值。</li><li>在默认情况下,所有列都接受空值, 若要某列不接受空值, 则可以在该列上设置not null约束。</li><li>null值既不等价于数值型数据0, 也不等价于字符型数据中的空串, 只是表明字段值是未知的</li></ul><h1 id="使用sql语句操作数据表"><a href="#使用sql语句操作数据表" class="headerlink" title="使用sql语句操作数据表"></a>使用sql语句操作数据表</h1><h3 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h3><p>如需在表中添加列，请使用下面的语法:</p><pre><code>alter table table_name add column_name datatype;复制代码</code></pre><blockquote><p>『示例』在客户表中新增一个客户昵称字段, 变长11位</p></blockquote><pre><code>alter table customers add cnickname varchar(11);复制代码</code></pre><p>如需删除表中的列，请使用下面的语法（请注意，某些数据库系统不允许这种在数据库表中删除列的方式）：</p><pre><code>alter table table_name drop column column_name复制代码</code></pre><blockquote><p>『示例』删除用户昵称字段</p></blockquote><pre><code>alter table customers drop cnickname复制代码</code></pre><p>要改变表中列的数据类型，请使用下面的语法：</p><pre><code>alter table table_name modify column column_name datatype复制代码</code></pre><blockquote><p>『示例』假设已经在数据库 bookshop中创建了表customers。要把字段 csex 的数据类型改为int类型。</p></blockquote><pre><code>use bookshop;alter table customers modify csex int not null;复制代码</code></pre><blockquote><p>『示例』假设已经在数据库 bookshop中创建了表 customers。添加一个新的字段 state,类型为cha(1),不允许为空,将字段 address列删除。</p></blockquote><pre><code>use bookshop;alter table customers add state char() not null, drop column address复制代码</code></pre><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><p>用  <code>rename table</code> 语句来更改表的名字。其语法形式如下</p><pre><code>rename table tb_name to new_tb_name复制代码</code></pre><blockquote><p>『示例』假设数据库 bookshop 中存在 customers 表,将 customers 表重命名为 customers2 表。</p></blockquote><pre><code>use bookshop;rename table customers to customers2;复制代码</code></pre><h3 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h3><p>删除表是指删除数据库中已存在的表。在 mysql 中通过  drop table 语句来删除表。语法如下:</p><pre><code>drop table tb_name;复制代码</code></pre><blockquote><p>『示例』假设存在 customers,删除 bookshop数据库中 customers 数据表。</p></blockquote><pre><code>use bookshop;drop table customers;复制代码</code></pre><h1 id="管理数据表数据"><a href="#管理数据表数据" class="headerlink" title="管理数据表数据"></a>管理数据表数据</h1><h2 id="插入记录"><a href="#插入记录" class="headerlink" title="插入记录"></a>插入记录</h2><ol><li><h5 id="为表的所有字段插入数据"><a href="#为表的所有字段插入数据" class="headerlink" title="为表的所有字段插入数据"></a>为表的所有字段插入数据</h5><p>使用基本的 insert语句插入数据要求指定表名称和插入到新记录中的值。基本语法格式为</p><pre><code>insert into tb_name (col_list) values (val_list);insert into tb_name values (val_list);复制代码</code></pre><blockquote><p>『示例』向 bookshop数据库的表 customers插入如下的数据。</p></blockquote></li></ol><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e70c594f74b0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="1553481712468.png"></p><pre><code> ```msyql insert into customers      ( cid,         truename,         cpassword,         csex,         address,         cmobile,         cemai,         cregisterdate ) values      ( &#39;c0011&#39;,         &#39;李 平&#39;,         &#39;123456&#39;,         &#39;女&#39;,         &#39;广东中山市&#39;,         &#39;1351543876&#39;,         &#39;liping163.com&#39;,         &#39;2009-9-6&#39; );</code></pre><p>复制代码</p><pre><code>1. ##### 为表的指定字段插入数据   &gt; 『示例』新顾客信息录入,顾客信息地址 address和电子邮箱cemail尚缺,只能将该顾客的部分信息如表所示添 加到 customers表中。![1553481814639.png](data:image/svg+xml;utf8,&lt;?xml version=&quot;1.0&quot;?&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; width=&quot;842&quot; height=&quot;96&quot;&gt;&lt;/svg&gt;)</code></pre><pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">insert</span> <span class="token keyword">into</span> customers<span class="token punctuation">(</span> cid<span class="token punctuation">,</span> truename<span class="token punctuation">,</span> password<span class="token punctuation">,</span> csex<span class="token punctuation">,</span> cmobile<span class="token punctuation">,</span> cregisterdate <span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span> <span class="token number">c0012</span><span class="token punctuation">,</span> 张先明<span class="token punctuation">,</span> <span class="token number">23456</span><span class="token punctuation">,</span> 男<span class="token punctuation">,</span> <span class="token number">13513452312</span><span class="token punctuation">,</span> <span class="token number">2009</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">6</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>复制代码</p><pre><code>1. ##### 同时插入多条记录   &gt; 『示例』如果想一次性插入多条, 可以这样...</code></pre><p>   use bookshop;<br>   insert into customers values<br>       (<br>          ‘c0013’,<br>          ‘韩志国’,<br>          ‘123456’,<br>          ‘男’,<br>          null,<br>          ‘13512134256’,<br>          ‘hanzo’,<br>          ‘al63com’,<br>          ‘2010-1-16’<br>          ), (<br>          ‘c00141’,<br>          ‘张小明’,<br>          ‘123456’,<br>          ‘男’,<br>          null,<br>          ‘13613434256’,<br>          ‘zma163.com’,<br>          ‘2010-2-24’);<br>   复制代码</p><pre><code>## 修改记录### 修改表中的全部数据&gt; 『示例』修改商品信息表 goods中的数据,将全部书籍的价钱九折出售。</code></pre><p>update goods;<br>set price = price * 0.9;<br>复制代码</p><pre><code>### 根据条件修改表中的数据&gt; 『示例』修改商品信息表gods中的数据,将书籍存量小于100本的图书再增加50本。完成语句如下所示。</code></pre><p>update goods;<br>set number = number + 50 where number &lt;= 100;<br>复制代码</p><pre><code>## 删除记录### 根据条件删除表中的数据&gt; 『示例』商品编号为“010001”的商品已售完,并且以后不考虑再进货,需要在商品信息表中清除该商品的信息。完 成语句如下所示</code></pre><p>delete from goods where gid=010001;<br>复制代码</p><pre><code>### 删除表中的全部数据&gt; 『示例』删除商品信息表中的所有信息。完成语句如下所示。</code></pre><p>delete from goods;<br>复制代码</p><pre><code>### ***切记, update和delete如果没有where条件, 后果会很严重...***作者：猫哥的技术博客链接：https://juejin.im/post/5cb7eba6f265da038c020d24</code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql光速入门篇章 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-mysql光速入门篇查询</title>
      <link href="/2020/02/28/02-mysql-guang-su-ru-men-pian-cha-xun/"/>
      <url>/2020/02/28/02-mysql-guang-su-ru-men-pian-cha-xun/</url>
      
        <content type="html"><![CDATA[<h1 id="select"><a href="#select" class="headerlink" title="select"></a>select</h1><h2 id="数据表三连"><a href="#数据表三连" class="headerlink" title="数据表三连"></a>数据表<code>三连</code></h2><ul><li>查看表结构</li></ul><pre><code>desc table_name;复制代码</code></pre><ul><li>查看建表语句</li></ul><pre><code>show create table table_name;复制代码</code></pre><ul><li>查看表里的数据</li></ul><pre><code>select * from table_name;复制代码</code></pre><h2 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h2><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><ul><li><p>查询所有行和列</p><blockquote><p>select * from 表名称;</p></blockquote><pre><code>select * from book;复制代码</code></pre></li><li><p>查询部分列</p><blockquote><p>select <code>字段名称1</code>, <code>字段名称2</code> from 表名称;</p></blockquote><pre><code>select `bookid`,`bookname` from book;复制代码</code></pre></li><li><p>查询计算列</p><blockquote><p>select <code>字段名称1</code>, <code>字段名称2</code>,字段名称3 * 字段名称4 from 表名称;</p></blockquote><pre><code>select `bookid`,`bookname`,bookprice * borrowsum from book;复制代码</code></pre></li><li><p>使用别名</p><blockquote><p>select <code>字段名称1</code> as 自定义名称1, <code>字段名称2</code> as 自定义名称2, 字段名称3 * 字段名称4 as 自定义名称3 from 表名;</p></blockquote><pre><code>select `bookid` as 图书ID,`bookname` as 图书名称,bookprice * borrowsum as 图书总价 from book;复制代码</code></pre></li><li><p>消除重复行</p><blockquote><p>select distinct <code>字段名称</code> from 表名称;</p></blockquote><pre><code>select distinct `borrowsum` from book;复制代码</code></pre></li></ul><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><ul><li><p>简单条件查询</p><blockquote><p>select * from 表名称 where 条件;</p></blockquote><pre><code>select * from book where borrowsum &gt; 10;复制代码</code></pre></li><li><p>复合条件查询</p><blockquote><p>select * from book where 条件1 and 条件2;</p></blockquote><pre><code>select * from book where borrowsum &gt;= 10 and typeid =3;复制代码</code></pre></li><li><p>指定范围查询</p><blockquote><p>select * from 表名 where 条件1 and 条件2;</p></blockquote><pre><code>select * from book where borrowsum &gt;= 10 and borrowsum &lt;= 30;复制代码</code></pre><blockquote><p>select * from 表名 where 条件1 or 条件2;</p></blockquote><pre><code>select * from book where borrowsum &lt; 10 or borrowsum &gt; 30;复制代码</code></pre><blockquote><p>select * from 表名 where 字段名 between 值1 and 值2;</p></blockquote><pre><code>select * from book where borrowsum between 10 and 30;复制代码</code></pre><blockquote><p>select * from 表名 where 字段 not between 值1 and 值2;</p></blockquote><pre><code>select * from book where borrowsum not between 10 and 30;复制代码</code></pre></li><li><p>指定集合查询</p><blockquote><p>select * from 表名 where 字段 in (值1,值2);</p></blockquote><pre><code>select * from book where bookname in (&#39;离散数学&#39;,&#39;Java程序设计&#39;);复制代码</code></pre><blockquote><p>select * from 表名 where 字段 not in (值1,值2);</p></blockquote><pre><code>select * from book where bookname not in (&#39;离散数学&#39;,&#39;Java程序设计&#39;);复制代码</code></pre></li><li><p>查询值为空的行</p><blockquote><p>select * from 表名 where 字段名 is null;</p></blockquote><pre><code>select * from bookborrow where fine is null;复制代码</code></pre></li><li><p>模糊查询</p><blockquote><p>select * from 表名 where 字段名 like ‘字段值_’;</p></blockquote><pre><code>select * from book where bookname like &#39;java_&#39;;复制代码</code></pre><blockquote><p>select * from 表名 where 字段名 like ‘%字段值’;</p></blockquote><pre><code>select * from book where bookname like &#39;%java&#39;;复制代码</code></pre><blockquote><p>select * from 表名 where 字段名 like ‘%字段值%’;</p></blockquote><pre><code>select * from book where bookname like &#39;%java%&#39;;复制代码</code></pre><blockquote><p>select * from 表名 where 字段名 like ‘字段值%’;</p></blockquote><pre><code>select * from book where bookname like &#39;java%&#39;;复制代码</code></pre></li></ul><h4 id="寻找高富帅…"><a href="#寻找高富帅…" class="headerlink" title="寻找高富帅…"></a>寻找<code>高富帅</code>…</h4><p><strong>建表语句</strong></p><pre><code>drop table if exists `user`;CREATE TABLE `user` (  `user_id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;用户主键id&#39;,  `user_name` varchar(25) NOT NULL COMMENT &#39;用户姓名&#39;,  `user_sex` tinyint(1) NOT NULL COMMENT &#39;用户性别 男生1 女生2&#39;,  `user_height` int(11) NOT NULL COMMENT &#39;用户身高(cm)&#39;,  `user_weight` int(11) NOT NULL COMMENT &#39;用户体重(kg)&#39;,  `user_account` double(20,0) NOT NULL COMMENT &#39;用户账户(精确到分)&#39;,  `user_appearance` tinyint(2) NOT NULL COMMENT &#39;颜值, 1-10, 分数越高, 颜值越高&#39;,  PRIMARY KEY (`user_id`)) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8;复制代码</code></pre><p><strong>插入数据</strong></p><pre><code>INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;王思聪&#39;, 1, 180, 88, 999900000.00, 6);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;陈伟霆&#39;, 1, 177, 66, 88880000.00, 9);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;鹿晗&#39;, 1, 170, 64, 77770000.00, 10);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;刘诗诗&#39;, 2, 166, 52, 66660000.00, 9);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;刘德华&#39;, 1, 165, 72,999960000.00, 9);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;张艺兴&#39;, 1, 166, 70,55550000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;张嘉倪&#39;, 2, 155, 56,44440000.00, 6);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;黄子韬&#39;, 1, 177, 66,44443333.00, 5);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;周笔畅&#39;, 2, 160, 54,5550000.00, 4);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;陈小纭&#39;, 2, 159, 66,67890000.00, 6);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;乔振宇&#39;, 1, 188,66, 67890000.00, 5);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;赵丽颖&#39;, 2, 171,50, 77890000.00, 7);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;王鸥&#39;, 1,  199,55, 3990000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;蔡徐坤&#39;, 1, 187, 45, 59080000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;Angelababy&#39;, 2, 177, 55, 45890000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;张云雷&#39;, 1, 183,69, 45670000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;迪丽热巴&#39;, 2, 155, 55, 458910000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;朱一龙&#39;, 1, 180, 70, 78950000.00, 6);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;郑爽&#39;, 2, 162, 56, 78540000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;沈腾&#39;, 1, 175, 70, 3890000.00, 7);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;雷杰&#39;, 1, 179, 70, 34560000.00, 8);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;关晓彤&#39;, 2, 165, 55, 43440000.00, 6);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;许凯&#39;, 1, 192,66, 34560000.55, 7);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;焦俊艳&#39;, 2, 155, 56, 67890000.00, 5);INSERT INTO `user`(`user_name`, `user_sex`, `user_height`, `user_weight`, `user_account`, `user_appearance`) VALUES (&#39;马丽&#39;, 2, 161, 55, 34560000.00, 7);复制代码</code></pre><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li><p>desc</p><blockquote><p>select * from 表名 order by 字段值 desc;</p></blockquote><pre><code>select * from book order by bookprice desc;复制代码</code></pre></li><li><p>asc</p><blockquote><p>select *from 表名 order by 字段值 asc;</p></blockquote><pre><code>select *from book order by bookprice asc;复制代码</code></pre></li><li><p>多字段排序</p><blockquote><p>select * from 表名 order by 字段名1 asc, 字段名2 desc;</p></blockquote><pre><code>select * from book order by borrowsum asc ,typeid desc;复制代码</code></pre><blockquote><p>select * from 表名 order by 字段名1, 字段名2 desc;</p></blockquote><pre><code>select * from book order by borrowsum, typeid desc;复制代码</code></pre></li></ul><h3 id="限制条数"><a href="#限制条数" class="headerlink" title="限制条数"></a>限制条数</h3><blockquote><p>select * from 表名 limit 查询个数;</p></blockquote><pre><code>select * from book limit 3;复制代码</code></pre><blockquote><p>select * from 表名 limit 开始位置, 查询个数;</p></blockquote><pre><code>select * from book limit 0, 3;复制代码select * from book limit 1, 3;复制代码</code></pre><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><ul><li><p>最大值(max)</p><blockquote><p>select max(字段名) as ‘自定义名称’ from 表名;</p></blockquote><pre><code>select max(bookprice) as &#39;最贵的书&#39; from book;复制代码</code></pre></li><li><p>最小值(min)</p><blockquote><p>select min(字段名) as ‘自定义名称…’ from 表名;</p></blockquote><pre><code>select min(borrowsum) as &#39;最受嫌弃的书...&#39; from book;复制代码</code></pre></li><li><p>数量(count)</p><blockquote><p>select count(字段名) from 表名;</p></blockquote><pre><code>select count(bookid) from book;复制代码</code></pre></li><li><p>总和(sum)</p><blockquote><p>select sum(字段名) from 表名;</p></blockquote><pre><code>select sum(borrowsum) from book;复制代码</code></pre></li><li><p>平均值(avg)</p><blockquote><p>select avg(字段名) from 表名;</p></blockquote><pre><code>select avg(bookprice) from book;复制代码</code></pre></li></ul><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><ul><li><p>简单分组</p><blockquote><p>select 字段名1, count(字段名2) from 表名 group by 字段名1;</p></blockquote><pre><code>select borrowsum, count(bookid) from book group by borrowsum;复制代码</code></pre></li><li><p>筛选分组结果</p><blockquote><p>select 字段1, count(字段2) from 表名 group by 字段1 having count(字段2) = 1;</p></blockquote><pre><code>select borrowsum, count(bookid) from book group by borrowsum having count(bookid) = 1;复制代码</code></pre></li><li><p>分组排序</p><blockquote><p>select 字段1, count(字段2) from 表名 group by 字段1 order by count(字段2) desc;</p></blockquote><pre><code>select borrowsum, count(bookid) from book group by borrowsum order by count(bookid) desc;复制代码</code></pre></li><li><p>统计功能分组查询</p><blockquote><p>select 字段1,group_concat(字段2) from 表名 group by 字段1 order by 字段1 desc;</p></blockquote><pre><code>select borrowsum,group_concat(bookname) from book group by borrowsum order by borrowsum desc;复制代码</code></pre></li><li><p>多个分组查询</p><blockquote><p>select 字段1, 字段2, 聚合函数 from 表名称 group by 字段1, 字段2;</p></blockquote><p>建表语句以及插入数据</p><pre><code>-- ------------------------------ Table structure for choose_course-- ----------------------------DROP TABLE IF EXISTS `choose_course`;CREATE TABLE `choose_course` (  `course_name` char(10) DEFAULT NULL,  `semester_number` int(11) DEFAULT NULL,  `student_name` char(20) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8;-- ------------------------------ Records of choose_course-- ----------------------------INSERT INTO `choose_course` VALUES (&#39;语文&#39;, &#39;1&#39;, &#39;李雷&#39;);INSERT INTO `choose_course` VALUES (&#39;语文&#39;, &#39;1&#39;, &#39;韩梅梅&#39;);INSERT INTO `choose_course` VALUES (&#39;语文&#39;, &#39;1&#39;, &#39;露西&#39;);INSERT INTO `choose_course` VALUES (&#39;语文&#39;, &#39;2&#39;, &#39;莉莉&#39;);INSERT INTO `choose_course` VALUES (&#39;语文&#39;, &#39;2&#39;, &#39;格林&#39;);INSERT INTO `choose_course` VALUES (&#39;数学&#39;, &#39;1&#39;, &#39;李雷&#39;);INSERT INTO `choose_course` VALUES (&#39;数学&#39;, &#39;1&#39;, &#39;名字真难起...&#39;);复制代码</code></pre><p>查询语句(查询每门课, 每个学期, 都被多少同学选择)</p><pre><code>SELECT    course_name,    semester_number,    count(&#39;hello&#39;)FROM    choose_courseGROUP BY    course_name,    semester_number;复制代码</code></pre></li></ul><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><p><img src="https://user-gold-cdn.xitu.io/2019/4/18/16a2e79ea3298258?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="908177-20160329123323113-1922028008.jpg"></p><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><ul><li><p>使用from子句</p><blockquote><p>SELECT * FROM 表名1, 表名2;</p></blockquote><pre><code>SELECT * FROM book, reader;复制代码</code></pre><blockquote><p>select 表1.字段1, 表1.字段2, 表2.字段1, 表2.字段2 from 表1,表2;</p></blockquote><pre><code>select book.bookid,book.bookname,reader.readerid,reader.readername from book,reader;复制代码</code></pre></li><li><p>在where中指定连接条件</p><blockquote><p>SELECT * FROM 表1, 表2 WHERE 表2.字段 = 表1.字段;</p></blockquote><pre><code>SELECT * FROM readertype, reader WHERE reader.retypeid = readertype.retypeid;复制代码</code></pre></li><li><p>使用join关键字实现连接</p><blockquote><p>select * from 表1 join 表2 on 表2.字段 = 表1.字段;</p></blockquote><pre><code>select * from readertype join reader on reader.retypeid = readertype.retypeid;复制代码</code></pre></li><li><p>为数据表使用别名</p><blockquote><p>select 表1.字段1, 表1.字段2, 表2.字段1 from 表1 join 表2 on 表2.字段 = 表1.字段;</p></blockquote><pre><code>select readertype.retypeid,readertype.borrowquantity,reader.readerstatus from readertype join reader on reader.retypeid = readertype.retypeid;复制代码</code></pre><blockquote><p>select 别名1.字段1, 别名1.字段2, 别名2.字段 from 表1 as 别名1 join 表2 as 别名2 on 别名2.字段 = 别名1.字段;</p></blockquote><pre><code>select a.retypeid,a.borrowquantity,b.readerstatus from readertype as a join reader as b on b.retypeid = a.retypeid;复制代码</code></pre></li><li><p>三个表连接查询</p><blockquote><p>select 表1.字段,表2.字段,表3.字段 from 表1 join 表2 on 表1.字段 = 表2.字段 join 表3 on 表3.字段 = 表1.字段;</p></blockquote><pre><code>select bookborrow.borrowid,bookstorage.bookstatus,reader.readername from bookborrow join bookstorage on bookborrow.bookbarcode = bookstorage.bookbarcode join reader on reader.readerid = bookborrow.readerid;复制代码</code></pre><blockquote><p>select 表1.字段, 表2.字段, 表3.字段 from 表1 join 表2 on 表2.字段 = 表1.字段 join 表3 on 表3.字段 = 表2.字段;</p></blockquote><pre><code>select bookstorage.bookintime,book.bookname,booktype.typename from bookstorage join book on book.bookid = bookstorage.bookid join booktype on booktype.typeid = book.typeid;复制代码</code></pre><blockquote><p>select 表1.字段, 表2.字段, 表3.字段 from 表1 inner join 表2 on 表2.字段 = 表1.字段 inner join 表3 on 表3.字段 = 表2.字段;</p></blockquote><pre><code>select bookstorage.bookintime,book.bookname,booktype.typename from bookstorage inner join book on book.bookid = bookstorage.bookid inner join booktype on booktype.typeid = book.typeid;复制代码</code></pre></li></ul><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><pre><code>set foreign_key_checks=0;drop table if exists `user`;drop table if exists `user_detail`;create table user(    user_id int(11) primary key auto_increment not null,    user_name varchar(20) not null ,    user_sex tinyint(1) not null default 1 comment &#39;1 for male 2 for female&#39;);create table user_detail(    user_detail_id int(11) not null primary key auto_increment,    user_detail_address varchar(255) default &#39;河南平顶山&#39; not null,    user_detail_phone char(11) not null unique,    user_detail_uid int(11) not null,    foreign key(user_detail_uid) REFERENCES user(user_id));insert into user(`user_name`) values(&#39;张三&#39;);insert into user(`user_name`) values(&#39;李四&#39;);insert into user(`user_name`) values(&#39;王五&#39;);insert into user(`user_name`) values(&#39;赵六&#39;);insert into user(`user_name`) values(&#39;钱七&#39;);insert into user(`user_name`) values(&#39;孙八&#39;);insert into user(`user_name`) values(&#39;周老九&#39;);insert into user(`user_name`) values(&#39;吴老十&#39;);INSERT INTO `user_detail` VALUES (1, &#39;河南平顶山&#39;, &#39;15639279531&#39;, 1);INSERT INTO `user_detail` VALUES (2, &#39;河南平顶山&#39;, &#39;15639279532&#39;, 2);INSERT INTO `user_detail` VALUES (3, &#39;河南平顶山&#39;, &#39;15639279533&#39;, 3);INSERT INTO `user_detail` VALUES (4, &#39;河南平顶山&#39;, &#39;15639279534&#39;, 4);INSERT INTO `user_detail` VALUES (11, &#39;河南平顶山&#39;, &#39;15639279521&#39;, 11);INSERT INTO `user_detail` VALUES (12, &#39;河南平顶山&#39;, &#39;15639279522&#39;, 12);INSERT INTO `user_detail` VALUES (13, &#39;河南平顶山&#39;, &#39;15639279523&#39;, 13);INSERT INTO `user_detail` VALUES (14, &#39;河南平顶山&#39;, &#39;15639279524&#39;, 14);复制代码</code></pre><ul><li><p>左外连接</p><blockquote><p>select * from 表1 left join 表2 on 表1.字段 = 表2.字段;</p></blockquote><pre><code>select * from user left join user_detail on user.user_id = user_detail.user_detail_uid;复制代码</code></pre><blockquote><p>select * from 表2 right join 表1 on 表1.字段 = 表2.字段;</p></blockquote><pre><code>select * from user_detail right join user on user.user_id = user_detail.user_detail_uid;复制代码</code></pre></li><li><p>右外连接</p><blockquote><p>select * from 表1 right join 表2 on 表1.字段 = 表2.字段;</p></blockquote><pre><code>select * from user right join user_detail on user.user_id = user_detail.user_detail_uid;复制代码</code></pre></li><li><p>内连接</p><blockquote><p>select * from 表1 inner join 表2 on 表2.字段 = 表1.字段;</p></blockquote><pre><code>select * from user inner join user_detail on user_detail.user_detail_uid = user.user_id;复制代码</code></pre><blockquote><p>select * from 表1 join 表2 on 表2.字段 = 表1.字段;</p></blockquote><pre><code>select * from user join user_detail on user_detail.user_detail_uid = user.user_id;复制代码</code></pre></li></ul><h3 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h3><p>以下两句, 效果一样</p><blockquote><p>select * from 表1 cross join 表2 ;</p></blockquote><pre><code>select * from user cross join user_detail ;复制代码</code></pre><blockquote><p>select * from 表1,表2;</p></blockquote><pre><code>select * from user,user_detail;复制代码</code></pre><p>以下两句, 效果一样</p><blockquote><p>select * from 表1 cross join 表2 on 表2.字段 = 表1.字段;</p></blockquote><pre><code>select * from user cross join user_detail on user_detail.user_detail_uid = user.user_id;复制代码</code></pre><blockquote><p>select * from 表1,表2 where 表1.字段 = 表2.字段;</p></blockquote><pre><code>select * from user,user_detail where user.user_id = user_detail.user_detail_uid;复制代码</code></pre><h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p>以下两句, 效果一样</p><blockquote><p>select 表别名1.字段1, 表别名1.字段2 from 表名 as 表别名1,表名 as 表别名2 where 表别名1.字段2 &gt; 表别名2.字段2 and 表别名2.字段1 = ‘字段值’ order by 表别名1.`字段2 desc,表别名1.字段1</p></blockquote><pre><code>SELECT    b2.bookname,    b2.borrowsum FROM    book AS b2,    book AS b1 WHERE    b2.borrowsum &gt; b1.borrowsum     AND b1.bookname = &#39;中医的故事&#39; ORDER BY    b2.borrowsum DESC,    b2.bookname;复制代码SELECT    b2.bookname,    b2.borrowsum FROM    book AS b2 join    book AS b1 on    b2.borrowsum &gt; b1.borrowsum     where b1.bookname = &#39;中医的故事&#39; ORDER BY    b2.borrowsum DESC,    b2.bookname;复制代码</code></pre><blockquote><p>select 字段1,字段2 from 表名 where 字段3 &gt; (select 字段3 from 表名 where 字段1=’字段值’) order by 字段2 desc, 字段1;</p></blockquote><pre><code>select bookname,borrowsum from book where bookprice &gt; (select bookprice from book where bookname=&#39;中医的故事&#39;) order by borrowsum desc, bookname;复制代码</code></pre><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><blockquote><p>select * from 表1 left join 表2 on 表1.字段 = 表2.字段 union select * from 表1 right join 表2 on 表1.字段 = 表2.字段;</p></blockquote><pre><code>select * from user left join user_detail on user.user_id = user_detail.user_detail_uid union select * from user right join user_detail on user.user_id = user_detail.user_detail_uid;复制代码</code></pre><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><h3 id="使用比较运算符的子查询"><a href="#使用比较运算符的子查询" class="headerlink" title="使用比较运算符的子查询"></a>使用比较运算符的子查询</h3><ul><li>查询价格高于<code>机械设计手册</code>的书籍的书籍号, 书籍名称, 书籍单价, 价格从高到低排序</li></ul><pre><code>SELECT    bookid,    bookname,    bookpriceFROM    book WHERE    bookprice &gt; ( SELECT bookprice FROM book WHERE bookname = &#39;机械设计手册&#39; ) ORDER BY    bookprice DESC;复制代码</code></pre><ul><li>查询类别是<code>学生</code>的读者信息, 包括读者编号, 读者姓名, 发证日期</li></ul><pre><code>SELECT    readerid,    readername,    readerdate FROM    reader WHERE    retypeid = ( SELECT retypeid FROM readertype WHERE typename = &#39;学生&#39; );复制代码</code></pre><p>也可以使用连表查询……</p><pre><code>SELECT    readerid,    readername,    readerdate FROM    reader    JOIN readertype ON readertype.retypeid = reader.retypeid     AND typename = &#39;学生&#39;;复制代码</code></pre><h3 id="not-in-子查询"><a href="#not-in-子查询" class="headerlink" title="[not] in 子查询"></a>[not] in 子查询</h3><ul><li>查询已经<code>借出</code>的书籍id, 书籍名称</li></ul><pre><code>SELECT    bookid,    bookname FROM    book WHERE    bookid IN ( SELECT bookid FROM bookstorage WHERE bookstatus = &#39;借出&#39; );复制代码</code></pre><ul><li>查询没有<code>借出</code>(在馆)的书籍id, 书籍名称</li></ul><pre><code>SELECT    `bookid`,    `bookname` FROM    `book` WHERE    `bookid` NOT IN ( SELECT `bookid` FROM `bookstorage` WHERE `bookstatus` = &#39;借出&#39; );复制代码SELECT    `bookid`,    `bookname` FROM    `book` WHERE    `bookid` IN ( SELECT `bookid` FROM `bookstorage` WHERE `bookstatus` != &#39;借出&#39; );复制代码</code></pre><h3 id="any-子查询"><a href="#any-子查询" class="headerlink" title="any 子查询"></a>any 子查询</h3><p><code>&gt; any</code> 大于最小的 <code>&lt; any</code> 小于最大的 <code>= any</code> 相当于<code>in()</code>;</p><ul><li>选择book表中, 价格大于<code>机械工业出版社</code>最便宜价格的图书(图书ID, 图书名称, 出版社, 价格)</li></ul><pre><code>SELECT    `bookid`,    `bookname`,    `bookpublisher`,    `bookprice` FROM    `book` WHERE    `bookprice` &gt; ANY ( SELECT bookprice FROM book WHERE bookpublisher = &#39;机械工业出版社&#39; );复制代码</code></pre><h3 id="all-子查询"><a href="#all-子查询" class="headerlink" title="all 子查询"></a>all 子查询</h3><p><code>&gt; all</code> 大于最大的 <code>&lt; all</code> 小于最小的</p><ul><li>选择book表中, 价格大于<code>机械工业出版社</code>最贵价格的图书(图书ID, 图书名称, 出版社, 价格)</li></ul><pre><code>SELECT    `bookid`,    `bookname`,    `bookpublisher`,    `bookprice` FROM    `book` WHERE    `bookprice` &gt; all ( SELECT bookprice FROM book WHERE bookpublisher = &#39;机械工业出版社&#39; );复制代码</code></pre><h3 id="not-exists子查询"><a href="#not-exists子查询" class="headerlink" title="[not] exists子查询"></a>[not] exists子查询</h3><ul><li>查看图书类别表中没有图书的<code>类别id</code>和<code>类别名称</code></li></ul><pre><code>SELECT    typeid,    typename FROM    booktype WHERE    NOT EXISTS ( SELECT * FROM book WHERE booktype.typeid = book.typeid );复制代码</code></pre><ul><li>查看图书类别表中有图书的<code>类别id</code>和<code>类别名称</code></li></ul><pre><code>SELECT    typeid,    typename FROM    booktype WHERE    EXISTS ( SELECT * FROM book WHERE booktype.typeid = book.typeid );</code></pre><p>作者：猫哥的技术博客<br>链接：<a href="https://juejin.im/post/5cb7ee04f265da035d0c74ba" target="_blank" rel="noopener">https://juejin.im/post/5cb7ee04f265da035d0c74ba</a></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql光速入门篇章 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五章SQL 常识</title>
      <link href="/2020/02/26/05-sql-ying-yong-ji-chu/"/>
      <url>/2020/02/26/05-sql-ying-yong-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-SQL-常识"><a href="#1-SQL-常识" class="headerlink" title="1. SQL 常识"></a>1. SQL 常识</h1><h2 id="1-1-SQL的介绍"><a href="#1-1-SQL的介绍" class="headerlink" title="1.1 SQL的介绍"></a>1.1 SQL的介绍</h2><pre class="line-numbers language-shell"><code class="language-shell">属于关系型数据库产品中专用的语句。结构化查询语句。MySQL 1.2  SQL 标准SQL-89  \ SQL-92  \  SQL-99   \SQL03 .....1.3 sql_mode <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3-1-作用"><a href="#1-3-1-作用" class="headerlink" title="1.3.1 作用"></a>1.3.1 作用</h2><pre class="line-numbers language-scss"><code class="language-scss">影响到了SQL语句的执行行为。为了让数据库在存、取能够满足生活的常识、科学的逻辑，让这些数据有意义。例子：     现实生活中常识：        日期： <span class="token number">1000</span>-<span class="token number">9999</span> 年 <span class="token number">1</span>-<span class="token number">12</span> 月 <span class="token number">1</span>-<span class="token number">31</span>日     科学逻辑：                 除法：除数不能为<span class="token number">0</span><span class="token number">1.3.2</span> 查看sql_mode mysql> select @@sql_mode<span class="token punctuation">;</span><span class="token property">ONLY_FULL_GROUP_BY</span>          <span class="token punctuation">:</span>  针对group by 语句执行时的规范<span class="token property">STRICT_TRANS_TABLES</span>         <span class="token punctuation">:</span>  针对事务表启动严格模式NO_ZERO_IN_DATE             ： <span class="token number">2010</span>-<span class="token number">00</span>-<span class="token number">10</span>NO_ZERO_DATE                ： <span class="token number">0000</span>-<span class="token number">00</span>-<span class="token number">00</span>ERROR_FOR_DIVISION_BY_ZERO  ： 除数不能为<span class="token number">0</span>NO_AUTO_CREATE_USER         ： 是否自动创建用户<span class="token property">NO_ENGINE_SUBSTITUTION</span>      <span class="token punctuation">:</span>  建表是使用了一个不支持的存储引擎报错。        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-数据库对象属性介绍"><a href="#2-数据库对象属性介绍" class="headerlink" title="2. 数据库对象属性介绍"></a>2. 数据库对象属性介绍</h1><h2 id="2-1-数据库对象"><a href="#2-1-数据库对象" class="headerlink" title="2.1 数据库对象"></a>2.1 数据库对象</h2><pre><code>库    库名    库属性：字符集、校对规则表     表名     列 ：        列名        列属性：数据类型、约束、其他属性    行    表属性：引擎、字符集、校对规则、其他。</code></pre><h3 id="2-2-字符集"><a href="#2-2-字符集" class="headerlink" title="2.2 字符集"></a>2.2 字符集</h3><pre><code>2.2 字符集  2.2.1 作用 MySQL 中的 “密码本”2.2.2 种类utf8    not  UTF-8  utf8mb4 is   UTF-8（万国码）特点 : 1. utf8   , 最大支持3字节的字符。不支持emoji字符2. utf8mb4, 最大支持4字节的字符。支持emoji字符。8.0之前，默认字符集latin1,8.0之后是utf8mb4。我们建议使用utf8mb4.</code></pre><h3 id="2-2-3-设置方法"><a href="#2-2-3-设置方法" class="headerlink" title="2.2.3 设置方法"></a>2.2.3 设置方法</h3><pre><code>默认字符集参数建库建表2.3 校对规则（排序规则）  2.3.1 作用 影响到数据的排序方式。    ASCII码a    97b    98c    99d    100A    65B    66C    67D    68</code></pre><h2 id="2-3-2-查看属性"><a href="#2-3-2-查看属性" class="headerlink" title="2.3.2 查看属性"></a>2.3.2 查看属性</h2><pre><code>mysql&gt; show collation;</code></pre><h2 id="2-4-列属性"><a href="#2-4-列属性" class="headerlink" title="2.4 列属性"></a>2.4 列属性</h2><h3 id="2-4-1-数据类型"><a href="#2-4-1-数据类型" class="headerlink" title="2.4.1 数据类型"></a>2.4.1 数据类型</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#  作用 </span>尽可能保证数据是有意义的。<span class="token comment" spellcheck="true">#  种类 </span><span class="token comment" spellcheck="true">## 数字类型</span>整数：    tinyint   1字节  =  8位 = 00000000 <span class="token operator">-</span> 11111111  = 2^8个  = 0  <span class="token operator">-</span> 255     <span class="token punctuation">,</span> <span class="token operator">-</span>127<span class="token operator">-</span>128        int       4字节  =  32位                       = 2^32个 = 0  <span class="token operator">-</span> 2^32<span class="token operator">-</span>1  <span class="token punctuation">,</span><span class="token operator">-</span>2^31<span class="token operator">-</span>2^31<span class="token operator">-</span>1 <span class="token punctuation">,</span>10位数    bigint    8字节                                           0  <span class="token operator">-</span> 2^64<span class="token operator">-</span>1  <span class="token punctuation">,</span><span class="token operator">-</span>2^63<span class="token operator">-</span>2^63<span class="token operator">-</span>1 <span class="token punctuation">,</span>20位数浮点数：    decimal<span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 字符串类型</span>char<span class="token punctuation">(</span>N<span class="token punctuation">)</span>    :     N字符个数，最大不超过255    定长的字符串类型。    例如： char<span class="token punctuation">(</span>10<span class="token punctuation">)</span> <span class="token punctuation">,</span>最多存10个字符<span class="token punctuation">,</span>只要10个字符以内，都10个字符长度的存储空间。剩余用空格填充。varchar<span class="token punctuation">(</span>M<span class="token punctuation">)</span> ：    M字符个数，最大不超过65535    变长的字符串类型。会额外占用1<span class="token operator">-</span>2字节存储字符长度。255字符之内，额外1字节，255以上，额外2字节    例如： varchar<span class="token punctuation">(</span>10<span class="token punctuation">)</span><span class="token punctuation">,</span>最多存10个字符<span class="token punctuation">,</span>按需分配存储空间。    abc 3             =4    asdasdadasd 1000  =1002enum<span class="token punctuation">(</span><span class="token string">'bj'</span><span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">,</span><span class="token string">'tj'</span><span class="token punctuation">,</span><span class="token string">'heibei'</span><span class="token punctuation">,</span><span class="token string">'henan'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>district enum<span class="token punctuation">(</span><span class="token string">'bj'</span><span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">,</span><span class="token string">'tj'</span><span class="token punctuation">,</span><span class="token string">'heibei'</span><span class="token punctuation">,</span><span class="token string">'henan'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5时间类型"><a href="#2-5时间类型" class="headerlink" title="2.5时间类型"></a>2.5时间类型</h2><pre class="line-numbers language-shell"><code class="language-shell">datetime    8字节 timestamp   4字节 DATETIME 范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。TIMESTAMP 1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。timestamp会受到时区的影响<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6二进制类型"><a href="#2-6二进制类型" class="headerlink" title="2.6二进制类型"></a>2.6二进制类型</h3><pre><code>## 二进制类型## json 数据类型数据类型选型： 合适的、足够的、简短的</code></pre><h2 id="2-7约束"><a href="#2-7约束" class="headerlink" title="2.7约束"></a>2.7约束</h2><pre class="line-numbers language-scala"><code class="language-scala"># 主键 primary key （PK）  ： <span class="token number">1</span><span class="token punctuation">.</span> 一张表只能有一个，可以有多个列构成<span class="token number">2</span><span class="token punctuation">.</span> 特点： 非空<span class="token operator">+</span>唯一<span class="token number">3</span><span class="token punctuation">.</span> 建议每张表都设置主键，有利于索引的应用，通常是使用自增的数字列更佳。# 非空 not <span class="token keyword">null</span> <span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">.</span> 特点： 必须录入值。<span class="token number">2</span><span class="token punctuation">.</span> 建议： 每个列最好设置为，有利于索引的应用。# 唯一 unique key ：<span class="token number">1</span><span class="token punctuation">.</span> 特点： 不能有重复值。# 无符号 unsigned<span class="token number">1</span><span class="token punctuation">.</span> 特点： 针对数字列，无符号设定。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-8其他"><a href="#2-8其他" class="headerlink" title="2.8其他"></a>2.8其他</h2><pre><code>表属性 ：         engine  ： 存储引擎设置，默认是innodb，也是我们建议的。        charset ： utf8mb4         comment :  注释。列属性 ：         default       :  默认值。一般是在not null 配合使用        auto_increment： 数字列自增长。一般是在主键列配合使用        comment       ： 列的注释，建议每个列都有</code></pre><h1 id="3-SQL-种类"><a href="#3-SQL-种类" class="headerlink" title="3. SQL 种类"></a>3. SQL 种类</h1><pre><code>3.1  DDL  ： 数据定义语言对于： 库 、表（元数据）的 增、删、改建库、删库、修改库、建表、删表、修改表3.2 DCL  ： 数据控制语言grant revoke 3.3 DML  ： 数据操作语言表的数据行进行的增、删、改、查3.4 DQL  ： 数据查询语言对于表数据行查看对于元数据查看</code></pre><h2 id="1-DDL语句"><a href="#1-DDL语句" class="headerlink" title="1. DDL语句"></a>1. DDL语句</h2><pre class="line-numbers language-CQL"><code class="language-CQL">4.1 DDL-库定义 # 建库  CREATE DATABASE oldguo CHARSET utf8mb4;CREATE DATABASE school CHARSET utf8mb4;# 字符集设置： vim /etc/my.cnf[mysqld]character_set_server=utf8mb4init_connect = "SET NAMES 'utf8mb4'"# 改库  CREATE DATABASE oldli ;SHOW CREATE DATABASE oldboy;SHOW CREATE DATABASE oldli;ALTER DATABASE oldli CHARSET utf8mb4;SHOW CREATE DATABASE oldli;# 删库 DROP DATABASE oldli;# 查库 show databases;SHOW CREATE DATABASE oldboy;# 库定义的 开发规范 开发  ----》  测试   ----》 预发布  ----》生产Windows                                   linuxtest=TEST                               test ≠ TEST1. 库名不能数字开头2. 库名要和业务有关3. 库名不要有大写字符   原因：为了多平台兼容。4. 建库需要显示指定字符集。建议是utf8mb4。    5. 生产中禁用普通用户的drop database权限。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-DDL-表定义"><a href="#2-DDL-表定义" class="headerlink" title="2.DDL  - 表定义"></a>2.DDL  - 表定义</h2><pre><code># 建表 Create table `oldboy`.`student`( `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;, `name` varchar(64) NOT NULL COMMENT &#39;学生姓名&#39;, `age` tinyint UNSIGNED NOT NULL DEFAULT 0 COMMENT &#39;学生年龄&#39;, `gender` CHAR(1) NOT NULL DEFAULT &#39;n&#39; COMMENT &#39;学生性别&#39;, `address` enum(&#39;北京&#39;,&#39;天津&#39;,&#39;上海&#39;,&#39;重庆&#39;,&#39;河北&#39;,&#39;河南&#39;,&#39;山东&#39;,&#39;未知&#39;) NOT NULL DEFAULT &#39;未知&#39; COMMENT &#39;省份&#39;,  `intime` datetime NOT NULL COMMENT &#39;入学时间&#39;, `shenfen` CHAR(18) NOT NULL COMMENT &#39;身份证&#39;, `num` int(10) UNSIGNED ZEROFILL NOT NULL COMMENT &#39;测试&#39;,  primary key (`id`) ) ENGINE=InnoDB charset=utf8mb4 collate=utf8mb4_bin; 补充：  1. `` 反引号， 还原字符串原有的含义。2. 克隆一张和student表结构一致的stu表。create table stu like student;3. 建表规范    a. 表名：         不能数字开头        业务有关        不要大写字母        不要超过18字符        不能是关键字    b. 存储引擎使用InnoDB    c. 5.7版本以后，字符集使用utf8mb4    d. 列名要和业务有关，不要超过18个字符    e. 选择合适、足够、简短数据类型    f. 建议每个列设置not null    g. 每个列要有注释    h. 每个表要有主键    i. 针对not null 列，可以设定默认值。    j. 表注释推荐软件： yearing   开源SQL审核工具。inception SQL审核工具。# 查表mysql&gt; use oldboy;mysql&gt; show tables;mysql&gt; show create table student;  # 命令行mysql&gt; desc student;# 改表（表定义=元数据）  -- 修改表定义  --- 添加列: 在student表中添加telnum列 *****use oldboy;desc student;alter table oldboy.student add column telnum CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; ;desc student;--- 不建议的方式alter table oldboy.student add column a CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; after gender ;desc student;alter table oldboy.student add column b CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; first ;desc student;--- 删除列 （不代表生产操作，危险！！！！）alter table student drop  a;alter table student drop  b;alter table student drop  telnum;--- 修改表属性--- 修改表名 alter table student rename to st;--- 修改引擎  *****create table t1(id int)engine=myisam;show create table t1;alter table t1 engine=innodb;--- 修改字符集create table t2(id int)charset=utf8;show create table t2;alter table t2 charset=utf8mb4;--- 修改列属性desc st;--- 修改列名alter table st change shenfen cardnum CHAR(18) not null default &#39;0&#39; comment &#39;身份证&#39;;--- 修改默认值alter table st change cardnum cardnum CHAR(18) not null default &#39;1&#39; comment &#39;身份证&#39;;--- 修改数据类型 *****alter table st modify cardnum CHAR(20) not null default &#39;1&#39; comment &#39;身份证&#39;;#  删表(危险操作！！ 普通用户禁用 drop 操作)drop table stu;# 表定义规范1. 建表      a. 表名：         不能数字开头        业务有关        不要大写字母        不要超过18字符        不能是关键字    b. 存储引擎使用InnoDB    c. 5.7版本以后，字符集使用utf8mb4    d. 列名要和业务有关，不要超过18个字符    e. 选择合适、足够、简短数据类型    f. 建议每个列设置not null    g. 每个列要有注释    h. 每个表要有主键    i. 针对not null 列，可以设定默认值。    j. 表注释    2. 修改表     a. 添加列，使用追加式添加列     b. 修改列属性，尽量使用modify语句    c. 修改表定义，建议在业务不繁忙期间进行。尽量采用pt-osc或者gh-ost工具减少业务影响。</code></pre><pre><code>上作业：     1. 什么是online-ddl? 各个版本的不同？    参考 ： https://dev.mysql.com/doc/refman/5.7/en/innodb-online-ddl-operations.html    2. pt-osc（percona-toolkit : pt-online-schema-change） 或者 gh-ost工具的使用    参考： https://www.jianshu.com/p/c97228b6f60c 或者 百度。</code></pre><h1 id="4-sql语句"><a href="#4-sql语句" class="headerlink" title="4-sql语句"></a>4-sql语句</h1><h3 id="1-DML"><a href="#1-DML" class="headerlink" title="1-DML"></a>1-DML</h3><pre><code>1.1 作用针对 表 中的 数据行 进行的增、删、改、查1.2 增 insert into ...desc st;</code></pre><h3 id="2-增-insert-into-…"><a href="#2-增-insert-into-…" class="headerlink" title="2-增 insert into …"></a>2-增 insert into …</h3><pre class="line-numbers language-scss"><code class="language-scss">-- 标准 必须 <span class="token string">''</span>insert into     <span class="token function">st</span><span class="token punctuation">(</span>id,name,age,gender,address,intime,cardnum,num<span class="token punctuation">)</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token number">1</span>,<span class="token string">'张三'</span>,<span class="token number">18</span>,<span class="token string">'m'</span>,<span class="token string">'北京'</span>,<span class="token string">'2020-04-27'</span>,<span class="token string">'666666'</span>,<span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>select <span class="token operator">*</span> <span class="token keyword">from</span> st<span class="token punctuation">;</span>--- 部分列录入insert into     <span class="token function">st</span><span class="token punctuation">(</span>name,intime,num<span class="token punctuation">)</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token string">'李四'</span>,<span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span>,<span class="token number">1111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>select <span class="token operator">*</span> <span class="token keyword">from</span> st<span class="token punctuation">;</span>alter table st modify intime datetime <span class="token operator">not</span> <span class="token null">null</span> default <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> comment <span class="token string">'入学时间'</span><span class="token punctuation">;</span>insert into     <span class="token function">st</span><span class="token punctuation">(</span>name,num<span class="token punctuation">)</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token string">'王五'</span>,<span class="token number">11112</span><span class="token punctuation">)</span><span class="token punctuation">;</span>select <span class="token operator">*</span> <span class="token keyword">from</span> st<span class="token punctuation">;</span>--- 省略写法desc st<span class="token punctuation">;</span>insert into     st<span class="token function">values</span><span class="token punctuation">(</span><span class="token number">5</span>,<span class="token string">'张三'</span>,<span class="token number">18</span>,<span class="token string">'m'</span>,<span class="token string">'北京'</span>,<span class="token string">'2020-04-27'</span>,<span class="token string">'666666'</span>,<span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>select <span class="token operator">*</span> <span class="token keyword">from</span> st<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-update-更新数据行的值"><a href="#3-update-更新数据行的值" class="headerlink" title="3 update 更新数据行的值"></a>3 update 更新数据行的值</h3><pre class="line-numbers language-powershell"><code class="language-powershell">-<span class="token operator">--</span> 更新数据行update st <span class="token function">set</span> name=<span class="token string">'张六'</span>  where id=4<span class="token punctuation">;</span>update st <span class="token function">set</span> name=<span class="token string">'错'</span> <span class="token punctuation">,</span> age=44 <span class="token punctuation">,</span>  address=<span class="token string">'北京'</span> where id=10update st <span class="token function">set</span> name=<span class="token string">'张qi'</span> <span class="token punctuation">,</span> age=21  where id=4<span class="token punctuation">;</span><span class="token function">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> st<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-delete-删除数据行"><a href="#4-delete-删除数据行" class="headerlink" title="4 delete 删除数据行"></a>4 delete 删除数据行</h3><pre class="line-numbers language-CQL"><code class="language-CQL">-- delete delete from st  where id=5;select * from st;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-伪删除："><a href="#5-伪删除：" class="headerlink" title="5 伪删除："></a>5 伪删除：</h3><pre class="line-numbers language-CQL"><code class="language-CQL">1.5 伪删除： update 替代 delete ，添加状态列，1带表存在，0代表删除改变 ： a. 添加状态列 alter table st add column state tinyint not null default 1 comment '状态列,0是删除,1是存在';alter table st add column sster tinyint not null  default 2  comment '状态列,0是删除,1是存在'b. 使用update 替换 delete 原： delete from st where id=4修改后： update st set state=0 where id=4;c. 替换原来查询业务语句原：　select * from st;改变后：　select * from st where state=1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="彩蛋："><a href="#彩蛋：" class="headerlink" title="彩蛋："></a>彩蛋：</h2><pre class="line-numbers language-CQL"><code class="language-CQL">面试题 drop　table t1 ,truncate table t1 , delete from t1 区别 ？ # drop　table t1;        作用： 1. 删除所有表数据，删除整个表段（rm ibd  ）,属于物理性质，会释放磁盘空间。           2. 删除表定义 (rm  frm , 元数据也会被删除)# truncate table t1 ;    作用： 保留表结构，清空表段中的数据页。属于物理删除，会释放磁盘空间。    # delete from t1;     作用: 删除数据行。逐行删除。保留表结构，属于逻辑性质删除。只是标记删除，不会立即释放磁盘空间。    所以delete 操作会产生碎片。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-DQL-数据查询语句"><a href="#5-DQL-数据查询语句" class="headerlink" title="5-DQL  数据查询语句"></a>5-DQL  数据查询语句</h1><h2 id="1-业务数据查询-select"><a href="#1-业务数据查询-select" class="headerlink" title="1 业务数据查询 - select"></a>1 业务数据查询 - select</h2><pre class="line-numbers language-CQL"><code class="language-CQL">2.1 业务数据查询 - select 2.1.1 select 独立使用（MySQL 独有）--- 查询数据库服务器配置参数select @@port;select @@server_id;select @@basedir;select @@datadir;select @@socket;select @@innodb_flush_log_at_trx_commit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-替代方法："><a href="#2-替代方法：" class="headerlink" title="2-==替代方法：=="></a>2-==替代方法：==</h2><pre class="line-numbers language-CQL"><code class="language-CQL">show variables;show variables like '%trx%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-3-查询内置函数"><a href="#2-3-查询内置函数" class="headerlink" title="2.3-查询内置函数"></a>2.3-查询内置函数</h3><pre class="line-numbers language-CQL"><code class="language-CQL">select DATABASE();select NOW();select USER();select CONCAT("hello world");select user,host from mysql.user;select CONCAT("数据库用户:",user,"@",host,plugin,";") from mysql.user;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-其他数据库"><a href="#2-4-其他数据库" class="headerlink" title="2.4-其他数据库"></a>2.4-其他数据库</h3><pre><code>select NOW() from dual;</code></pre><h2 id="3-select-多子句执行顺序（单表）"><a href="#3-select-多子句执行顺序（单表）" class="headerlink" title="3-select 多子句执行顺序（单表）"></a>3-select 多子句执行顺序（单表）</h2><pre class="line-numbers language-CQL"><code class="language-CQL">select     列   from       表  where      条件  group by   列 having     条件 order by   列 limit      条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CQL"><code class="language-CQL">--- 学习业务？--- 查看表的定义desc city; ---- id           : 主键 1-N数字---- name         ：城市名---- countrycode  ：国家编码(三个字母？CHN,USA)select * from city where id<10;---- district     : 区域 （省、州、县）---- population   : 城市人口---- 论 comment 的重要性生产中熟悉业务： 1. comment 2. desc ，简单查询表中数据，猜3. E-R关系图<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-select-配合-from-子句使用"><a href="#1-select-配合-from-子句使用" class="headerlink" title="1-select 配合 from 子句使用"></a>1-select 配合 from 子句使用</h2><pre class="line-numbers language-CQL"><code class="language-CQL">---  查询表中所有数据（小表）use world;select id,name,countrycode ,district,population from city;# 或者select id,name,countrycode ,district,population from world.city;# 或者 select * from city;--- 查询部分列数据 --- 例子： 查询所有城市名及人口信息。select name,population from city;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-select-from-where-子句使用"><a href="#2-select-from-where-子句使用" class="headerlink" title="2-select  +  from + where 子句使用"></a>2-select  +  from + where 子句使用</h2><pre class="line-numbers language-CQL"><code class="language-CQL">--- where 配合 比较 操作符(= != > < >= <=)--- 例子：查询city表中，所有中国的城市信息。 select *  from city where countrycode = 'CHN';--- 例子：查询人口数小于100人城市信息select * from city where population<100;--- where 配合逻辑连接符（and, or , between and），实现多条件过滤--- 例子：查询中国,人口数超过500w的所有城市信息select * from city where countrycode='CHN' and  population>5000000;--- 例子：查询中国或美国的城市信息。 select * from city where countrycode='CHN'  or countrycode='USA' ;# 或者 select * from city where countrycode in ('CHN','USA');--- 例子：查询人口数为100w-200w（包括两头）城市信息select * from city where population >= 1000000 and population <= 2000000 # 或者： select * from city where population between (介于)  1000000 and  2000000 ;between (介于)--- 例子 ：查询中国或美国，人口数大于500w的城市SELECT * FROM city WHERE (countrycode='CNH' OR countrycode='USA' ) AND population>5000000;select * from world.city where countrycode in ('CHN','USA') and population >= 5000000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-where-配合-like-语句实现模糊查询"><a href="#3-where-配合-like-语句实现模糊查询" class="headerlink" title="3-where 配合 like 语句实现模糊查询"></a>3-where 配合 like 语句实现模糊查询</h2><pre class="line-numbers language-CQL"><code class="language-CQL">--- 查询城市名为qing开头的城市信息select * from city where name like 'qing%';select * from city where name like '%qing%';  # 一般线上业务慎用%qing%，不走索引，如果业务中很多需求，ES可以很好解决。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-se-lect-from-group-by-聚合函数"><a href="#6-se-lect-from-group-by-聚合函数" class="headerlink" title="6-se==lect +== from + group by + ==聚合函数=="></a>6-se==lect +== from + group by + ==聚合函数==</h1><h2 id="聚合函数："><a href="#聚合函数：" class="headerlink" title="聚合函数："></a>聚合函数：</h2><pre class="line-numbers language-CQL"><code class="language-CQL">count()            统计数量sum()              求和avg()              平均数max()              最大值min()              最小值group_concat()     列转行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-group-by-分组功能原理"><a href="#1-group-by-分组功能原理" class="headerlink" title="1-group  by  分组功能原理"></a>1-group  by  分组功能原理</h2><pre class="line-numbers language-CQL"><code class="language-CQL">1. 按照分组条件进行排序2. 进行分组列的去重复3. 聚合函数将其他列的结果进行聚合。--- SQL_MODE=only_full_group 保证group by 语句 准确性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-select-from-group-by-聚合函数"><a href="#2-select-from-group-by-聚合函数" class="headerlink" title="2-select + from + group by + 聚合函数"></a>2-select + from + group by + 聚合函数</h2><pre class="line-numbers language-mysql"><code class="language-mysql">例子： 统计city表的行数select COUNT(*) from city;--- 例子： 统计中国城市的个数select COUNT(*) from city where countrycode='CHN';--- 例子： 统计中国的总人口数。select SUM(population) from city where countrycode='CHN';--- 例子：统计每个国家的城市个数。select countrycode,COUNT(name) from city group by countrycode;--- 练习1： 统计每个国家的总人口数。select countrycode,sum(population) from city   group by countrycode ;--- 练习2： 中国每个省的城市个数，和总人口数。mysql> select district, COUNT(name),name    -> from city     -> where countrycode='CHN'  group by district     -> ;ERROR 1055 (42000): Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'world.city.Name' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_bymysql> 报错说明： 5.7 之后的SQL对于group by语句的限制。1. 没有在group by 后2. 同时没有在函数中聚合操作违反了SQL_MODE=only_full_group_by--- 练习3：  统计中国每个省的城市个数及城市名列表。select district, COUNT(name),GROUP_CONCAT(name)from city where countrycode='CHN'  group by district <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-having-子句应用"><a href="#3-having-子句应用" class="headerlink" title="3-having  子句应用"></a>3-having  子句应用</h2><pre class="line-numbers language-CQL"><code class="language-CQL">后判断，主要应用在group by之后需要判断。--- 统计每个国家的总人口数，只显示总人口超过1亿人的信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">select countrycode,SUM(population)  from city group by countrycode having  SUM(population)>100000000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-order-by-语句应用"><a href="#4-order-by-语句应用" class="headerlink" title="4-order by 语句应用"></a>4-order by 语句应用</h2><pre class="line-numbers language-CQL"><code class="language-CQL">--- 例子： 查询所有城市信息，并按照人口数排序输出。select * from city order by population;--- 例子：查询中国所有的城市信息，并按照人口数从大到小排序输出select * from city where countrycode = 'CHN' order by population desc ;--- 例子： 每个国家的总人口数，总人口超过5000w的信息,并按总人口数从大到小排序输出select countrycode,SUM(population)  from city group by countrycode having  SUM(population)>50000000order by SUM(population) desc ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-limit-分页查询"><a href="#5-limit-分页查询" class="headerlink" title="5-limit  分页查询"></a>5-limit  分页查询</h2><pre class="line-numbers language-CQL"><code class="language-CQL">- 一般配合order by 使用--- 例子： 查询中国所有的城市信息，并按照人口数从大到小排序输出，只显示前十名。select * from city where countrycode = 'CHN' order by population desc limit 10 ;--- 6-10 名 select * from city where countrycode = 'CHN' order by population desc limit 5,5select * from city where countrycode = 'CHN' order by population desc limit 5 offset 5;-- limit M,N : 跳过M行，显示N行-- limit N offset M : 跳过M行，显示N行彩蛋：     limit 有可能对性能的影响。        limit 1000大表中： limit 5000000,10明确查询范围，使用精确的where去做数据获取。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-多表查询笛卡尔乘积"><a href="#7-多表查询笛卡尔乘积" class="headerlink" title="7. 多表查询笛卡尔乘积"></a>7. 多表查询笛卡尔乘积</h1><pre class="line-numbers language-CQL"><code class="language-CQL">use schoolstudent ：学生表sno：    学号sname：学生姓名sage： 学生年龄ssex： 学生性别teacher ：教师表tno：     教师编号tname：教师名字course ：课程表cno：  课程编号cname：课程名字tno：  教师编号score  ：成绩表sno：  学号cno：  课程编号score：成绩-- 项目构建drop database school;CREATE DATABASE school CHARSET utf8;USE schoolCREATE TABLE student(sno INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '学号',sname VARCHAR(20) NOT NULL COMMENT '姓名',sage TINYINT UNSIGNED  NOT NULL COMMENT '年龄',ssex  ENUM('f','m') NOT NULL DEFAULT 'm' COMMENT '性别')ENGINE=INNODB CHARSET=utf8;CREATE TABLE course(cno INT NOT NULL PRIMARY KEY COMMENT '课程编号',cname VARCHAR(20) NOT NULL COMMENT '课程名字',tno INT NOT NULL  COMMENT '教师编号')ENGINE=INNODB CHARSET utf8;CREATE TABLE sc (sno INT NOT NULL COMMENT '学号',cno INT NOT NULL COMMENT '课程编号',score INT  NOT NULL DEFAULT 0 COMMENT '成绩')ENGINE=INNODB CHARSET=utf8;CREATE TABLE teacher(tno INT NOT NULL PRIMARY KEY COMMENT '教师编号',tname VARCHAR(20) NOT NULL COMMENT '教师名字')ENGINE=INNODB CHARSET utf8;INSERT INTO student(sno,sname,sage,ssex)VALUES (1,'zhang3',18,'m');INSERT INTO student(sno,sname,sage,ssex)VALUES(2,'zhang4',18,'m'),(3,'li4',18,'m'),(4,'wang5',19,'f');INSERT INTO studentVALUES(5,'zh4',18,'m'),(6,'zhao4',18,'m'),(7,'ma6',19,'f');INSERT INTO student(sname,sage,ssex)VALUES('oldboy',20,'m'),('oldgirl',20,'f'),('oldp',25,'m');INSERT INTO teacher(tno,tname) VALUES(101,'oldboy'),(102,'hesw'),(103,'oldguo');DESC course;INSERT INTO course(cno,cname,tno)VALUES(1001,'linux',101),(1002,'python',102),(1003,'mysql',103);DESC sc;INSERT INTO sc(sno,cno,score)VALUES(1,1001,80),(1,1002,59),(2,1002,90),(2,1003,100),(3,1001,99),(3,1003,40),(4,1001,79),(4,1002,61),(4,1003,99),(5,1003,40),(6,1001,89),(6,1003,77),(7,1001,67),(7,1003,82),(8,1001,70),(9,1003,80),(10,1003,96);SELECT * FROM student;SELECT * FROM teacher;SELECT * FROM course;SELECT * FROM sc;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CQL"><code class="language-CQL">-- 项目构建source /root/school.sql1.1 多表查询类型1.1.1 笛卡尔乘积 select  *   from  teacher,course;或者： select * from teacher join course;拿着 teacher每行数据和course逐行进行组合，显示两层for循环的实现逻辑。Simple-Nextloop （嵌套循环方式）得出的结果，会有部分数据是无意义的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-内连接-（取交集）"><a href="#1-内连接-（取交集）" class="headerlink" title="1-内连接 （取交集）"></a>1-内连接 （取交集）</h2><pre class="line-numbers language-CQL"><code class="language-CQL">mysql> select * from teacher  join course on teacher.tno=course.tno ;+-----+--------+------+--------+-----+| tno | tname  | cno  | cname  | tno |+-----+--------+------+--------+-----+| 101 | oldboy | 1001 | linux  | 101 || 102 | hesw   | 1002 | python | 102 || 103 | oldguo | 1003 | mysql  | 103 |+-----+--------+------+--------+-----+3 rows in set (0.00 sec)mysql> select * from teacher,course where teacher.tno=course.tno;+-----+--------+------+--------+-----+| tno | tname  | cno  | cname  | tno |+-----+--------+------+--------+-----+| 101 | oldboy | 1001 | linux  | 101 || 102 | hesw   | 1002 | python | 102 || 103 | oldguo | 1003 | mysql  | 103 |+-----+--------+------+--------+-----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-外连接-（left-join-right-join-）"><a href="#2-外连接-（left-join-right-join-）" class="headerlink" title="2-外连接 （left join , right join ）"></a>2-外连接 （left join , right join ）</h2><pre class="line-numbers language-CQL"><code class="language-CQL">mysql> select * from teacher left join course on teacher.tno=course.tno ;+-----+--------+------+--------+------+| tno | tname  | cno  | cname  | tno  |+-----+--------+------+--------+------+| 101 | oldboy | 1001 | linux  |  101 || 102 | hesw   | 1002 | python |  102 || 103 | oldguo | 1003 | mysql  |  103 || 104 | oldx   | NULL | NULL   | NULL || 105 | oldw   | NULL | NULL   | NULL |+-----+--------+------+--------+------+5 rows in set (0.00 sec)mysql> select * from teacher right  join course on teacher.tno=course.tno;+------+--------+------+--------+-----+| tno  | tname  | cno  | cname  | tno |+------+--------+------+--------+-----+|  101 | oldboy | 1001 | linux  | 101 ||  102 | hesw   | 1002 | python | 102 ||  103 | oldguo | 1003 | mysql  | 103 || NULL | NULL   | 1004 | k8s    | 108 |+------+--------+------+--------+-----+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-多表连接语"><a href="#3-多表连接语" class="headerlink" title="3-多表连接语"></a>3-多表连接语</h2><blockquote><p>a 和 b 有直接的关联关系</p><p><strong>select a.x,b.y  from a  join b on a.z=b.z  where  group by  having order by limit;</strong></p></blockquote><ul><li>a 和 b 没有直接的关联关系</li><li>假如：  a 和 c 有关， b和c 有关<br>a join c on a.i = c.j join b on c.x=b.y</li></ul><h3 id="3-1-方案-套路"><a href="#3-1-方案-套路" class="headerlink" title="3.-1-方案 套路"></a>3.-1-方案 套路</h3><pre class="line-numbers language-css"><code class="language-css">    <span class="token number">1.</span> 根据题意将所有涉及到的表找出来 a  b     <span class="token number">2.</span> 找到a和b直接或者间接的关联条件     <span class="token number">3.</span> 用join on 语句把所有表连接到一起    <span class="token number">4.</span> 罗列其他查询条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-大量练习"><a href="#4-大量练习" class="headerlink" title="4-大量练习"></a>4-大量练习</h2><h3 id="1：-每位老师所教课程名称。"><a href="#1：-每位老师所教课程名称。" class="headerlink" title="1： 每位老师所教课程名称。"></a>1： 每位老师所教课程名称。</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">select</span>   teacher<span class="token punctuation">.</span>tname<span class="token punctuation">,</span>course<span class="token punctuation">.</span>cname  <span class="token keyword">from</span> teacher   <span class="token keyword">join</span> course  on teacher<span class="token punctuation">.</span>tno<span class="token operator">=</span>course<span class="token punctuation">.</span>tno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2：统计每个学员，学习课程的门数"><a href="#2：统计每个学员，学习课程的门数" class="headerlink" title="2：统计每个学员，学习课程的门数"></a>2：统计每个学员，学习课程的门数</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">select</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span><span class="token string">"_"</span><span class="token punctuation">,</span>student<span class="token punctuation">.</span>sno<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> student<span class="token keyword">join</span> scon student<span class="token punctuation">.</span>sno<span class="token operator">=</span>sc<span class="token punctuation">.</span>sno <span class="token keyword">group</span>  by student<span class="token punctuation">.</span>sno<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1：统计每个学员，学习课程的门数和课程名列表"><a href="#1：统计每个学员，学习课程的门数和课程名列表" class="headerlink" title="1：统计每个学员，学习课程的门数和课程名列表"></a>1：统计每个学员，学习课程的门数和课程名列表</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token operator">--</span> 关系图： student <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> sc  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> course <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">></span> teacher<span class="token keyword">select</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span><span class="token string">"_"</span><span class="token punctuation">,</span>student<span class="token punctuation">.</span>sno<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">GROUP_CONCAT</span><span class="token punctuation">(</span>course<span class="token punctuation">.</span>cname<span class="token punctuation">)</span><span class="token keyword">from</span> student <span class="token keyword">join</span> scon student<span class="token punctuation">.</span>sno<span class="token operator">=</span>sc<span class="token punctuation">.</span>sno<span class="token keyword">join</span> course on sc<span class="token punctuation">.</span>cno<span class="token operator">=</span>course<span class="token punctuation">.</span>cno<span class="token keyword">group</span> by student<span class="token punctuation">.</span>sno<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-：每位老师教的学生数量和学生名列表"><a href="#2-：每位老师教的学生数量和学生名列表" class="headerlink" title="2 ：每位老师教的学生数量和学生名列表"></a>2 ：每位老师教的学生数量和学生名列表</h3><pre class="line-numbers language-CQL"><code class="language-CQL">-- 关系图： student ----> sc  ----> course ---> teacherselect CONCAT(teacher.tname,"_",teacher.tno),COUNT(*),GROUP_CONCAT(student.sname)from teacher join courseon teacher.tno=course.tnojoin scon course.cno=sc.cno join studenton sc.sno=student.snogroup by teacher.tno<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-：每位老师教所教课程的平均分"><a href="#3-：每位老师教所教课程的平均分" class="headerlink" title="3 ：每位老师教所教课程的平均分"></a>3 ：每位老师教所教课程的平均分</h3><pre class="line-numbers language-CQL"><code class="language-CQL">select CONCAT(teacher.tname,"_",teacher.tno,"_",course.cno),AVG(sc.score)from teacher join courseon teacher.tno=course.tnojoin scon course.cno=sc.cno group by teacher.tno , course.cno<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-：查找学习了hesw但没学习oldguo课程的学生名。"><a href="#4-：查找学习了hesw但没学习oldguo课程的学生名。" class="headerlink" title="4 ：查找学习了hesw但没学习oldguo课程的学生名。"></a>4 ：查找学习了hesw但没学习oldguo课程的学生名。</h3><pre class="line-numbers language-CQL"><code class="language-CQL">select a.sname from (select student.snamefrom teacher join courseon teacher.tno=course.tnojoin scon course.cno=sc.cno join studenton sc.sno=student.snowhere teacher.tname = 'hesw') as aleft join (select student.sname  from teacher join courseon teacher.tno=course.tnojoin scon course.cno=sc.cno join studenton sc.sno=student.snowhere teacher.tname = 'oldguo') as bon a.sname=b.snamewhere b.sname is null  SELECT student.`sname`,GROUP_CONCAT(teacher.tname)FROM studentJOIN scON sc.`sno`=student.`sno`JOIN courseON course.cno=sc.cnoJOIN teacherON teacher.tno=course.`tno`GROUP BY student.snoHAVING GROUP_CONCAT(teacher.tname) LIKE '%hesw%' AND GROUP_CONCAT(teacher.tname) NOT LIKE '%oldguo%'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-：查询出只选修了一门课程的全部学生的学号和姓名"><a href="#5-：查询出只选修了一门课程的全部学生的学号和姓名" class="headerlink" title="5 ：查询出只选修了一门课程的全部学生的学号和姓名"></a>5 ：查询出只选修了一门课程的全部学生的学号和姓名</h3><pre class="line-numbers language-CQL"><code class="language-CQL">select student.sname,student.sno ,COUNT(*)from  course join scon course.cno=sc.cno  join studenton sc.sno=student.sno group by student.sno having COUNT(*) = 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-：查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分"><a href="#6-：查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分" class="headerlink" title="6 ：查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分"></a>6 ：查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分</h3><pre class="line-numbers language-cassandra"><code class="language-cassandra">select course.cname ,MAX(sc.score),MIN(sc.score)from coursejoin sc on course.cno=sc.cno group by course.cno;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-：查询平均成绩大于85的所有学生的学号、姓名和平均成绩"><a href="#7-：查询平均成绩大于85的所有学生的学号、姓名和平均成绩" class="headerlink" title="7 ：查询平均成绩大于85的所有学生的学号、姓名和平均成绩"></a>7 ：查询平均成绩大于85的所有学生的学号、姓名和平均成绩</h3><pre><code>select student.sno,student.sname,AVG(sc.score)from studentjoin scon student.sno=sc.sno group by student.snohaving AVG(sc.score)&gt;85;</code></pre><h3 id="8-：统计各位老师-所教课程的及格率"><a href="#8-：统计各位老师-所教课程的及格率" class="headerlink" title="8 ：统计各位老师,所教课程的及格率"></a>8 ：统计各位老师,所教课程的及格率</h3><pre><code>case when   条件1    then 输出 1      end</code></pre><h3 id="9-：统计每门课程-优秀-85分以上-良好-70-85-一般-60-70-不及格-小于60-的学生列表"><a href="#9-：统计每门课程-优秀-85分以上-良好-70-85-一般-60-70-不及格-小于60-的学生列表" class="headerlink" title="9 ：统计每门课程:优秀(85分以上),良好(70-85),一般(60-70),不及格(小于60)的学生列表"></a>9 ：统计每门课程:优秀(85分以上),良好(70-85),一般(60-70),不及格(小于60)的学生列表</h3><pre class="line-numbers language-CQL"><code class="language-CQL">select course.cname , GROUP_CONCAT(case when sc.score>=85 then  student.sname end),GROUP_CONCAT(case when sc.score>=70 and sc.score<85 then  student.sname end),GROUP_CONCAT(case when sc.score>=60 and sc.score<70 then  student.sname end),GROUP_CONCAT(case when sc.score<60 then  student.sname end)from coursejoin sc on course.cno=sc.cnojoin studenton sc.sno=student.sno group by course.cno --- 别名使用1. 表别名select a.cname , GROUP_CONCAT(case when b.score>=85 then  c.sname end),GROUP_CONCAT(case when b.score>=70 and b.score<85 then  c.sname end),GROUP_CONCAT(case when b.score>=60 and b.score<70 then  c.sname end),GROUP_CONCAT(case when b.score<60 then  c.sname end)from course as ajoin sc as b on a.cno=b.cnojoin student as con b.sno=c.sno group by a.cno 功能： 表别名设置之后，覆盖到整个查询。2. 列别名select a.cname as "课程名称" , GROUP_CONCAT(case when b.score>=85 then  c.sname end) as "优秀学员",GROUP_CONCAT(case when b.score>=70 and b.score<85 then  c.sname end) as "良好学员",GROUP_CONCAT(case when b.score>=60 and b.score<70 then  c.sname end) as "一般学员",GROUP_CONCAT(case when b.score<60 then  c.sname end) as "不及格学员"from course as ajoin sc as b on a.cno=b.cnojoin student as con b.sno=c.sno group by a.cno 功能：1.显示好看2. 列别名只能在 having 、order by 子句中调用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="8-元数据获取"><a href="#8-元数据获取" class="headerlink" title="8. 元数据获取"></a>8. 元数据获取</h1><h2 id="1-常用show-语句"><a href="#1-常用show-语句" class="headerlink" title="1-常用show 语句"></a>1-常用show 语句</h2><pre class="line-numbers language-CQL"><code class="language-CQL">help show;show databases;                      # 查询所有库名show tables;                         # 查询当前库的所有表名  show tables from world;              # 查询world库下的所有表名show create database world;         # 查询world建库语句show create table city;             # 当前库下的city表建表语句show create table world.city;       # world库下的建表语句   show privileges;                    # 数据库中所有权限show engines;                       # 数据库中支持的存储引擎show grants for root@'localhost'    # 查询某个用户权限show charset;                       # 查询数据库字符集支持show collation;                     # 查询所有校对规则的支持show variables like '%trx%'         # 查询数据库参数 show status like 'com_%'            # 查询数据库的状态show processlist;                  # 查询所有会话信息show engine innodb status           # 查询innodb引擎相关的状态show binary logs                    # 查询二进制日志文件信息show binlog events in 'xxx'         # 查看二进制日志事件show master status ;                # 当前正在使用的二进制日志信息show slave status\G                 # 查看主从状态相关信息show slave hosts;                   # 查看从库主机信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-通过系统表查询元数据"><a href="#2-通过系统表查询元数据" class="headerlink" title="2 通过系统表查询元数据"></a>2 通过系统表查询元数据</h2><pre><code>2.2.1 mysql# 权限表：     user    db# 统计信息表 :    innodb_index_stats    innodb_table_stats2.2.2 IS(information_schema)对象属性：tables  columns2.2.3 PS 性能有关2.2.4 SYS性能有关</code></pre><h2 id="3-IS中的-tables-和-columns-的应用"><a href="#3-IS中的-tables-和-columns-的应用" class="headerlink" title="3-IS中的 tables 和 columns 的应用"></a>3-IS中的 tables 和 columns 的应用</h2><h3 id="1-一、-数据库资产统计"><a href="#1-一、-数据库资产统计" class="headerlink" title="1-一、 数据库资产统计"></a>1-一、 数据库资产统计</h3><pre class="line-numbers language-CQL"><code class="language-CQL">use information_schema;desc tables;-- table_schema   表所在的库-- table_name     表名-- engine         存储引擎-- table_rows     表行数-- avg_row_length 平均行长度-- index_length   索引长度-- data_free      碎片的大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4：每个业务库表的个数和名称"><a href="#4：每个业务库表的个数和名称" class="headerlink" title="4：每个业务库表的个数和名称"></a>4：每个业务库表的个数和名称</h2><pre><code>select  table_schema,count(*),group_concat(table_name)from information_schema.tableswhere table_schema not in (&#39;mysql&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;,&#39;sys&#39;)group by table_schema;</code></pre><h2 id="5：-统计每个库的数据量"><a href="#5：-统计每个库的数据量" class="headerlink" title="5： 统计每个库的数据量"></a>5： 统计每个库的数据量</h2><pre><code>select  table_schema,SUM(table_rows*avg_row_length+index_length) as total_Bfrom information_schema.tableswhere table_schema not in (&#39;mysql&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;,&#39;sys&#39;)group by table_schema;</code></pre><h2 id="6：-查询业务表中，所有不是InnoDB引擎的表"><a href="#6：-查询业务表中，所有不是InnoDB引擎的表" class="headerlink" title="6： 查询业务表中，所有不是InnoDB引擎的表"></a>6： 查询业务表中，所有不是InnoDB引擎的表</h2><pre><code>select  table_schema,table_namefrom information_schema.tableswhere table_schema not in (&#39;mysql&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;,&#39;sys&#39;)and engine!=&#39;innodb&#39;;</code></pre><h2 id="7-命令拼接，完成批量工作"><a href="#7-命令拼接，完成批量工作" class="headerlink" title="7-命令拼接，完成批量工作"></a>7-命令拼接，完成批量工作</h2><pre><code>alter table oldboy.t1 engine=innodb;select  concat(&quot;alter table &quot;,table_schema,&quot;.&quot;,table_name,&quot; engine=innodb;&quot;)from information_schema.tableswhere table_schema not in (&#39;mysql&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;,&#39;sys&#39;)and engine!=&#39;innodb&#39; into outfile &#39;/tmp/alter.sql&#39;;</code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL升级和降级</title>
      <link href="/2020/02/24/di-si-zhang-mysql-sheng-ji-he-jiang-ji/"/>
      <url>/2020/02/24/di-si-zhang-mysql-sheng-ji-he-jiang-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MySQL升级和降级"><a href="#1-MySQL升级和降级" class="headerlink" title="1. MySQL升级和降级"></a>1. MySQL升级和降级</h1><p>`</p><h2 id="1-1-方式"><a href="#1-1-方式" class="headerlink" title="1.1 方式"></a>1.1 方式</h2><pre class="line-numbers language-cs"><code class="language-cs">1.1.1 INPLACE  就地 在一台服务器上，原版本升级到新版本。风险较大。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="建议-：-不管哪种方式升级，都应该先做备份。方便失败回退。"><a href="#建议-：-不管哪种方式升级，都应该先做备份。方便失败回退。" class="headerlink" title="==建议 ： 不管哪种方式升级，都应该先做备份。方便失败回退。=="></a>==建议 ： 不管哪种方式升级，都应该先做备份。方便失败回退。==</h3><h2 id="1-1-2-Mergeing-迁移-建议"><a href="#1-1-2-Mergeing-迁移-建议" class="headerlink" title="1.1.2 Mergeing 迁移   建议"></a>1.1.2 Mergeing 迁移   建议</h2><pre class="line-numbers language-SPARQL"><code class="language-SPARQL">备份迁移 主从迁移<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-升级注意事项"><a href="#1-2-升级注意事项" class="headerlink" title="1.2 升级注意事项"></a>1.2 升级注意事项</h3><pre class="line-numbers language-mssql"><code class="language-mssql">a. 支持GA版本之间升级b. 5.6--> 5.7  ,先将5.6升级至最新版，再升级到5.7c. 5.5 ---> 5.7 ,先将5.5 升级至最新，再5.5---> 5.6最新，再5.6--->5.7 最新d. 回退方案要提前考虑好，最好升级前要备份(特别是往8.0版本升级)。e. 降低停机时间（停业务的时间）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-INPLACE-升级过程原理"><a href="#2-INPLACE-升级过程原理" class="headerlink" title="2.INPLACE 升级过程原理"></a>2.INPLACE 升级过程原理</h1><pre class="line-numbers language-cassandra"><code class="language-cassandra">0. 备份原数据库数据a. 安装新版本软件b. 关闭原数据库（挂维护页）c. 使用新版本软件 “挂” 旧版本数据启动(--skip-grant-tables ,--skip-networking)d. 升级 ： 只是升级系统表。升级时间和数据量无关的。e. 正常重启数据库。f. 验证各项功能是否正常。g. 业务恢复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.4 5.6.46 —-&gt; 5.7.28 Inplace 升级演练</p><pre class="line-numbers language-less"><code class="language-less">a<span class="token number">.</span> 安装 新版本软件 b<span class="token number">.</span> 停原库 # <span class="token number">1.</span> 快速关库功能关闭<span class="token punctuation">(</span>优雅关闭<span class="token punctuation">)</span>  vim <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3316</span><span class="token operator">/</span>my<span class="token number">.</span>cnf ## 添加以下配置innodb_fast_shutdown=<span class="token number">0</span> [root<span class="token variable">@db01</span> data]# systemctl stop mysqld<span class="token number">3316</span>c<span class="token number">.</span> 使用高版本软件挂低版本数据启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-停止数据库"><a href="#1-停止数据库" class="headerlink" title="1-停止数据库"></a>1-停止数据库</h3><pre><code>[root@db01 data]# systemctl stop mysqld3316</code></pre><h2 id="2-使用高版本软件挂低版本数据启动"><a href="#2-使用高版本软件挂低版本数据启动" class="headerlink" title="2- 使用高版本软件挂低版本数据启动"></a>2- 使用高版本软件挂低版本数据启动</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># vim /data/3316/my.cnf </span><span class="token namespace">[mysqld]</span>user=mysqlbasedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3316<span class="token punctuation">.</span>sockport=3316server_id=16innodb_fast_shutdown=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-启动"><a href="#3-启动" class="headerlink" title="3-启动"></a>3-启动</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 data]# /data/app/mysql/bin/mysqld_safe --defaults-file=/data/3316/my.cnf --skip-grant-tables --skip-networking &<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-升级"><a href="#4-升级" class="headerlink" title="4-升级"></a>4-升级</h2><p> 升级 （升级到8.0可以省略）</p><pre><code>d. 升级 （升级到8.0可以省略）[root@db01 data]# /data/app/mysql/bin/mysql_upgrade -S /tmp/mysql3316.sock --force </code></pre><h2 id="5-重启数据库到正常状态"><a href="#5-重启数据库到正常状态" class="headerlink" title="5-重启数据库到正常状态"></a>5-重启数据库到正常状态</h2><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">[root@db01 data]# mysqladmin -S /tmp/mysql3316.sock shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修改启动脚本"><a href="#修改启动脚本" class="headerlink" title="修改启动脚本"></a>修改启动脚本</h3><pre class="line-numbers language-powershell"><code class="language-powershell">修改以下内容 <span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># vim /etc/systemd/system/mysqld3316.service </span>ExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token namespace">[root@China ~]</span> <span class="token comment" spellcheck="true"># cat /etc/systemd/system/mysqld3316.service </span><span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql80<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-启动数据库"><a href="#6-启动数据库" class="headerlink" title="6-启动数据库"></a>6-启动数据库</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3316 </span><span class="token comment" spellcheck="true"># 连接查看</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3316.sock</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlsh root:123@10.0.0.51:3306 -e "util.checkForServerUpgrade()"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-SQL-应用基础"><a href="#3-SQL-应用基础" class="headerlink" title="3.-SQL 应用基础"></a>3.-SQL 应用基础</h1><h2 id="1、SQL介绍"><a href="#1、SQL介绍" class="headerlink" title="1、SQL介绍"></a>1、SQL介绍</h2><pre class="line-numbers language-css"><code class="language-css">结构化查询语言<span class="token number">5.7</span> 以后符合SQL<span class="token number">92</span>严格模式通过sql_mode参数来控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、常用SQL分类"><a href="#2、常用SQL分类" class="headerlink" title="2、常用SQL分类"></a>2、常用SQL分类</h2><pre class="line-numbers language-undefined"><code class="language-undefined">DDL：数据定义语言DCL：数据控制语言DML：数据操作语言DQL：数据的查询语言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、数据类型、表属性、字符集"><a href="#3、数据类型、表属性、字符集" class="headerlink" title="3、数据类型、表属性、字符集"></a>3、数据类型、表属性、字符集</h2><h3 id="3-1-数据类型"><a href="#3-1-数据类型" class="headerlink" title="3.1  数据类型"></a>3.1  数据类型</h3><h3 id="3-1-1-作用"><a href="#3-1-1-作用" class="headerlink" title="3.1.1 作用"></a>3.1.1 作用</h3><pre><code>影响到了SQL语句的执行行为。为了让数据库在存、取能够满足生活的常识、科学的逻辑，让这些数据有意义。例子：     现实生活中常识：        日期： 1000-9999 年 1-12 月 1-31日     科学逻辑：                 除法：除数不能为0</code></pre><h3 id="查看sql-mode"><a href="#查看sql-mode" class="headerlink" title="查看sql_mode"></a>查看sql_mode</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@sql_mode<span class="token punctuation">;</span>ONLY_FULL_GROUP_BY          :  针对<span class="token function">group</span> by 语句执行时的规范STRICT_TRANS_TABLES         :  针对事务表启动严格模式NO_ZERO_IN_DATE             ： 2010<span class="token operator">-</span>00<span class="token operator">-</span>10NO_ZERO_DATE                ： 0000<span class="token operator">-</span>00<span class="token operator">-</span>00ERROR_FOR_DIVISION_BY_ZERO  ： 除数不能为0NO_AUTO_CREATE_USER         ： 是否自动创建用户NO_ENGINE_SUBSTITUTION      :  建表是使用了一个不支持的存储引擎报错。    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SQL-标准"><a href="#SQL-标准" class="headerlink" title="SQL 标准"></a>SQL 标准</h3><pre><code>SQL-89  \ SQL-92  \  SQL-99   \SQL03 .....</code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">保证数据的准确性和标准性。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-数据库对象属性介绍"><a href="#4-数据库对象属性介绍" class="headerlink" title="4-数据库对象属性介绍"></a>4-数据库对象属性介绍</h2><pre><code>库    库名    库属性：字符集、校对规则表     表名     列 ：        列名        列属性：数据类型、约束、其他属性    行    表属性：引擎、字符集、校对规则、其他。</code></pre><h2 id="5-字符集"><a href="#5-字符集" class="headerlink" title="5-字符集"></a>5-字符集</h2><pre><code>MySQL 中的 “密码本”2.2.2 种类utf8    not  UTF-8  utf8mb4 is   UTF-8（万国码）特点 : 1. utf8   , 最大支持3字节的字符。不支持emoji字符2. utf8mb4, 最大支持4字节的字符。支持emoji字符。8.0之前，默认字符集latin1,8.0之后是utf8mb4。我们建议使用utf8mb4.2.2.3 设置方法默认字符集参数建库建表2.3 校对规则（排序规则）  2.3.1 作用 影响到数据的排序方式。    ASCII码a    97b    98c    99d    100A    65B    66C    67D    682.3.2 查看mysql&gt; show collation;2.4 列属性  </code></pre><h2 id="6-数据类型"><a href="#6-数据类型" class="headerlink" title="6-数据类型"></a>6-数据类型</h2><pre><code>#  作用 尽可能保证数据是有意义的。#  种类 ## 数字类型整数：    tinyint   1字节  =  8位 = 00000000 - 11111111  = 2^8个  = 0  - 255     , -127-128        int       4字节  =  32位                       = 2^32个 = 0  - 2^32-1  ,-2^31-2^31-1 ,10位数    bigint    8字节                                           0  - 2^64-1  ,-2^63-2^63-1 ,20位数浮点数：    decimal(m,n)## 字符串类型char(N)    :     N字符个数，最大不超过255    定长的字符串类型。    例如： char(10) ,最多存10个字符,只要10个字符以内，都10个字符长度的存储空间。剩余用空格填充。varchar(M) ：    M字符个数，最大不超过65535    变长的字符串类型。会额外占用1-2字节存储字符长度。255字符之内，额外1字节，255以上，额外2字节    例如： varchar(10),最多存10个字符,按需分配存储空间。    abc 3             =4    asdasdadasd 1000  =1002enum(&#39;bj&#39;,&#39;sh&#39;,&#39;tj&#39;,&#39;heibei&#39;,&#39;henan&#39;,.....)district enum(&#39;bj&#39;,&#39;sh&#39;,&#39;tj&#39;,&#39;heibei&#39;,&#39;henan&#39;,.....)## 时间类型 datetime    8字节 timestamp   4字节 DATETIME 范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。TIMESTAMP 1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。timestamp会受到时区的影响## 二进制类型## json 数据类型</code></pre><h1 id="4-数据库降级"><a href="#4-数据库降级" class="headerlink" title="4-数据库降级"></a>4-数据库降级</h1><h2 id="1-官方解释"><a href="#1-官方解释" class="headerlink" title="1-官方解释"></a>1-官方解释</h2><pre><code>降级：官方解释： https://dev.mysql.com/doc/refman/5.7/en/downgrade-paths.htmlDowngrade from MySQL 5.7 to 5.6 is supported using the logical downgrade method.https://dev.mysql.com/doc/refman/5.7/en/downgrade-binary-package.html#downgrade-procedure-inplaceIn-place downgrade is supported for downgrades between GA releases within the same release series.</code></pre><p>5.7.28 —》 5.7.10       inplace downgrade  ok</p><p>原环境：<br>    5.7.28 二进制版本 + /data/3306/data  </p><h2 id="2-安装-5-7-10-（低）-二进制版本"><a href="#2-安装-5-7-10-（低）-二进制版本" class="headerlink" title="2. 安装 5.7.10 （低） 二进制版本"></a>2. 安装 5.7.10 （低） 二进制版本</h2><pre><code>/data/app/mysql5710</code></pre><p>针对5728版本（高）进行处理工作</p><pre class="line-numbers language-shell"><code class="language-shell">https://dev.mysql.com/doc/refman/5.7/en/downgrading-to-previous-series.htmlset sql_mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' ;set global sql_mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' ;select @@sql_mode;                              ALTER TABLE mysql.proc MODIFY definer char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.event MODIFY definer char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.tables_priv MODIFY Grantor char(77) COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.procs_priv MODIFY Grantor char(77) COLLATE utf8_bin NOT NULL DEFAULT '';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-优雅的关闭5-7-28（高）。"><a href="#3-优雅的关闭5-7-28（高）。" class="headerlink" title="3. 优雅的关闭5.7.28（高）。"></a>3. 优雅的关闭5.7.28（高）。</h2><pre class="line-numbers language-scss"><code class="language-scss">set global innodb_fast_shutdown=<span class="token number">0</span> <span class="token punctuation">;</span>mysql --execute=<span class="token string">"SET GLOBAL innodb_fast_shutdown=0"</span>mysqladmin  shutdown[root@db<span class="token number">01</span> /data] # mysqladmin  -S /tmp/mysql<span class="token number">3308.</span>sock  shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-删除ib-logfile"><a href="#4-删除ib-logfile" class="headerlink" title="4. 删除ib_logfile*"></a>4. 删除ib_logfile*</h2><pre><code>防止冲突[root@db01 mysql5710]# rm -rf /data/3306/data/ib_logfile*</code></pre><h2 id="5-替换配置文件、环境变量-（替换成低版本）"><a href="#5-替换配置文件、环境变量-（替换成低版本）" class="headerlink" title="5. 替换配置文件、环境变量 （替换成低版本）"></a>5. 替换配置文件、环境变量 （替换成低版本）</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 mysql5710]# vim /etc/my.cnf[mysqld]user=mysqlbasedir=/data/app/mysql5710#basedir=/data/app/mysql56datadir=/data/3306/datasocket=/tmp/mysql.sock[mysql]socket=/tmp/mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[root@db01 mysql5710]# vim /etc/profileexport PATH=/data/app/mysql5710/bin:$PATH</code></pre><pre><code>[root@db01 mysql5710]# source /etc/profiledb01_5.7 [(none)]&gt;select version();+-----------+| version() |+-----------+| 5.7.10    |+-----------+1 row in set (0.00 sec)db01_5.7 [(none)]&gt;[root@db01 mysql5710]# mysql -Vmysql  Ver 14.14 Distrib 5.7.10, for linux-glibc2.5 (x86_64) using  EditLine wrapper</code></pre><h2 id="6-启动数据库-1"><a href="#6-启动数据库-1" class="headerlink" title="6. 启动数据库"></a>6. 启动数据库</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> mysql<span class="token number">5710</span>]# /etc/init<span class="token number">.</span>d/mysqld start Starting MySQL<span class="token number">..</span> SUCCESS!    全路径启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-执行upgrade"><a href="#7-执行upgrade" class="headerlink" title="7. 执行upgrade"></a>7. 执行upgrade</h2><pre><code>[root@db01 /data] # /data/app/mysql5710/bin/mysql_upgrade   --force [root@db01 mysql5710]# mysql_upgrade --force </code></pre><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> /data] # /data/app/mysql<span class="token number">5710</span>/bin/mysql_upgrade   -S /tmp/mysql<span class="token number">3308.</span>sock   --force Checking server version<span class="token number">.</span>Running queries to upgrade MySQL server<span class="token number">.</span>Checking system database<span class="token number">.</span>mysql<span class="token number">.</span>columns_priv                                 OKmysql<span class="token number">.</span>db                                           OKmysql<span class="token number">.</span>engine_cost                                  OKmysql<span class="token number">.</span>event                                        OKmysql<span class="token number">.</span>func                                         OKmysql<span class="token number">.</span>general_log                                  OKmysql<span class="token number">.</span>gtid_executed                                OKmysql<span class="token number">.</span>help_category                                OKmysql<span class="token number">.</span>help_keyword                                 OKmysql<span class="token number">.</span>help_relation                                OKmysql<span class="token number">.</span>help_topic                                   OKmysql<span class="token number">.</span>innodb_index_stats                           OKmysql<span class="token number">.</span>innodb_table_stats                           OKmysql<span class="token number">.</span>ndb_binlog_index                             OKmysql<span class="token number">.</span>plugin                                       OKmysql<span class="token number">.</span>proc                                         OKmysql<span class="token number">.</span>procs_priv                                   OKmysql<span class="token number">.</span>proxies_priv                                 OKmysql<span class="token number">.</span>server_cost                                  OKmysql<span class="token number">.</span>servers                                      OKmysql<span class="token number">.</span>slave_master_info                            OKmysql<span class="token number">.</span>slave_relay_log_info                         OKmysql<span class="token number">.</span>slave_worker_info                            OKmysql<span class="token number">.</span>slow_log                                     OKmysql<span class="token number">.</span>tables_priv                                  OKmysql<span class="token number">.</span>time_zone                                    OKmysql<span class="token number">.</span>time_zone_leap_second                        OKmysql<span class="token number">.</span>time_zone_name                               OKmysql<span class="token number">.</span>time_zone_transition                         OKmysql<span class="token number">.</span>time_zone_transition_type                    OKmysql<span class="token number">.</span>user                                         OKThe sys schema is already up to date <span class="token punctuation">(</span>version <span class="token number">1.5.2</span><span class="token punctuation">)</span><span class="token number">.</span>Checking databases<span class="token number">.</span>sys<span class="token number">.</span>sys_config                                     OKUpgrade process completed successfully<span class="token number">.</span>Checking if update is needed<span class="token number">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-数据库5-7-5-6降级"><a href="#5-数据库5-7-5-6降级" class="headerlink" title="5-数据库5.7-5.6降级"></a>5-数据库5.7-5.6降级</h1><h2 id="0-恢复5-7-28-环境"><a href="#0-恢复5-7-28-环境" class="headerlink" title="0. 恢复5.7.28 环境"></a>0. 恢复5.7.28 环境</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token number">0.</span> 恢复<span class="token number">5.7.28</span> 环境 [root@db<span class="token number">01</span> data]# pkill mysqld[root@db<span class="token number">01</span> data]# rm -rf /data/<span class="token number">3306</span>/data/*# 恢复配置文件[root@db<span class="token number">01</span> data]# vim /etc/my<span class="token number">.</span>cnf[mysqld]user=mysqlbasedir=/data/app/mysql#basedir=/data/app/mysql<span class="token number">56</span>datadir=/data/<span class="token number">3306</span>/datasocket=/tmp/mysql<span class="token number">.</span>sock[mysql]socket=/tmp/mysql<span class="token number">.</span>sock# 恢复环境变量 export PATH=/data/app/mysql/<span class="token property">bin</span><span class="token punctuation">:</span>$PATH[root@db<span class="token number">01</span> data]# source /etc/profile[root@db<span class="token number">01</span> data]# mysql -Vmysql  Ver <span class="token number">14.14</span> Distrib <span class="token number">5.7.28</span>, for linux-glibc<span class="token number">2.12</span> <span class="token punctuation">(</span>x<span class="token number">86</span>_<span class="token number">64</span><span class="token punctuation">)</span> using  EditLine wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-初始化数据"><a href="#1-初始化数据" class="headerlink" title="1-初始化数据"></a>1-初始化数据</h2><p>从新安装的软件</p><pre><code>mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql --datadir=/data/3306/data</code></pre><h2 id="2-启动数据库"><a href="#2-启动数据库" class="headerlink" title="2-启动数据库"></a>2-启动数据库</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# /etc/init<span class="token number">.</span>d/mysqld startStarting MySQL<span class="token number">.</span>Logging to <span class="token string">'/data/3306/data/db01.err'</span><span class="token number">.</span> SUCCESS!  mysql> select <span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>+-----------+| <span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span> |+-----------+| <span class="token number">5.7.28</span>    |+-----------+<span class="token number">1</span> row in set <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-安装5-6-46二进制版本软件"><a href="#3-安装5-6-46二进制版本软件" class="headerlink" title="3-安装5.6.46二进制版本软件"></a>3-安装5.6.46二进制版本软件</h2><pre><code>/data/app/mysql56</code></pre><h2 id="4-处理5-7-28高版本数据"><a href="#4-处理5-7-28高版本数据" class="headerlink" title="4-处理5.7.28高版本数据"></a>4-处理5.7.28高版本数据</h2><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">set</span> sql_mode<span class="token operator">=</span><span class="token string">'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span> <span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> sql_mode<span class="token operator">=</span><span class="token string">'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span> <span class="token punctuation">;</span><span class="token keyword">select</span> @@sql_mode<span class="token punctuation">;</span>   ALTER TABLE mysql<span class="token punctuation">.</span>proc MODIFY definer <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span><span class="token keyword">event</span> MODIFY definer <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>tables_priv MODIFY Grantor <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>procs_priv MODIFY Grantor <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>tables_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>columns_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>db MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>procs_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> binary DEFAULT <span class="token string">''</span> NOT NULL<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user ADD Password <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">)</span> character <span class="token keyword">set</span> latin1collate latin1_bin NOT NULL <span class="token keyword">default</span> <span class="token string">''</span> AFTER user<span class="token punctuation">;</span>UPDATE mysql<span class="token punctuation">.</span>user SET password <span class="token operator">=</span> authentication_string WHERE<span class="token function">LENGTH</span><span class="token punctuation">(</span>authentication_string<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">41</span> AND plugin <span class="token operator">=</span> <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>UPDATE mysql<span class="token punctuation">.</span>user SET authentication_string <span class="token operator">=</span> <span class="token string">''</span> WHERE<span class="token function">LENGTH</span><span class="token punctuation">(</span>authentication_string<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">41</span> AND plugin <span class="token operator">=</span> <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_category ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_keyword ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_relation ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_topic ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_leap_second ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_name ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_transition  ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_transition_type ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>plugin ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>servers ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user MODIFY plugin <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> COLLATE utf8_binDEFAULT <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>DROP DATABASE sys<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-逻辑备份5-7-28数据"><a href="#5-逻辑备份5-7-28数据" class="headerlink" title="5. 逻辑备份5.7.28数据"></a>5. 逻辑备份5.7.28数据</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> /data] # mysqldump -S /tmp/mysql<span class="token number">3308.</span>sock   -A >/tmp/full<span class="token number">.</span>sql[root@db<span class="token number">01</span> ~]# mysqldump -A >/tmp/full<span class="token number">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-初始化一套5-6-46的空环境"><a href="#6-初始化一套5-6-46的空环境" class="headerlink" title="6. 初始化一套5.6.46的空环境"></a>6. 初始化一套5.6.46的空环境</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 ~]# vim /etc/profileexport PATH=/data/app/mysql56/bin:$PATH[root@db01 ~]# source /etc/profile[root@db01 ~]# mysql -Vmysql  Ver 14.14 Distrib 5.6.46, for linux-glibc2.12 (x86_64) using  EditLine wrapper[root@db01 ~]# mv /etc/my.cnf /etc/my.cnf.bakmv: overwrite ‘/etc/my.cnf.bak’? y[root@db01 data]# rm -rf /data/3316/data/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-1-初始化-5-6"><a href="#6-1-初始化-5-6" class="headerlink" title="6.1-初始化 5.6"></a>6.1-初始化 5.6</h3><pre><code>[root@db01 data]# /data/app/mysql56/scripts/mysql_install_db  --user=mysql --basedir=/data/app/mysql56 --datadir=/data/3316/data[root@db01 data]# systemctl start mysqld3316</code></pre><h2 id="7-恢复备份数据到5-6-46中"><a href="#7-恢复备份数据到5-6-46中" class="headerlink" title="7. 恢复备份数据到5.6.46中"></a>7. 恢复备份数据到5.6.46中</h2><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> data]# mysql -S /tmp/mysql<span class="token number">3316.</span>sock mysql> source /tmp/full<span class="token number">.</span>sql把 /etc/my<span class="token number">.</span>cnf 的移动走<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-8-0的新功能"><a href="#6-8-0的新功能" class="headerlink" title="6-8.0的新功能"></a>6-8.0的新功能</h1><p>mysql-shell工具，8.0以后，可以调用这个命令，升级之前的预检查。</p><pre><code>[root@db01 ~]# mysqlsh root:123@10.0.0.51:3306 -e &quot;util.checkForServerUpgrade()&quot;</code></pre><h2 id="例如：-5-7-28-升级至-8-0-18-版本"><a href="#例如：-5-7-28-升级至-8-0-18-版本" class="headerlink" title="例如：  5.7.28 升级至 8.0.18 版本"></a>例如：  5.7.28 升级至 8.0.18 版本</h2><h3 id="1-下载-8-0-18-版本的-mysql-shell，并安装"><a href="#1-下载-8-0-18-版本的-mysql-shell，并安装" class="headerlink" title="1. 下载 8.0.18 版本的 mysql-shell，并安装"></a>1. 下载 8.0.18 版本的 mysql-shell，并安装</h3><pre><code>[root@db01 app]# yum install -y mysql-shell-8.0.18-1.el7.x86_64.rpm</code></pre><h3 id="2-恢复5728环境"><a href="#2-恢复5728环境" class="headerlink" title="2. 恢复5728环境"></a>2. 恢复5728环境</h3><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> data]# pkill mysqld[root@db<span class="token number">01</span> data]# rm -rf /data/<span class="token number">3306</span>/data/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-恢复配置文件"><a href="#3-恢复配置文件" class="headerlink" title="3.恢复配置文件"></a>3.恢复配置文件</h3><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# vim /etc/my<span class="token number">.</span>cnf[mysqld]user=mysqlbasedir=/data/app/mysql#basedir=/data/app/mysql<span class="token number">56</span>datadir=/data/<span class="token number">3306</span>/datasocket=/tmp/mysql<span class="token number">.</span>sock[mysql]socket=/tmp/mysql<span class="token number">.</span>sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-恢复环境变量"><a href="#4-恢复环境变量" class="headerlink" title="4.恢复环境变量"></a>4.恢复环境变量</h3><pre class="line-numbers language-scss"><code class="language-scss">export PATH=/data/app/mysql/<span class="token property">bin</span><span class="token punctuation">:</span><span class="token variable">$PATH</span>[root@db<span class="token number">01</span> data]# source /etc/profile[root@db<span class="token number">01</span> data]# mysql -Vmysql  Ver <span class="token number">14.14</span> Distrib <span class="token number">5.7.28</span>, for linux-glibc<span class="token number">2.12</span> <span class="token punctuation">(</span>x<span class="token number">86</span>_<span class="token number">64</span><span class="token punctuation">)</span> using  EditLine wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-初始化数据"><a href="#5-初始化数据" class="headerlink" title="5.初始化数据"></a>5.初始化数据</h3><pre class="line-numbers language-scss"><code class="language-scss">mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql --datadir=/data/<span class="token number">3306</span>/data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-启动数据库-2"><a href="#6-启动数据库-2" class="headerlink" title="6.启动数据库"></a>6.启动数据库</h3><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# /etc/init<span class="token number">.</span>d/mysqld startStarting MySQL<span class="token number">.</span>Logging to <span class="token string">'/data/3306/data/db01.err'</span><span class="token number">.</span> SUCCESS! mysql> grant all on *<span class="token number">.</span>* to root@<span class="token string">'10.0.1.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-预-检查"><a href="#7-预-检查" class="headerlink" title="7. 预 检查"></a>7. 预 检查</h3><p>检查</p><pre class="line-numbers language-shell"><code class="language-shell">mysqlsh root:123@10.0.0.51:3306 -e "util.checkForServerUpgrade()"[root@db01 ~] # mysqlsh root:123@10.0.1.51:3308 -e "util.checkForServerUpgrade()"-----------[root@db01 ~] # mysqlsh root:123@10.0.1.51:3308 -e "util.checkForServerUpgrade()"WARNING: Using a password on the command line interface can be insecure.The MySQL server at 10.0.1.51:3308, version 5.7.28 - MySQL Community Server(GPL), will now be checked for compatibility issues for upgrade to MySQL8.0.18...1) Usage of old temporal type  No issues found2) Usage of db objects with names conflicting with new reserved keywords  No issues found3) Usage of utf8mb3 charset  No issues found<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx多策略流量分发</title>
      <link href="/2020/02/24/nginx-duo-ce-lue-liu-liang-fen-fa/"/>
      <url>/2020/02/24/nginx-duo-ce-lue-liu-liang-fen-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx多策略流量分发"><a href="#Nginx多策略流量分发" class="headerlink" title="Nginx多策略流量分发"></a>Nginx多策略流量分发</h2><h2 id="1、场景描述"><a href="#1、场景描述" class="headerlink" title="1、场景描述"></a>1、场景描述</h2><p>在实际生产环境中，流量分发有很多情况，下面主要讲讲以下两种流量分发场景：</p><ol><li>新版本上线，为了保证新版本稳定性，需要用线上的流量的引入，对新版本进行真实流量测试。如果新版本上线有问题，为降低影响范围，我们对流量的引入应该为从小到大的策略。</li><li>现如今是移动端的时代，而移动端和pc端的设备的不同，需要对移动端和pc的流量进行不同的处理，同时可以针对两种设备的不同需求可以单独升级，可控性强，且架构灵活。</li></ol><h3 id="2、nginx策略配置"><a href="#2、nginx策略配置" class="headerlink" title="2、nginx策略配置"></a>2、nginx策略配置</h3><p>针对以上两种场景，nginx做为强大的web服务器，通过简单的配置来就可以满足我们的需求，下面我们就开始实战：</p><pre><code>nginx version: nginx/1.16.1os version: centos 7</code></pre><p>完成以上需求，主要依赖于nginx的两个模块：</p><ol><li>ngx_http_split_clients_module 文档参考地址: <a href="http://nginx.org/en/docs/http/ngx_http_split_clients_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_split_clients_module.html</a></li><li>ngx_http_map_module 文档参考地址：<a href="http://nginx.org/en/docs/http/ngx_http_map_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_map_module.html</a></li></ol><h3 id="3、流量按比例分配-ngx-http-split-clients-module"><a href="#3、流量按比例分配-ngx-http-split-clients-module" class="headerlink" title="3、流量按比例分配[ngx_http_split_clients_module]"></a>3、流量按比例分配[ngx_http_split_clients_module]</h3><p>按比例分配流量，通过ngx_http_split_clients_module模块实现，该模块可通过客户端的某些属性对客户端通过hash算法按比例分配，这些属性包括客户端ip等，通过hash函数，将不同客户端ip进行比例分配，从而可以将部分流量引入新版本服务中，下面看一下具体配置：</p><pre><code>user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    access_log  /var/log/nginx/access.log  main;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    # 根据内置变量变量${remote_addr}进行1:1分发，并将v1和v2的值赋予$version变量    split_clients &quot;${remote_addr}AAA&quot; $version {                   50%               v1;                   *                 v2;    }    # v1版本服务    server {          listen 8081;          location  / {              return 200 &quot;v1\n&quot;;          }    }    # v2版本服务    server {          listen 8082;          location  / {              return 200 &quot;v2\n&quot;;          }    }    server {        listen 80;        location / {            proxy_pass http://127.0.0.1/$version;        }        # v2版本转发        location  /v2 {            proxy_pass http://127.0.0.1:8082/;        }        # v1版本转发        location  /v1 {            proxy_pass http://127.0.0.1:8081/;        }    }}</code></pre><p>在配置中，我们利用<code>split_clients</code>指令对<code>$remote_addr</code>变量进行hash运算，并按1:1比例随机地将<code>$version</code>的值赋予v1和v2，*表示剩余的比例，即1-50%，这样就可以通过<code>$version</code>的值进行流量分配，具体可看nginx配置，已有注释。可以看到在版本转发时，在<code>proxy_pass</code>转发路径最后加了/，是为了把版本路径(v1|v2)去掉，然后再进行转发，可以保持原有的请求uri路径不变，此处算是一个小技巧。</p><p>实际效果：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/QFzRdz9libEYSsND4W9avicYCDsy6pICZibcWKzJlrBfLOeB6I5E5EGyicIC4luoiauicVU2gPhfPnx1EyibzB6Z7dBaw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1" alt="img"></p><h3 id="4、移动端和pc端流量分配-ngx-http-map-module"><a href="#4、移动端和pc端流量分配-ngx-http-map-module" class="headerlink" title="4、移动端和pc端流量分配[ngx_http_map_module]"></a>4、移动端和pc端流量分配[ngx_http_map_module]</h3><p>ngx_http_map_module模块可通过客户端属性按一定规则匹配映射为新的变量，我们可以对客户端的ua进行正则匹配来区分流量，从而进行流量分发，下面是nginx配置文件示例：</p><pre><code>user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    access_log  /var/log/nginx/access.log  main;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    map &quot;${http_user_agent}&quot; $uatype {           default           nomobile;           &quot;~*mobile&quot;        mobile;    }    # pc端服务    server {          listen 8082;          location  / {              return 200 &quot;nomobile\n&quot;;          }    }    # 移动端服务    server {          listen 8081;          location  / {              return 200 &quot;mobile\n&quot;;          }    }    server {        listen 80;        location / {            proxy_pass http://127.0.0.1/$uatype;        }        # pc端版本转发        location  /nomobile {            proxy_pass http://127.0.0.1:8082/;        }        # 移动端版本转发        location  /mobile {            proxy_pass http://127.0.0.1:8081/;        }    }}</code></pre><p>在nginx配置中，我们可以看到使用map指令，对客户端的ua进行正则匹配，一旦匹配成功，$uatype将被分配为mobile，并根据此变量的值进行转发，剩下未匹配的由default 指定，此时$uatype为nomobile，从而转发到pc端服务，同时在转发到后端时，同样在proxy_pass后加/，也是为了去掉nomobile和mobile前缀。在使用map的正则匹配时，代表区分大小写的匹配，*则为不区分大小写。</p><p>实际效果：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/QFzRdz9libEYSsND4W9avicYCDsy6pICZibrrcbDPt6GFaqELTxdchZsteca2nOZds9H7zNM8mfhVdY0nc7SC2nhA/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1" alt="img"></p><h4 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h4><p>以上只是列举典型的流量分发方式，我们可以根据<code>$http_name</code>或者<code>$arg_name</code>来定制化需求，<code>$http_name</code>获取自定义头部，<code>$arg_name</code>获取自定义<code>uri</code>参数，这就给予我们更多的可能，比如我们可以再用户登录后，添加自定义头部，使用自定义头部，map指令进行流量拆分，更多的用途需要我们自行发挥想象进行探索。</p><p>来源:</p><p><a href="https://mp.weixin.qq.com/s/09R9l0cIcn4uogPNJbYwvw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/09R9l0cIcn4uogPNJbYwvw</a></p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写Shell脚本的最佳实践</title>
      <link href="/2020/02/24/bian-xie-shell-jiao-ben-de-zui-jia-shi-jian/"/>
      <url>/2020/02/24/bian-xie-shell-jiao-ben-de-zui-jia-shi-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="1-编写Shell脚本的最佳实践"><a href="#1-编写Shell脚本的最佳实践" class="headerlink" title="1. 编写Shell脚本的最佳实践"></a>1. 编写Shell脚本的最佳实践</h1><p><strong>开头有“蛇棒”</strong></p><p><img src="shell.png" alt></p><p>所谓shebang其实就是在很多脚本的第一行出现的以”#!”开头的注释，他指明了当我们没有指定解释器的时候默认的解释器，一般可能是下面这样：</p><ul><li><pre><code>#!/bin/bash</code></pre></li></ul><p>当然，解释器有很多种，除了bash之外，我们可以用下面的命令查看本机支持的解释器:</p><ul><li><pre><code>$ cat /etc/shells/bin/sh/bin/dash/bin/bash/bin/rbash/usr/bin/screen</code></pre></li></ul><p>当我们直接使用<code>./a.sh</code>来执行这个脚本的时候，如果没有shebang，那么它就会默认用<code>$SHELL</code>指定的解释器，否则就会用shebang指定的解释器。<br>不过，上面这种写法可能不太具备适应性，一般我们会用下面的方式来指定：</p><ul><li><pre><code>#!/usr/bin/env bash</code></pre></li></ul><p>这种方式是我们推荐的使用方式。</p><h2 id="代码有注释"><a href="#代码有注释" class="headerlink" title="代码有注释"></a><strong>代码有注释</strong></h2><p>注释，显然是一个常识，不过这里还是要再强调一下，这个在shell脚本里尤为重要。因为很多单行的shell命令不是那么浅显易懂，没有注释的话在维护起来会让人尤其的头大。<br>注释的意义不仅在于解释用途，而在于告诉我们注意事项，就像是一个README。<br>具体的来说，对于shell脚本，注释一般包括下面几个部分：</p><pre><code>shebang脚本的参数脚本的用途脚本的注意事项脚本的写作时间，作者，版权等各个函数前的说明注释一些较复杂的单行命令注释</code></pre><h2 id="参数要规范"><a href="#参数要规范" class="headerlink" title="参数要规范"></a><strong>参数要规范</strong></h2><p>这一点很重要，当我们的脚本需要接受参数的时候，我们一定要先判断参数是否合乎规范，并给出合适的回显，方便使用者了解参数的使用。</p><p>最少，最少，我们至少得判断下参数的个数吧：</p><pre><code>if [[ $# != 2 ]];then    echo &quot;Parameter incorrect.&quot;    exit 1fi</code></pre><h2 id="变量和魔数"><a href="#变量和魔数" class="headerlink" title="变量和魔数"></a><strong>变量和魔数</strong></h2><p>一般情况下我们会将一些重要的环境变量定义在开头，确保这些变量的存在。</p><pre><code>source /etc/profileexport PATH=”/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/apps/bin/”这种定义方式有一个很常见的用途，最典型的应用就是，当我们本地安装了很多java版本时，我们可能需要指定一个java来用。那么这时我们就会在脚本开头重新定义JAVA_HOME以及PATH变量来进行控制。</code></pre><p>同时，一段好的代码通常是不会有很多硬编码在代码里的“魔数”的。如果一定要有，通常是用一个变量的形式定义在开头，然后调用的时候直接调用这个变量，这样方便日后的修改。</p><h2 id="缩进有规矩"><a href="#缩进有规矩" class="headerlink" title="缩进有规矩"></a><strong>缩进有规矩</strong></h2><p>对于shell脚本，缩进是个大问题。因为很多需要缩进的地方(比如if,for语句)都不长，所有很多人都懒得去缩进，而且很多人不习惯用函数，导致缩进功能被弱化。</p><p>其实正确的缩进是很重要的，尤其是在写函数的时候，否则我们在阅读的时候很容易把函数体跟直接执行的命令搞混。<br>常见的缩进方法主要有”soft tab”和”hard tab”两种。</p><ul><li><p>所谓soft tab就是使用n个空格进行缩进(n通常是2或4)</p></li><li><p>所谓hard tab当然就是指真实的”\t”字符</p><p>这里不去撕哪种方式最好，只能说各有各的优劣。</p><p>反正我习惯用hard tab。</p></li></ul><p>  对于if和for语句之类的，我们最好不要把then，do这些关键字单独写一行，这样看上去比较丑。</p><h2 id="命名有标准"><a href="#命名有标准" class="headerlink" title="命名有标准"></a><strong>命名有标准</strong></h2><p>所谓命名规范，基本包含下面这几点：</p><ol><li>文件名规范，以.sh结尾，方便识别</li><li>变量名字要有含义，不要拼错</li><li>统一命名风格，写shell一般用小写字母加下划线</li></ol><h2 id="编码要统一"><a href="#编码要统一" class="headerlink" title="编码要统一"></a><strong>编码要统一</strong></h2><p>在写脚本的时候尽量使用UTF-8编码，能够支持中文等一些奇奇怪怪的字符。不过虽然能写中文，但是在写注释以及打log的时候还是尽量英文，毕竟很多机器还是没有直接支持中文的，打出来可能会有乱码。</p><p>这里还尤其需要注意一点，就是当我们是在windows下用utf-8编码来写shell脚本的时候，一定要注意这个utf-8是否是有BOM的。默认情况下windows判断utf-8格式是通过在文件开头加上三个EF BB BF字节来判断的，但是在Linux中默认是无BOM的。因此如果我们是在windows下写脚本的时候，一定要注意将编码改成Utf-8无BOM，一般用notepad++之类的编辑器都能改。否则，在Linux下运行的时候就会识别到开头的三个字符，从而报一些无法识别命令的错。<br>当然，对于跨平台写脚本还有一个比较常见的问题就是换行符不同。windows默认是\r\n而unix下是\n。不过有两个小工具可以非常方便的解决这个问题:dos2unix,unix2dos。</p><h2 id="权限记得加"><a href="#权限记得加" class="headerlink" title="权限记得加"></a><strong>权限记得加</strong></h2><p>这一点虽然很小，但是我个人却经常忘记，不加执行权限会导致无法直接执行，有点讨厌。。。</p><h2 id="日志和回显"><a href="#日志和回显" class="headerlink" title="日志和回显"></a><strong>日志和回显</strong></h2><p>日志的重要性不必多说，能够方便我们回头纠错，在大型的项目里是非常重要的。<br>如果这个脚本是供用户直接在命令行使用的，那么我们最好还要能够在执行时实时回显执行过程，方便用户掌控。<br>有时候为了提高用户体验，我们会在回显中添加一些特效，比如颜色啊，闪烁啊之类的，具体可以参考ANSI/VT100 Control sequences这篇文章的介绍。</p><h2 id="密码要移除"><a href="#密码要移除" class="headerlink" title="密码要移除"></a><strong>密码要移除</strong></h2><p>不要把密码硬编码在脚本里，不要把密码硬编码在脚本里，不要把密码硬编码在脚本里。<br>重要的事情说三遍，尤其是当脚本托管在类似Github这类平台中时。。。</p><h2 id="太长要分行"><a href="#太长要分行" class="headerlink" title="太长要分行"></a><strong>太长要分行</strong></h2><p>在调用某些程序的时候，参数可能会很长，这时候为了保证较好的阅读体验，我们可以用反斜杠来分行：</p><pre><code>./configure \–prefix=/usr \–sbin-path=/usr/sbin/nginx \–conf-path=/etc/nginx/nginx.conf \</code></pre><blockquote><p>注意在反斜杠前有个空格。</p></blockquote><h2 id="代码有效率"><a href="#代码有效率" class="headerlink" title="代码有效率"></a><strong>代码有效率</strong></h2><p>在使用命令的时候要了解命令的具体做法，尤其当数据处理量大的时候，要时刻考虑该命令是否会影响效率。<br>比如下面的两个sed命令：</p><pre><code>sed -n &#39;1p&#39; filesed -n &#39;1p;1q&#39; file</code></pre><p>他们的作用一样，都是获取文件的第一行。但是第一条命令会读取整个文件，而第二条命令只读取第一行。当文件很大的时候，仅仅是这样一条命令不一样就会造成巨大的效率差异。<br>当然，这里只是为了举一个例子，这个例子真正正确的用法应该是使用<code>head -n1 file</code>命令。。。</p><h2 id="勤用双引号"><a href="#勤用双引号" class="headerlink" title="勤用双引号"></a><strong>勤用双引号</strong></h2><p>几乎所有的大佬都推荐在使用”$”来获取变量的时候最好加上双引号。</p><p>不加上双引号在很多情况下都会造成很大的麻烦，为什么呢？举一个例子：</p><pre><code>#!/bin/shvar=&quot;*.sh&quot;echo $varecho &quot;$var&quot;他的运行结果如下：</code></pre><pre><code>a.sh*.sh为啥会这样呢？其实可以解释为他执行了下面的命令：</code></pre><pre><code>echo *.shecho &quot;*.sh&quot;</code></pre><p>在很多情况下，在将变量作为参数的时候，一定要注意上面这一点，仔细体会其中的差异。上面只是一个非常小的例子，实际应用的时候由于这个细节导致的问题实在是太多了。。。</p><h2 id="巧用main函数"><a href="#巧用main函数" class="headerlink" title="巧用main函数"></a><strong>巧用main函数</strong></h2><p>我们知道，像java，C这样的编译型语言都会有一个函数入口，这种结构使得代码可读性很强，我们知道哪些直接执行，那些是函数。但是脚本不一样，脚本属于解释性语言，从第一行直接执行到最后一行，如果在这当中命令与函数糅杂在一起，那就非常难读了。<br>用python的朋友都知道，一个合乎标准的python脚本大体上至少是这样的：</p><pre><code>def func1():    passdef func2():    passif __name__==&#39;__main__&#39;:    func1()    func2()</code></pre><p>他用一个很巧妙的方法实现了我们习惯的main函数，使得代码可读性更强。<br>在shell中，我们也有类似的小技巧:</p><pre><code>#!/usr/bin/env bashfunc1(){    }func2(){    }main(){    func1    func2}main &quot;$@&quot;我们可以采用这种写法，同样实现类似的main函数，使得脚本的结构化程度更好。</code></pre><h2 id="考虑作用域"><a href="#考虑作用域" class="headerlink" title="考虑作用域"></a><strong>考虑作用域</strong></h2><p>shell中默认的变量作用域都是全局的，比如下面的脚本：</p><pre><code>#!/usr/bin/env bashvar=1func(){    var=2}funcecho $var他的输出结果就是2而不是1，这样显然不符合我们的编码习惯，很容易造成一些问题。</code></pre><p>因此，相比直接使用全局变量，我们最好使用<code>local readonly</code>这类的命令，其次我们可以使用<code>declare</code>来声明变量。这些方式都比使用全局方式定义要好。</p><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a><strong>函数返回值</strong></h2><p>在使用函数的时候一定要注意，shell中函数的返回值只能是整数，估计是因为一般情况下一个函数的返回值通常表示这个函数的运行状态，所以一般都是0或者是１就够了，因此就设计成了这样。不过，如果非得想传递字符串，也可以通过下面变通的方法:</p><pre><code>func(){    echo &quot;2333&quot;}res=$(func)echo &quot;This is from $res.&quot;这样，通过echo或者print之类的就可以做到传一些额外参数的目的。</code></pre><h2 id="间接引用值"><a href="#间接引用值" class="headerlink" title="间接引用值"></a><strong>间接引用值</strong></h2><p>什么叫间接引用？比如下面这个场景：</p><pre><code>VAR1=&quot;2323232&quot;VAR2=&quot;VAR1&quot;我们有一个变量VAR1，又有一个变量VAR2，这个VAR2的值是VAR1的名字，那么我们现在想通过VAR2来获取VAR1的值，这时候应该怎么办呢？</code></pre><p>比较土鳖的方法是这样：</p><pre><code>eval echo \$$VAR2啥意思呢？其实就是构造了一个字符串&quot;echo $XXX&quot;，这个XXX就是$VAR2的值VAR1，然后再用eval强制解析，这样就做到了变相取值。</code></pre><p>这个用法的确可行，但是看起来十分的不舒服，很难直观的去理解，我们并不推荐。而且事实上我们本身就不推荐使用eval这个命令。<br>比较舒服的写法是下面这样:</p><pre><code>echo ${!VAR1}通过在变量名前加一个!就可以做到简单的间接引用了。</code></pre><p>不过需要注意的是，用上面的方法，我们只能够做到取值，而不能做到赋值。如果想要做到赋值，还要老老实实的用eval来处理:</p><pre><code>VAR1=VAR2eval $VAR1=233echo $VAR2</code></pre><h2 id="巧用heredocs"><a href="#巧用heredocs" class="headerlink" title="巧用heredocs"></a><strong>巧用heredocs</strong></h2><p>所谓heredocs，也可以算是一种多行输入的方法，即在”&lt;&lt;”后定一个标识符，接着我们可以输入多行内容，直到再次遇到标识符为止。</p><p>使用heredocs，我们可以非常方便的生成一些模板文件：</p><pre><code>cat&gt;&gt;/etc/rsyncd.conf &lt;&lt; EOFlog file = /usr/local/logs/rsyncd.logtransfer logging = yeslog format = %t %a %m %f %bsyslog facility = local3EOF</code></pre><h2 id="学会查路径"><a href="#学会查路径" class="headerlink" title="学会查路径"></a><strong>学会查路径</strong></h2><p>很多情况下，我们会先获取当前脚本的路径，然后一这个路径为基准，去找其他的路径。通常我们是直接用<code>pwd</code>以期获得脚本的路径。<br>不过其实这样是不严谨的，<code>pwd</code>获得的是当前shell的执行路径，而不是当前脚本的执行路径。<br>正确的做法应该是下面这两种：</p><pre><code>script_dir=$(cd $(dirname $0) &amp;&amp; pwd)script_dir=$(dirname $(readlink -f $0 ))应当先cd进当前脚本的目录然后再pwd，或者直接读取当前脚本的所在路径。</code></pre><h2 id><a href="#" class="headerlink" title=" "></a> </h2><h2 id="代码要简短"><a href="#代码要简短" class="headerlink" title="代码要简短"></a><strong>代码要简短</strong></h2><p>这里的简短不单单是指代码长度，而是只用到的命令数。原则上我们应当做到，能一条命令解决的问题绝不用两条命令解决。这不仅牵涉到代码的可读性，而且也关乎代码的执行效率。</p><p>最最经典的例子如下：</p><pre><code>cat /etc/passwd | grep rootgrep root /etc/passwdcat命令最为人不齿的用法就是这样，用的没有任何意义，明明一条命令可以解决，他非得加根管道。。。</code></pre><p>其实代码简短在还能某种程度上能保证效率的提升，比如下面的例子：</p><pre><code>find . -name &#39;*.txt&#39; |xargs sed -i s/233/666/gfind . -name &#39;*.txt&#39; |xargs sed -i s/235/626/gfind . -name &#39;*.txt&#39; |xargs sed -i s/333/616/gfind . -name &#39;*.txt&#39; |xargs sed -i s/233/664/gfind . -name &#39;*.txt&#39; |xargs sed -i &quot;s/233/666/g;s/235/626/g;s/333/616/g;s/233/664/g&quot;这两种方法做的事情都一样，就是查找所有的.txt后缀的文件并做一系列替换。前者是多次执行find，后者是执行一次find，但是增加了sed的模式串。第一种更直观一点，但是当替换的量变大的时候，第二种的速度就会比第一种快很多。这里效率提升的原因，就是第二种只要执行一次命令，而第一种要执行多次。</code></pre><p>并且，巧用xargs命令，我们还可以十分方便的进行并行化处理:</p><pre><code>find . -name &#39;*.txt&#39; |xargs -P $(nproc) sed -i &quot;s/233/666/g;s/235/626/g;s/333/616/g;s/233/664/g&quot;</code></pre><p>通过-P参数指定并行度，可以进一步加快执行效率。</p><h2 id="命令并行化"><a href="#命令并行化" class="headerlink" title="命令并行化"></a><strong>命令并行化</strong></h2><p>当我们需要充分考虑执行效率时，我们可能需要在执行命令的时候考虑并行化。shell中最简单的并行化是通过”&amp;”以及”wait”命令来做:</p><pre><code>func(){    ｝for((i=0;i&lt;10;i++))do    func &amp;donewait当然，这里并行的次数不能太多，否则机器会卡死。稍微正确的做法比较复杂，以后再讨论，如果图省事可以使用parallel命令来做，或者是用上面提到的xargs来处理。</code></pre><h2 id="全文本检索"><a href="#全文本检索" class="headerlink" title="全文本检索"></a><strong>全文本检索</strong></h2><p>我们知道，当我们想在文件夹下所有的txt文件中检索某一个字符串(比如233)的时候，我们可能会用类似这样的命令：</p><ul><li><pre><code>find . -name &#39;*.txt&#39; -type f | xargs grep 2333很多情况下，这个命令会想我们所想的找到对应的匹配行，但是我们需要注意两个小问题。</code></pre></li></ul><p>find命令会符合要求的匹配文件名，但是如果文件名包含<strong>空格</strong>，这时候将文件名传给grep的时候就会有问题，这个文件就会被当成两个参数，这时候就要加一层处理，保证用空格分开的文件名不会被当成两个参数：</p><ul><li><pre><code>find . -type f|xargs -i echo &#39;&quot;{}&quot;&#39;|xargs grep 2333有时候，文件的字符集可能跟终端的字符集不一致，这时候就会导致grep在搜索时将文件当成二进制文件从而报binary file matches之类的问题。这时候要么用iconv之类的字符集转换工具将字符集进行切换，要么就在不影响查找的情况下对grep加-a参数，将所有文件看成文本文件:</code></pre></li></ul><pre><code>- </code></pre><p>find . -type f|xargs grep -a 2333<br>```</p><h2 id="使用新写法"><a href="#使用新写法" class="headerlink" title="使用新写法"></a><strong>使用新写法</strong></h2><p>这里的新写法不是指有多厉害，而是指我们可能更希望使用较新引入的一些语法，更多是偏向代码风格的，比如</p><ol><li>尽量使用<code>func(){}</code>来定义函数，而不是<code>func{}</code></li><li>尽量使用<code>[[]]</code>来代替<code>[]</code></li><li>尽量使用<code>$()</code>将命令的结果赋给变量，而不是反引号</li><li>在复杂的场景下尽量使用printf代替echo进行回显</li></ol><p>事实上，这些新写法很多功能都比旧的写法要强大，用的时候就知道了。</p><p><strong>其他小tip</strong></p><p>考虑到还有很多零碎的点，就不一一展开了，这里简单提一提。</p><ul><li><p>路径尽量保持绝对路径，绝多路径不容易出错，如果非要用相对路径，最好用./修饰</p></li><li><p>优先使用bash的变量替换代替awk sed，这样更加简短</p></li><li><p>简单的if尽量使用&amp;&amp; ||，写成单行。</p><p>比如<code>[[ x &gt; 2]] &amp;&amp; echo x</code></p></li><li><p>当export变量时，尽量加上子脚本的namespace，保证变量不冲突</p></li><li><p>会使用trap捕获信号，并在接受到终止信号时执行一些收尾工作</p></li><li><p>使用mktemp生成临时文件或文件夹</p></li><li><p>利用/dev/null过滤不友好的输出信息</p></li><li><p>会利用命令的返回值判断命令的执行情况</p></li><li><p>使用文件前要判断文件是否存在，否则做好异常处理</p></li><li><p>不要处理ls后的数据(比如<code>ls -l | awk &#39;{ print $8 }&#39;</code>)，ls的结果非常不确定，并且平台有关</p></li><li><p>读取文件时不要使用for loop而要使用while read</p></li><li><p>使用<code>cp -r</code>命令复制文件夹的时候要注意如果目的文件夹不存在则会创建，如果存在则会复制到该文件的子文件夹下</p></li></ul><blockquote><p>来源： </p><p><a href="https://blog.mythsman.com/post/5d2ab67ff678ba2eb3bd346f/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="noopener">https://blog.mythsman.com/post/5d2ab67ff678ba2eb3bd346f/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三章mysql连接管理</title>
      <link href="/2020/02/23/02/"/>
      <url>/2020/02/23/02/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux禁止ping以及开启ping的方法</title>
      <link href="/2020/02/23/linux-jin-zhi-ping-yi-ji-kai-qi-ping-de-fang-fa/"/>
      <url>/2020/02/23/linux-jin-zhi-ping-yi-ji-kai-qi-ping-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>Linux默认是允许Ping响应的，系统是否允许Ping由2个因素决定的 ：</p><p>作者：Happiness</p><p>来源：<a href="https://urlify.cn/Mr6zMb" target="_blank" rel="noopener">https://urlify.cn/Mr6zMb</a></p><pre><code>\1. 内核参数\2. 防火墙</code></pre><p>需要2个因素同时允许才能允许Ping，2个因素有任意一个禁Ping就无法Ping。</p><p><strong>内核参数设置</strong></p><p>禁止ping设置：</p><p>1）临时禁止ping命令如下所示：</p><pre><code># 如果想要临时允许的话只需要把下面的1换成0即可echo 1 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all</code></pre><p>2）永久禁止ping命令如下所示(如果想要永久允许的话只需要把下面的1换成0即可)</p><pre><code>在 /etc/sysctl.conf 文件中增加一行net.ipv4.icmp_echo_ignore_all=1</code></pre><p>修改完成后执行 sysctl -p 使新的配置生效。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/1TDxR6xkRSGyTviaShq1Dymib1mhVQuDgGITq3Sr1tChmqa27fFdKibP30KbheVibicGTznFk2PQzHzI6iaJhKlN38OQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p><p><strong>防火墙设置</strong></p><p>(注意：此处的方法的前提是内核配置是默认值，也就是没有禁止ping)</p><p>这里以iptables防火墙为例：</p><p>1）允许ping设置</p><pre><code>iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT  iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT</code></pre><p>或者可以临时停止防火墙操作：</p><ul><li><pre><code>service iptables stop</code></pre></li></ul><p>2）禁止ping设置</p><ul><li><pre><code>iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中小企业如何做运维自动化</title>
      <link href="/2020/02/23/zhong-xiao-qi-ye-ru-he-zuo-yun-wei-zi-dong-hua/"/>
      <url>/2020/02/23/zhong-xiao-qi-ye-ru-he-zuo-yun-wei-zi-dong-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="中小企业如何做运维自动化"><a href="#中小企业如何做运维自动化" class="headerlink" title="中小企业如何做运维自动化"></a>中小企业如何做运维自动化</h2><p>以下文章来源于Spug运维 ，作者Spug运维</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTkwODIyNA==&mid=2247495002&idx=1&sn=a1d2294df17e336130e16ac02c551bfd&chksm=9bbb48b5acccc1a3abc95c560fe5f6ee7702c0e0ac3c0e7fca8bef208b5db704b421bd7e684f&scene=126&sessionid=1587731486&key=3afabdf7cfda3d9e0bf2620827790131c5a8864a02f0dfaa707a1b841048b8633de99e609a570b07f035c12b34c1180ec3efdf398bad1fd1437a257a33401b6c1d66ab537be2a1da8a3276afc6b9af83&ascene=1&uin=Mjk0MTk1MjA1OA%3D%3D&devicetype=Windows+10+x64&version=62090069&lang=zh_CN&exportkey=ArKwIKtLZaVLOE1sFS2Z%2FV0%3D&pass_ticket=OwHSpW5hA25T1dXIv%2B3kelVvbcjcUIX1A0F3%2F%2F5oNFe4rt6fipRmOg51lJoU2UqE&winzoom=1#" target="_blank" rel="noopener"><img src="http://wx.qlogo.cn/mmhead/Q3auHgzwzM5vicZkuR10ibuTysOr7hMD1yM7bORz5z2ibTWWnaS8XYTJQ/0" alt="Spug运维"><strong>Spug运维</strong><a href="http://spug.dev" target="_blank" rel="noopener">http://spug.dev</a></a></p><p><strong>我们先看一下中小企业面临的问题：</strong></p><p>1、人员有限，小一点的公司专业运维可能没有，开发自己上线，也有可能1-2个运维人员，基本不会投入专门的运维开发来开发运维自动化平台。</p><p>2、服务器少，可能不超过50台服务器。</p><p>3、版本更新迭代比较快，需要快速方便的发布回滚。</p><p><strong>中小企业运维自动化常见做法：</strong></p><p>1、Gitlab+Jenkins，创建Jenkins任务，使用Jenkins登录服务器执行脚本实现发布，配合服务器多个脚本实现对服务器管理。</p><p>2、Gitlab+Jenkins+Ansible，使用Jenkins调用Ansible登录服务器执行脚本实现代码的发布，平时服务器管理使用Anaible进行服务器管理。</p><p>3、K8S平台，使用K8s发布平台，打包应用Docker镜像，通过K8s发布到线上。</p><p>4、使用开源的运维自动化平台发布管理，Github上有很多优秀的开源项目，可以使用。</p><p>虽然可以通过上面的几种方法把发布和经常操作的都实现自动化，但是避免不了登录服务器操作命令、配置任务计划，修改应用配置文件，配置服务器监控等。那么有没有开源平台可以很方便的实现上面说到的这些功能呢？</p><p>下面就给给大家推荐一款面向中小企业的开源运维自动化平台：<strong>Spug</strong></p><p><strong>平台介绍：</strong></p><p><strong>Spug</strong>，中文名称：麻雀。寓意：麻雀虽小，五脏俱全，它是面向中小型企业设计的无 Agent的自动化运维平台，整合了主机管理、主机批量执行、主机在线终端、应用发布、任务计划、配置中心、监控、报警等一系列功能。</p><p><strong>开源地址：</strong></p><blockquote><p>仓库：<a href="https://github.com/openspug/spug" target="_blank" rel="noopener">https://github.com/openspug/spug</a></p><p>官网：spug.dev</p><p>公众号：openspug</p></blockquote><p><strong>技术栈：</strong></p><blockquote><p>后端：Python + Django</p><p>前端：React + Ant Design</p></blockquote><p><strong>功能特性：</strong></p><ul><li>批量执行: 命令可以在线批量执行</li><li>在线终端: 主机支持浏览器在线终端登录</li><li>任务计划: 灵活的任务计划，支持间隔执行，一次性执行，Crontab风格执行</li><li>发布部署: 支持自动创建应用，支持工单，自定义发布流程</li><li>配置中心: 支持KV、文本、Json等格式的配置</li><li>监控中心: 支持站点、端口、进程、自定义等监控</li><li>报警中心: 支持短信、邮件、钉钉、微信等报警方式</li><li>优雅美观: 基于 Ant Design 的UI界面</li></ul><p><strong>模块介绍：</strong></p><p>*<em>1、批量执行<br>*</em></p><p>批量执行可以同时选择多台主机执行命令，也可以将经常执行的命令保存到模版，选择执行模板里面的命令执行，执行结果实时在界面上返回。</p><p>*<em>2、在线终端<br>*</em></p><p>在线终端，可以很方便的通过浏览器在线终端登录到主机上操作命令。</p><p>3、应用发布</p><p>应用发布，支持应用自动创建、部署、发布，创建应用只需要输入要部署的应用Git地址，和部署的目标服务器目标目录，定义好发布前发布中执行的命令就可以配置好应用的自动化发布部署。</p><p>应用发布支持提交工单，工单审核，工单审批通过后自动发布。</p><p>4、任务计划</p><p>任务计划，支持间隔执行，一次性执行，Crontab格式执行。</p><p>5、配置中心</p><blockquote><p>配置中心，应用配置支持在线化配置，支持多环境配置，配置格式支持KV，Txt，Json格式的配置</p></blockquote><p>6、监控中心</p><p>监控中心执行站点监控，进程监控，端口监控，以及自定义脚本监控，并支持微信，钉钉，邮件报警。</p><p>7、报警中心</p><p>报警支持报警联系人，报警组管理。可以把报警发给指定的分组。</p>]]></content>
      
      
      <categories>
          
          <category> Spug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> Spug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql多实例部署</title>
      <link href="/2020/02/23/di-san-zhang-mysql-lian-jie-guan-li/"/>
      <url>/2020/02/23/di-san-zhang-mysql-lian-jie-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-需求说明"><a href="#第一章-需求说明" class="headerlink" title="第一章  需求说明"></a>第一章  需求说明</h1><p>作者:夏正平</p><ol><li>部署<code>MySQL</code>5.7的三个多实例环境(端口分别为3307,3308,3309)</li><li>部署<code>MySQL</code>5.6和8.0版本数据库实例((端口分别为3316和3326)</li></ol><h1 id="第二章-环境准备"><a href="#第二章-环境准备" class="headerlink" title="第二章 环境准备"></a>第二章 环境准备</h1><h2 id="1-虚拟机环境"><a href="#1-虚拟机环境" class="headerlink" title="1.虚拟机环境"></a>1.虚拟机环境</h2><pre><code>$ hostname -I   10.0.1.51$ hostname  db01$ cat /etc/redhat-release   CentOS Linux release 7.7.1908 (Core)</code></pre><h2 id="2-虚拟机优化"><a href="#2-虚拟机优化" class="headerlink" title="2.虚拟机优化"></a>2.虚拟机优化</h2><pre><code># 关闭Selinux$ setenforce 0$ sed -i s#SELINUX=enforcing#SELINUX=disabled#g /etc/selinux/config# 关闭防火墙$ systemctl stop firewalld$ systemctl disable firewalld$ iptables-save# 更改yum源$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.ori$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo$ sed  -i &#39;/aliyuncs/d&#39; /etc/yum.repos.d/CentOS-Base.repo # 添加epel源$ wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo# 更新yum缓存$  yum clean all$ yum makecache fast# 停止NetworkManager$ systemctl stop NetworkManager$ systemctl disable NetworkManager# 加大文件描述符$ echo &#39;* - nofile 65535&#39; &gt;&gt;/etc/security/limits.conf </code></pre><h2 id="3-清理环境"><a href="#3-清理环境" class="headerlink" title="3.清理环境"></a>3.清理环境</h2><h3 id="①卸载已安装的mysql"><a href="#①卸载已安装的mysql" class="headerlink" title="①卸载已安装的mysql"></a>①卸载已安装的mysql</h3><pre><code>$ rpm -qa | grep mysql# 结果如下mysql-community-common-8.0.18-1.el7.x86_64mysql-community-client-8.0.18-1.el7.x86_64mysql-community-libs-8.0.18-1.el7.x86_64# 使用以下命令依次删除上面的程序$ yum remove mysql-xxx-xxx-</code></pre><h3 id="②删除mysql的配置文件"><a href="#②删除mysql的配置文件" class="headerlink" title="②删除mysql的配置文件"></a>②删除mysql的配置文件</h3><pre><code>$ find / -name mysql|xargs rm -fr</code></pre><h3 id="③删除MariaDB的文件"><a href="#③删除MariaDB的文件" class="headerlink" title="③删除MariaDB的文件"></a>③删除MariaDB的文件</h3><pre><code>$ rpm -qa | grep mariadb$ rpm -e mariadb-xxx --nodeps</code></pre><h3 id="④删除my-cnf"><a href="#④删除my-cnf" class="headerlink" title="④删除my.cnf"></a>④删除my.cnf</h3><pre><code>$ rm -fr /etc/my.cnf</code></pre><h3 id="⑤检查端口是否被占用"><a href="#⑤检查端口是否被占用" class="headerlink" title="⑤检查端口是否被占用"></a>⑤检查端口是否被占用</h3><pre><code>$ which mysql$ pkill mysqld$ netstat -lntup|egrep &#39;3307|3308|3309|3316|3326&#39;</code></pre><h2 id="4-准备软件包"><a href="#4-准备软件包" class="headerlink" title="4.准备软件包"></a>4.准备软件包</h2><p><a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener">MySQL官方下载地址</a><br>下载二进制包略。</p><h2 id="5-准备目录"><a href="#5-准备目录" class="headerlink" title="5.准备目录"></a>5.准备目录</h2><pre><code>$ rm -rf /data/*# MySQL安装目录$ mkdir -p /data/app# MySQL数据目录$ mkdir -p /data/330{7,8,9}/data$ mkdir -p /data/33{16,26}/data# Scoket目录$ mkdir -p /data/socket</code></pre><h1 id="第三章-部署MySQL5-7多实例"><a href="#第三章-部署MySQL5-7多实例" class="headerlink" title="第三章 部署MySQL5.7多实例"></a>第三章 部署MySQL5.7多实例</h1><h2 id="1-解压软件包并制作软连接"><a href="#1-解压软件包并制作软连接" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz$ mv mysql-5.7.28-linux-glibc2.12-x86_64 mysql-5.7.28$ ln -s /data/app/mysql-5.7.28 /data/app/mysql5728</code></pre><h2 id="2-创建MySQL多实例配置"><a href="#2-创建MySQL多实例配置" class="headerlink" title="2.创建MySQL多实例配置"></a>2.创建<code>MySQL</code>多实例配置</h2><pre><code># 3307实例配置$ cat &gt; /data/3307/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3307/data     socket=/data/socket/mysql3307.sock      port=3307                   server_id=7                  EOF# 3308实例配置$ cat &gt; /data/3308/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3308/data     socket=/data/socket/mysql3308.sock      port=3308                   server_id=8                  EOF# 3309实例配置$ cat &gt; /data/3309/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3309/data     socket=/data/socket/mysql3309.sock      port=3309                   server_id=9                  EOF</code></pre><h2 id="3-创建MySQL傀儡用户并授权"><a href="#3-创建MySQL傀儡用户并授权" class="headerlink" title="3.创建MySQL傀儡用户并授权"></a>3.创建<code>MySQL</code>傀儡用户并授权</h2><pre><code>$ useradd -s /sbin/nologin -M mysql$ id mysql$ chown -R mysql.mysql /data</code></pre><h2 id="4-初始化"><a href="#4-初始化" class="headerlink" title="4.初始化"></a>4.初始化</h2><pre><code>$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3307/data$ echo $?$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3308/data$ echo $?$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3309/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本"><a href="#5-编写systemd启动脚本" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code># 3307实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3307.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3307/my.cnfLimitNOFILE = 5000EOF# 3308实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3308.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3308/my.cnfLimitNOFILE = 5000EOF# 3309实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3309.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3309/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动多实例"><a href="#6-启动多实例" class="headerlink" title="6.启动多实例"></a>6.启动多实例</h2><pre><code>$ systemctl start mysqld3307$ systemctl start mysqld3308$ systemctl start mysqld3309$ netstat -lntup|grep mysqld  tcp6   0   0  :::3307    :::*     LISTEN   2093/mysqld           tcp6   0   0  :::3308    :::*     LISTEN   2127/mysqld           tcp6   0   0  :::3309    :::*     LISTEN   2161/mysqld </code></pre><h2 id="7-绝对路径登录MySQL多实例"><a href="#7-绝对路径登录MySQL多实例" class="headerlink" title="7.绝对路径登录MySQL多实例"></a>7.绝对路径登录<code>MySQL</code>多实例</h2><pre><code>$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3307.sock$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3308.sock$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3309.sock</code></pre><h1 id="第四章-部署MySQL5-6单实例"><a href="#第四章-部署MySQL5-6单实例" class="headerlink" title="第四章 部署MySQL5.6单实例"></a>第四章 部署MySQL5.6单实例</h1><h2 id="1-解压软件包并制作软连接-1"><a href="#1-解压软件包并制作软连接-1" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz$ mv mysql-5.6.46-linux-glibc2.12-x86_64 mysql-5.6.46$ ln -s ln -s mysql-5.6.46 mysql5646</code></pre><h2 id="2-创建MySQL实例配置"><a href="#2-创建MySQL实例配置" class="headerlink" title="2.创建MySQL实例配置"></a>2.创建<code>MySQL</code>实例配置</h2><pre><code>cat &gt; /data/3316/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5646    datadir=/data/3316/data     socket=/data/socket/mysql3316.sock       port=3316                   server_id=16                  EOF</code></pre><h2 id="3-创建mysql傀儡用户并授权"><a href="#3-创建mysql傀儡用户并授权" class="headerlink" title="3.创建mysql傀儡用户并授权"></a>3.创建mysql傀儡用户并授权</h2><pre><code>$ chown -R mysql.mysql /data</code></pre><h2 id="4-初始化-1"><a href="#4-初始化-1" class="headerlink" title="4.初始化"></a>4.初始化</h2><pre><code>$ /data/app/mysql5646/scripts/mysql_install_db  --user=mysql --basedir=/data/app/mysql5646 --datadir=/data/3316/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本-1"><a href="#5-编写systemd启动脚本-1" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code>cat &gt; /etc/systemd/system/mysqld3316.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5646/bin/mysqld --defaults-file=/data/3316/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动实例"><a href="#6-启动实例" class="headerlink" title="6.启动实例"></a>6.启动实例</h2><pre><code>$ systemctl daemon-reload$ systemctl start mysqld3316.service$ netstat -lntup|grep mysqld  tcp6  0  0 :::3316    :::*    LISTEN      2516/mysqld</code></pre><h2 id="7-绝对路径登录MySQL实例"><a href="#7-绝对路径登录MySQL实例" class="headerlink" title="7.绝对路径登录MySQL实例"></a>7.绝对路径登录<code>MySQL</code>实例</h2><pre><code>$ /data/app/mysql5646/bin/mysql -S /data/socket/mysql3316.sock</code></pre><h1 id="第五章-部署MySQL8-0单实例"><a href="#第五章-部署MySQL8-0单实例" class="headerlink" title="第五章 部署MySQL8.0单实例"></a>第五章 部署MySQL8.0单实例</h1><h2 id="1-解压软件包并制作软连接-2"><a href="#1-解压软件包并制作软连接-2" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-8.0.18-linux-glibc2.12-x86_64.tar.xz$ mv mysql-8.0.18-linux-glibc2.12-x86_64 mysql-8.0.18$ ln -s mysql-8.0.18 mysql8018</code></pre><h2 id="2-创建MySQL实例配置-1"><a href="#2-创建MySQL实例配置-1" class="headerlink" title="2.创建MySQL实例配置"></a>2.创建<code>MySQL</code>实例配置</h2><pre><code>cat &gt; /data/3326/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql8018     datadir=/data/3326/data     socket=/data/socket/mysql3326.sock       port=3326                  server_id=26                  EOF</code></pre><h2 id="3-创建mysql傀儡用户并授权-1"><a href="#3-创建mysql傀儡用户并授权-1" class="headerlink" title="3.创建mysql傀儡用户并授权"></a>3.创建mysql傀儡用户并授权</h2><pre><code>$ chown -R mysql.mysql /data</code></pre><h2 id="4-安装依赖并初始化"><a href="#4-安装依赖并初始化" class="headerlink" title="4.安装依赖并初始化"></a>4.安装依赖并初始化</h2><pre><code>$ yum install -y perl-DBD-MySQL perl-Config-Tiny epel-release perl-Log-Dispatch perl-Parallel-ForkManager perl-Time-HiRes$ /data/app/mysql8018/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql8018 --datadir=/data/3326/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本-2"><a href="#5-编写systemd启动脚本-2" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code>cat &gt; /etc/systemd/system/mysqld3326.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql8018/bin/mysqld --defaults-file=/data/3326/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动实例-1"><a href="#6-启动实例-1" class="headerlink" title="6.启动实例"></a>6.启动实例</h2><pre><code>$ systemctl start mysqld3326.service $ netstat -lntup|grep mysqld  tcp6       0      0 :::3326    :::*    LISTEN      2686/mysqld  </code></pre><h2 id="7-绝对路径登录MySQL实例-1"><a href="#7-绝对路径登录MySQL实例-1" class="headerlink" title="7.绝对路径登录MySQL实例"></a>7.绝对路径登录<code>MySQL</code>实例</h2><pre><code>$ /data/app/mysql8018/bin/mysql -S /data/socket/mysql3326.sock</code></pre><p>至此，在同一台服务器上部署多版本MySQL多实例完成，可是使用一下命令验证：</p><pre><code>[root@db01 ~]# netstat -lntup|grep mysqldtcp6       0      0 :::3326    :::*        LISTEN      2686/mysqld         tcp6       0      0 :::33060   :::*        LISTEN      2686/mysqld         tcp6       0      0 :::3307    :::*        LISTEN      2093/mysqld         tcp6       0      0 :::3308    :::*        LISTEN      2127/mysqld         tcp6       0      0 :::3309    :::*        LISTEN      2161/mysqld         tcp6       0      0 :::3316    :::*        LISTEN      2516/mysqld </code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小明同学为了战斗而生</title>
      <link href="/2020/02/16/sort-algorithms/"/>
      <url>/2020/02/16/sort-algorithms/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="性质汇总"><a href="#性质汇总" class="headerlink" title="性质汇总"></a>性质汇总</h2><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>官方源、镜像源汇总</title>
      <link href="/2020/02/16/guan-fang-yuan-jing-xiang-yuan-hui-zong/"/>
      <url>/2020/02/16/guan-fang-yuan-jing-xiang-yuan-hui-zong/</url>
      
        <content type="html"><![CDATA[<h2 id="站点版"><a href="#站点版" class="headerlink" title="站点版"></a>站点版</h2><h3 id="（一）、企业站"><a href="#（一）、企业站" class="headerlink" title="（一）、企业站"></a>（一）、企业站</h3><pre><code>搜狐：http://mirrors.sohu.com/网易：http://mirrors.163.com/阿里云：http://mirrors.aliyun.com/腾讯：http://android-mirror.bugly.qq.com:8080/（仅针对APP开发的软件，限流，不推荐）淘宝：http://npm.taobao.org/</code></pre><h3 id="（二）、教育站"><a href="#（二）、教育站" class="headerlink" title="（二）、教育站"></a>（二）、教育站</h3><pre><code>上海交通大学：http://ftp.sjtu.edu.cn/html/resources.xml（部分移动运营商出口状况不佳，无法访问）华中科技大学：http://mirror.hust.edu.cn/（当前已用容量估计：4.83T）清华大学：http://mirrors.tuna.tsinghua.edu.cn/（当前已用容量估计：9.8T）北京理工大学：http://mirror.bit.edu.cn/web/兰州大学：http://mirror.lzu.edu.cn/中国科技大学：http://mirrors.ustc.edu.cn/（当前已用容量估计：21.32T）大连东软信息学院：http://mirrors.neusoft.edu.cn/（当前已用容量估计：2.5T）东北大学：http://mirror.neu.edu.cn/大连理工大学：http://mirror.dlut.edu.cn/哈尔滨工业大学：http://run.hit.edu.cn/html/（部分联通运营商出口状况不佳，无法访问）北京交通大学：http://mirror.bjtu.edu.cn/cn/天津大学：http://mirror.tju.edu.cn（无法访问，ping超时）中国地质大学：http://mirrors.cug.edu.cn/（当前已用容量估计：2.3T）浙江大学：http://mirrors.zju.edu.cn/厦门大学：http://mirrors.xmu.edu.cn/中山大学：http://mirror.sysu.edu.cn/重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）北京化工大学：http://ubuntu.buct.edu.cn/（Android SDK镜像仅供校内使用，当前已用容量估计：1.72T）南阳理工学院：http://mirror.nyist.edu.cn/中国科学院：http://www.opencas.org/mirrors/电子科技大学：http://ubuntu.uestc.edu.cn/（无法访问，ping超时）电子科技大学星辰工作室：http://mirrors.stuhome.net/（当前已用容量估计：1.08T）西北农林科技大学：http://mirrors.nwsuaf.edu.cn/（只做CentOS镜像，当前已用容量估计：140GB） 浙江大学：http://mirrors.zju.edu.cn/台湾淡江大学: http://ftp.tku.edu.tw/Linux/</code></pre><h3 id="（三）、其他"><a href="#（三）、其他" class="headerlink" title="（三）、其他"></a>（三）、其他</h3><pre><code>首都在线科技股份有限公司（英文名Capital Online Data Service）：http://mirrors.yun-idc.com/中国电信天翼云：http://mirrors.ctyun.cn/noc.im：http://mirrors.noc.im/（当前已用容量估计：3.74T）常州贝特康姆软件技术有限公司：http://centos.bitcomm.cn/（只做CentOS镜像，当前已用容量估计：140GB）公云PubYun（母公司为贝特康姆）：http://mirrors.pubyun.com/Linux运维派：http://mirrors.skyshe.cn/（使用阿里云服务器，界面使用浙江大学的模板，首页维护，内容可访问）中国互联网络信息中心：http://mirrors.cnnic.cn/（只做Apache镜像，当前已用容量估计：120GB）Fayea工作室：http://apache.fayea.com/（只做Apache镜像，当前已用容量估计：120GB）开源中国社区 http://mirrors.oss.org.cn/</code></pre><h2 id="软件版"><a href="#软件版" class="headerlink" title="软件版"></a>软件版</h2><h3 id="（一）、操作系统类"><a href="#（一）、操作系统类" class="headerlink" title="（一）、操作系统类"></a>（一）、操作系统类</h3><p> 1.Ubuntu</p><pre><code>阿里云：http://mirrors.aliyun.com/ubuntu-releases/网易：http://mirrors.163.com/ubuntu-releases/搜狐：http://mirrors.sohu.com/ubuntu-releases/（搜狐在12年之后似乎不同步了）首都在线科技股份有限公司：http://mirrors.yun-idc.com/ubuntu-releases/</code></pre><p>2.CentOS</p><pre><code>网易：http://mirrors.163.com/centos/搜狐：http://mirrors.sohu.com/centos/阿里云：http://mirrors.aliyun.com/centos/</code></pre><h3 id="（二）、服务器类"><a href="#（二）、服务器类" class="headerlink" title="（二）、服务器类"></a>（二）、服务器类</h3><p>1.Apache</p><pre><code>中国互联网络信息中心：http://mirrors.cnnic.cn/apache/华中科技大学：http://mirrors.hust.edu.cn/apache/北京理工大学：http://mirror.bit.edu.cn/apache/TOMCAT全版本：https://archive.apache.org/dist/tomcat/</code></pre><p>2.MySQL</p><pre><code>北京理工大学：http://mirror.bit.edu.cn/mysql/Downloads/中国电信天翼云：http://mirrors.ctyun.cn/Mysql/搜狐镜像源：http://mirrors.sohu.com/mysql/</code></pre><p>3.PostgreSQL</p><pre><code>浙江大学：http://mirrors.zju.edu.cn/postgresql/</code></pre><p>4.MariaDB</p><pre><code>中国电信天翼云：http://mirrors.ctyun.cn/MariaDB/</code></pre><p>5.VideoLAN</p><pre><code>大连东软信息学院：http://mirrors.neusoft.edu.cn/videolan/中国科技大学：http://mirrors.ustc.edu.cn/videolan-ftp/</code></pre><p>6、php</p><pre><code>php全版本：  https://secure.php.net/releases/</code></pre><h3 id="（三）、开发工具类"><a href="#（三）、开发工具类" class="headerlink" title="（三）、开发工具类"></a>（三）、开发工具类</h3><p>1.Eclipse</p><pre><code>中国科技大学：http://mirrors.ustc.edu.cn/eclipse/中国科学院：http://mirrors.opencas.cn/eclipse/东北大学：http://ftp.neu.edu.cn/mirrors/eclipse/，http://mirror.neu.edu.cn/eclipse/</code></pre><p>2.Android SDK</p><pre><code>中国科学院：http://mirrors.opencas.ac.cn/android/repository/南洋理工学院：http://mirror.nyist.edu.cn/android/repository/中国科学院：http://mirrors.opencas.cn/android/repository/腾讯：http://android-mirror.bugly.qq.com:8080/android/repository/（限流，不推荐）大连东软信息学院：http://mirrors.neusoft.edu.cn/android/repository/（同步效果不如中科院的镜像，不推荐）</code></pre><p>3.Xcode</p><pre><code>腾讯：http://android-mirror.bugly.qq.com:8080/Xcode/（从7.2之后不再更新，建议直接从官网下载）</code></pre><h3 id="（四）、容器"><a href="#（四）、容器" class="headerlink" title="（四）、容器"></a>（四）、容器</h3><pre><code>lxc国内镜像源： https://mirrors.tuna.tsinghua.edu.cn/lxc-images/</code></pre><h2 id="官方镜像列表状态地址"><a href="#官方镜像列表状态地址" class="headerlink" title="官方镜像列表状态地址"></a>官方镜像列表状态地址</h2><pre><code>CentOS：http://mirror-status.centos.org/#cnArchlinux：https://www.archlinux.org/mirrors/status/Ubuntu：https://launchpad.net/ubuntu/+cdmirrorsDebian：http://mirror.debian.org/status.htmlFedora Linux/Fedora EPEL：https://admin.fedoraproject.org/mirrormanager/mirrorsApache：http://www.apache.org/mirrors/#cnCygwin：https://www.cygwin.com/mirrors.html</code></pre><h2 id="欢迎留言补充"><a href="#欢迎留言补充" class="headerlink" title="欢迎留言补充"></a>欢迎留言补充</h2><p>部分摘录自：<a href="http://blog.csdn.net/wh211212/article/details/53593057" target="_blank" rel="noopener">http://blog.csdn.net/wh211212/article/details/53593057</a></p><p><a href="https://www.cnblogs.com/clsn/p/8372108.html" target="_blank" rel="noopener">https://www.cnblogs.com/clsn/p/8372108.html</a></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章   MySQL 大纲介绍</title>
      <link href="/2020/02/16/di-yi-zhang-mysql-da-gang-jie-shao/"/>
      <url>/2020/02/16/di-yi-zhang-mysql-da-gang-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="1、官方定义的MySQL-DBA工作内容"><a href="#1、官方定义的MySQL-DBA工作内容" class="headerlink" title="1、官方定义的MySQL  DBA工作内容"></a>1、官方定义的MySQL  DBA工作内容</h2><pre class="line-numbers language-undefined"><code class="language-undefined">（1）运维DBA初级：各版本、各平台安装搭建、升级中级：体系结构原理、基础管理（启动关闭、初始化配置文件管理、多实例管理、用户权限管理、基本SQL（增删改查））、     日志管理、备份与恢复、主从复制（构建、状态监控） 高级：高可用（MGR、InnoDB Cluster）、高性能（优化）（2）开发DBA懂至少一门开发语言 ：JAVA、Python基本SQL语句深入学习（增删改查）、数据库结构设计（建模）高级SQL：存储过程、函数、触发器、视图、事件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、MySQL课程-2019-03月-中级DBA要求（80-以上）"><a href="#2、MySQL课程-2019-03月-中级DBA要求（80-以上）" class="headerlink" title="2、MySQL课程-2019-03月-中级DBA要求（80%以上）"></a>2、MySQL课程-2019-03月-中级DBA要求（80%以上）</h2><pre class="line-numbers language-css"><code class="language-css">（<span class="token number">1</span>）MySQL <span class="token number">5.7</span> 安装部署（二进制）*****    编译自己扩展（<span class="token number">2</span>）MySQL升级步骤扩展 ***（<span class="token number">3</span>）MySQL<span class="token number">5.7</span> 体系结构原理 *****（<span class="token number">4</span>）MySQL基础管理  *****（<span class="token number">5</span>）基础SQL语句使用 *****（<span class="token number">6</span>）SQL高级应用  ***（<span class="token number">7</span>）Information_schema获取元数据 ***（<span class="token number">8</span>）索引、执行计划管理（基础优化）*****（<span class="token number">9</span>）存储引擎  *****（<span class="token number">10</span>）日志管理 *****（<span class="token number">11</span>）备份与恢复 ******（<span class="token number">12</span>）主从复制及架构演变 ******（<span class="token number">13</span>）传统的高可用及读写分离（MHA&amp;Atlas）****（<span class="token number">14</span>）传统分布式架构设计与实现-扩展（Mycat--->DBLE,DRDS）**（<span class="token number">15</span>）MySQL <span class="token number">5.7</span> 高可用及分布式架构-扩展（MGR,InnoDB Cluster）***（<span class="token number">16</span>）MySQL优化（安全、性能） ****（<span class="token number">17</span>）MySQL 监控（zabbix、Open-falcon）    **** <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token function">RDS</span><span class="token punctuation">(</span>阿里云课程<span class="token punctuation">)</span>    *****额外要会的：    Redis    mongodb     了解<span class="token punctuation">:</span>     PG    Oracle  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、DBA职业素养"><a href="#3、DBA职业素养" class="headerlink" title="3、DBA职业素养"></a>3、DBA职业素养</h2><hr><h3 id="3-1、人品"><a href="#3-1、人品" class="headerlink" title="3.1、人品"></a>3.1、人品</h3><pre class="line-numbers language-undefined"><code class="language-undefined">责任-----权利<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><h4 id="3-2-1、严谨"><a href="#3-2-1、严谨" class="headerlink" title="3.2.1、严谨"></a>3.2.1、严谨</h4><pre class="line-numbers language-rust"><code class="language-rust">磁带库<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>备份软件<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">17</span>楼数据库修改\删除类的命令时 再三考虑，而且要有理论或者实践的支撑<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-2-2-请收起你的好奇心！！！！！"><a href="#3-2-2-请收起你的好奇心！！！！！" class="headerlink" title="3.2.2 请收起你的好奇心！！！！！"></a>3.2.2 请收起你的好奇心！！！！！</h4><pre class="line-numbers language-undefined"><code class="language-undefined">注意规范:脱库？ 华住网（ip root 密码），“脱敏”!!!!!。学会保护自己!!!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-3、细心"><a href="#3-3、细心" class="headerlink" title="3.3、细心"></a>3.3、细心</h3><pre class="line-numbers language-undefined"><code class="language-undefined">把最简单的事情做的最漂亮，最专业。不要怕成功的门很拥挤,因为很多人在半路就已经放弃了.                                           ----oldguo                     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-4、心态"><a href="#3-4、心态" class="headerlink" title="3.4、心态"></a>3.4、心态</h3><pre class="line-numbers language-undefined"><code class="language-undefined">别惹事，出事别怕事<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-5、熟悉操作系统（精通）"><a href="#3-5、熟悉操作系统（精通）" class="headerlink" title="3.5、熟悉操作系统（精通）"></a>3.5、熟悉操作系统（精通）</h3><h3 id="3-6、熟悉公司业务"><a href="#3-6、熟悉公司业务" class="headerlink" title="3.6、熟悉公司业务"></a>3.6、熟悉公司业务</h3><pre class="line-numbers language-undefined"><code class="language-undefined">业务？    产品的功能    用户的行为(热功能,热数据)      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-7、熟悉行业"><a href="#3-7、熟悉行业" class="headerlink" title="3.7、熟悉行业"></a>3.7、熟悉行业</h3><pre class="line-numbers language-cpp"><code class="language-cpp">熟悉行业发展趋势版本数据库产品类型https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>db<span class="token operator">-</span>engines<span class="token punctuation">.</span>com<span class="token operator">/</span>en<span class="token operator">/</span>ranking<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-8、喜欢数据库"><a href="#3-8、喜欢数据库" class="headerlink" title="3.8、喜欢数据库"></a>3.8、喜欢数据库</h3><pre class="line-numbers language-undefined"><code class="language-undefined">体验很重要<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="第二章-MySQL-介绍和安装"><a href="#第二章-MySQL-介绍和安装" class="headerlink" title="第二章: MySQL 介绍和安装"></a>第二章: MySQL 介绍和安装</h1><h2 id="1、什么是数据？"><a href="#1、什么是数据？" class="headerlink" title="1、什么是数据？"></a>1、什么是数据？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">数据：文字、图片、视频。。。人类认知的数据表现方式计算机：二进制、16进制的机器语言基于数据的重要性和复杂性的不同，我们可能有不同的管理方式。哪些数据是适合存储到数据库的呢？重要性比较高的关系较复杂的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、什么是数据库管理系统（DBMS）？"><a href="#2、什么是数据库管理系统（DBMS）？" class="headerlink" title="2、什么是数据库管理系统（DBMS）？"></a>2、什么是数据库管理系统（DBMS）？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">RDBMS: 关系型数据库管理系统比较适合于<span class="token punctuation">,</span>安全级别要求高的数据以及关系较复杂的数据NoSQL:非关系型数据库管理系统适合于高性能存取数据<span class="token punctuation">,</span>一般是配合RDBMS进行使用的针对大数据处理分析<span class="token punctuation">,</span>分布式架构更加擅长<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、数据库管理系统种类"><a href="#3、数据库管理系统种类" class="headerlink" title="3、数据库管理系统种类"></a>3、数据库管理系统种类</h2><pre class="line-numbers language-powershell"><code class="language-powershell">RDBMS  ：MySQL 、Oracle、MSSQL（SQL Server）、PGNoSQL：Not Only SQL键<span class="token operator">-</span>值（key<span class="token operator">-</span>value）：Redis<span class="token punctuation">,</span> memcached文档（document）：Mongodb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-数据库产品时代演变"><a href="#4-数据库产品时代演变" class="headerlink" title="4-数据库产品时代演变"></a>4-数据库产品时代演变</h2><pre class="line-numbers language-powershell"><code class="language-powershell">第一代数据库架构：    RDBMS 关系型数据库时代 ： 合的时代    代表产品 ：Oracle 、MSSQL 、MySQL第二代数据库架构：拆的时代    NoSQL  ： Not Only SQL 时代    代表产品： Redis 、MongoDB、ES 第三代数据库架构： 合的时代     NewSQL  ：新型数据库架构时代    代表产品：            阿里系列： OB 、PolarDB            Pincap  ： TiDB            google  ： spanner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、MySQL简介及产品线"><a href="#5、MySQL简介及产品线" class="headerlink" title="5、MySQL简介及产品线"></a>5、MySQL简介及产品线</h2><h3 id="5-1-MySQL行业主流版本："><a href="#5-1-MySQL行业主流版本：" class="headerlink" title="5.1 MySQL行业主流版本："></a>5.1 MySQL行业主流版本：</h3><pre class="line-numbers language-css"><code class="language-css">    <span class="token number">5.6</span>      <span class="token number">5.7</span>        <span class="token number">8.0</span><span class="token punctuation">(</span>现在开始研究新特性<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-2-企业版本选择-MySQL分支版本-笔试题"><a href="#5-2-企业版本选择-MySQL分支版本-笔试题" class="headerlink" title="5.2 企业版本选择(MySQL分支版本),笔试题"></a>5.2 企业版本选择(MySQL分支版本),笔试题</h3><pre class="line-numbers language-undefined"><code class="language-undefined">Oracle:      MySQL官方版红帽  :      MariaDBPercona:      PerconaDB 面试题     1. 请你介绍你熟悉的数据库产品？   你们公司用了哪些数据库产品？    RDBMS ： MySQL  、Oracle  、PG、 MSSQL    NoSQL :  Redis  、MongoDB 、ES 、Memcached    云数据库：RDS    2. 你喜欢MySQL数据库吗？ 平常如何学习的？ MySQL需要具备哪些技能？    热爱。    官档 、源码、看书、视频、参加一些数据库大会。    技能： 大纲<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-版本选择建议要上新环境"><a href="#5-3-版本选择建议要上新环境" class="headerlink" title="5.3 版本选择建议要上新环境"></a>5.3 版本选择建议要上新环境</h3><h3 id="5-34MySQL-产品分支"><a href="#5-34MySQL-产品分支" class="headerlink" title="5.34MySQL 产品分支"></a>5.34MySQL 产品分支</h3><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span> Oracle MySQL  ：C版 、 E版 、Cluster版Percona MySQL ：最接近于Oracle MySQL MariaDB       ：从5<span class="token punctuation">.</span>5<span class="token operator">+</span> 以后，10<span class="token punctuation">.</span>x <span class="token operator">+</span>版本阿里：  RDS <span class="token keyword">for</span> MySQL 腾讯：  TDSQL <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token number">1.</span>一般选择官方主流版本<span class="token punctuation">:</span><span class="token number">5.6</span>,<span class="token number">5.7</span> <span class="token number">2.</span>GA（稳定发布版）<span class="token number">3.6</span>-<span class="token number">12</span>月的产品版本--------------------------<span class="token number">4.</span> MySQL的企业版本选择<span class="token number">5.7</span>  ： 一般选择最新GA版本  <span class="token number">5.7.26</span>   <span class="token number">5.7.28</span> <span class="token number">5.6</span>  ： GA <span class="token number">6</span>-<span class="token number">12</span>月之间的版本 <span class="token number">8.0</span>  ： 一般选择最新GA版本  <span class="token number">8.0.17</span>+<span class="token number">5.6</span> 版本 <span class="token number">2020</span> <span class="token number">10</span>月  常规、扩展服务全部停止<span class="token number">5.7</span> 版本 <span class="token number">2021</span> <span class="token number">1</span>月   常规服务停止<span class="token number">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4-课程版本："><a href="#5-4-课程版本：" class="headerlink" title="5.4 课程版本："></a>5.4 课程版本：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token number">5.7.20</span>  二进制安装，其他安装方式自己扩展<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-5-如何获取MySQL软件"><a href="#5-5-如何获取MySQL软件" class="headerlink" title="5.5 如何获取MySQL软件"></a>5.5 如何获取MySQL软件</h3><pre class="line-numbers language-css"><code class="language-css">企业版：Enterprise  , 互联网行业一般不选择<span class="token number">.</span>社区版本：选择源码包：source code    <span class="token number">.</span>tar<span class="token number">.</span>gz   通用二进制   面试题<span class="token punctuation">:</span>你们公司用什么版本数据库? 具体什么小版本号?<span class="token number">5.6.20</span> <span class="token number">5.6.34</span> <span class="token number">5.6.36</span>  <span class="token number">5.6.38</span>  <span class="token number">5.6.40</span>    <span class="token number">5.7.18</span>  <span class="token number">5.7.20</span>  <span class="token number">5.7.22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取软件</p><pre><code>https://downloads.mysql.com/archives/[root@db01 app]# md5sum  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz1daa30a32b99a92062f481bd3ef8694c  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz[root@db01 app]# MD5: 1daa30a32b99a92062f481bd3ef8694cdiff a  b  </code></pre><h2 id="5、-MySQL二进-制安装"><a href="#5、-MySQL二进-制安装" class="headerlink" title="5、==MySQL二进==制安装"></a>5、==MySQL二进==制安装</h2><h3 id="5-1-创建软件目录"><a href="#5-1-创建软件目录" class="headerlink" title="5.1.创建软件目录:"></a>5.1.创建软件目录:</h3><pre class="line-numbers language-powershell"><code class="language-powershell">6<span class="token punctuation">.</span>2<span class="token punctuation">.</span>5 清理遗留环境 <span class="token comment" spellcheck="true"># 检查是否有mariadb相关软件</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># rpm -qa|grep mariadb</span><span class="token comment" spellcheck="true"># 如果有，清理掉 </span>yum remove mariadb<span class="token operator">-</span>libs <span class="token operator">-</span>y <span class="token comment" spellcheck="true"># 删掉/etc/my.cnf 已有的配置文件 </span><span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf 6<span class="token punctuation">.</span>2<span class="token punctuation">.</span>6 安装依赖包 <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># yum install -y libaio-devel </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># mkdir <span class="token operator">-</span>p  <span class="token operator">/</span>data<span class="token operator">/</span>app 上传软件到此目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-2-解压并改名为mysql"><a href="#5-2-解压并改名为mysql" class="headerlink" title="5.2. 解压并改名为mysql"></a>5.2. 解压并改名为mysql</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token punctuation">[</span>root<span class="token variable">@db01</span> app<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv mysql-5.7.20-linux-glibc2.12-x86_64 mysql</span><span class="token punctuation">[</span>root<span class="token variable">@China</span> <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># ln -s /data/app/mysql-5.6.46/  /data/app/mysql</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> app<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l /app/mysql/</span>total <span class="token number">36</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> bin<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span>  <span class="token number">1</span> <span class="token number">7161</span> <span class="token number">31415</span> <span class="token number">17987</span> <span class="token constant">Sep</span> <span class="token number">13</span>  <span class="token number">2017</span> <span class="token constant">COPYING</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root     <span class="token number">55</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> docsdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">3</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> includedrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">5</span> root root    <span class="token number">229</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> libdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">4</span> root root     <span class="token number">30</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> man<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span>  <span class="token number">1</span> <span class="token number">7161</span> <span class="token number">31415</span>  <span class="token number">2478</span> <span class="token constant">Sep</span> <span class="token number">13</span>  <span class="token number">2017</span> <span class="token constant">README</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x <span class="token number">28</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> sharedrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root     <span class="token number">90</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> support<span class="token operator">-</span>files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改环境变量:</p><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/profile<span class="token punctuation">[</span>root@China /data/app/mysql<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># export  PATH=/data/app/mysql/bin:$PATH</span><span class="token punctuation">[</span>root@db01 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source /etc/profile</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-3-建立mysql用户和组-如果已有可忽略"><a href="#5-3-建立mysql用户和组-如果已有可忽略" class="headerlink" title="5.3. 建立mysql用户和组(如果已有可忽略)"></a>5.3. 建立mysql用户和组(如果已有可忽略)</h3><pre class="line-numbers language-undefined"><code class="language-undefined"> useradd mysql <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-4-创建相关目录并修改权限"><a href="#5-4-创建相关目录并修改权限" class="headerlink" title="5.4. 创建相关目录并修改权限"></a>5.4. 创建相关目录并修改权限</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin"><span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span><span class="token keyword">data</span>  #数据目录<span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># useradd  mysql <span class="token operator">-</span>M <span class="token operator">-</span>s <span class="token operator">/</span>sbin<span class="token operator">/</span>nologin <span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-5-初始化数据（建库）"><a href="#5-5-初始化数据（建库）" class="headerlink" title="5.5 初始化数据（建库）"></a>5.5 初始化数据（建库）</h3><p>方法一:</p><pre class="line-numbers language-csharp"><code class="language-csharp">初始化数据，初始化管理员的临时密码mysqld <span class="token operator">--</span>initialize  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql   <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token number">6.2</span><span class="token punctuation">.</span><span class="token number">8</span> 初始化数据<span class="token preprocessor property"># 5.7+ 版本初始化 ：</span>mysqld       <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure      <span class="token operator">--</span>user<span class="token operator">=</span>mysql      <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql        <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data 有可能的报错：     <span class="token number">1</span><span class="token punctuation">.</span> libaio<span class="token operator">-</span>devel     <span class="token number">2</span><span class="token punctuation">.</span>  <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token operator">--</span>initialize specified but the data directory has files <span class="token keyword">in</span> it<span class="token punctuation">.</span> Aborting<span class="token punctuation">.</span>    rm <span class="token operator">-</span>rf <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-35999407e3216f9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><pre class="line-numbers language-undefined"><code class="language-undefined">报错原因: Linux系统中缺少libaio-devel 软件包解决:yum install -y libaio-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-28004810e36f801b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1004/format/webp" alt="img"></p><p>image.png</p><pre class="line-numbers language-kotlin"><code class="language-kotlin">报错原因<span class="token operator">:</span>在<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql 存在文件解决<span class="token operator">:</span>\rm <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>新特性重要说明:</strong><br> <strong>5.7开始,MySQL加入了全新的 密码的安全机制:</strong><br> <strong>1.初始化完成后,会生成临时密码(显示到屏幕上,并且会往日志中记一份)</strong><br> <strong>2.密码复杂度:长度:超过12位? 复杂度:字符混乱组合</strong><br> <strong>3.密码过期时间180天</strong></p><pre class="line-numbers language-shell"><code class="language-shell">方法二 :初始化数据，初始化管理员的密码为空[root@China /data/app] # rm -rf /data/3306/data/*[root@db01 ~]# mysqld --initialize-insecure  --user=mysql --basedir=/app/mysql --datadir=/data/mysql2019-04-18T03:37:44.042348Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.[root@db01 ~]# [root@db01 ~]# cd /data/mysql/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注释：5.6初始化的区别</strong></p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token punctuation">[</span>root@China <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token punctuation">]</span> # <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>scripts<span class="token operator">/</span>mysql_install_db   <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-6-书写默认配置文件"><a href="#5-6-书写默认配置文件" class="headerlink" title="5.6 书写默认配置文件"></a>5.6 书写默认配置文件</h3><pre class="line-numbers language-jsx"><code class="language-jsx">vim <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysqlserver_id<span class="token operator">=</span><span class="token number">6</span>port<span class="token operator">=</span><span class="token number">3306</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockprompt<span class="token operator">=</span><span class="token number">3306</span> <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>              <span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-7-配置启动脚本"><a href="#5-7-配置启动脚本" class="headerlink" title="5.7 配置启动脚本:"></a>5.7 配置启动脚本:</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 mysql<span class="token punctuation">]</span># cd <span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>support<span class="token operator">-</span>files<span class="token punctuation">[</span>root@db01 support<span class="token operator">-</span>files<span class="token punctuation">]</span># <span class="token punctuation">.</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>server startStarting MySQL<span class="token punctuation">.</span>Logging to <span class="token string">'/data/mysql/db01.err'</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> cp mysql<span class="token punctuation">.</span>server    <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>    <span class="token number">6.2</span><span class="token punctuation">.</span><span class="token number">10</span> 准备启动脚本，启动数据库<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># cp <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>support<span class="token operator">-</span>files<span class="token operator">/</span>mysql<span class="token punctuation">.</span>server  <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld <span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># chkconfig <span class="token operator">--</span><span class="token keyword">add</span> mysqld<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-8-使用systemd管理mysql"><a href="#5-8-使用systemd管理mysql" class="headerlink" title="5.8 使用systemd管理mysql"></a>5.8 使用systemd管理mysql</h3><pre class="line-numbers language-csharp"><code class="language-csharp">vim <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld<span class="token punctuation">.</span>service <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>MySQL ServerDocumentation<span class="token operator">=</span>man<span class="token punctuation">:</span><span class="token function">mysqld</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>Documentation<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter<span class="token operator">=</span>network<span class="token punctuation">.</span>targetAfter<span class="token operator">=</span>syslog<span class="token punctuation">.</span>target<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>User<span class="token operator">=</span>mysqlGroup<span class="token operator">=</span>mysqlExecStart<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE <span class="token operator">=</span> <span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：将原来模式启动mysqld先关闭，然后再用systemd管理。</p><pre class="line-numbers language-undefined"><code class="language-undefined">systemctl  start/stop/restart/status   mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-安装后的简单管理"><a href="#6-安装后的简单管理" class="headerlink" title="6. 安装后的简单管理"></a>6. 安装后的简单管理</h2><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> ~]# mysqladmin -uroot -p password <span class="token number">123</span>Enter <span class="token property">password</span><span class="token punctuation">:</span> <span class="token property">mysqladmin</span><span class="token punctuation">:</span> [Warning] Using a password on the command line interface can be insecure<span class="token number">.</span><span class="token property">Warning</span><span class="token punctuation">:</span> Since password will be sent to server in plain text, use ssl connection to ensure password safety<span class="token number">.</span><span class="token number">5.6</span>版本<span class="token punctuation">:</span>select user,password,host from mysql<span class="token number">.</span>user<span class="token punctuation">;</span><span class="token number">5.7</span> 中用户基本信息select user,authentication_string,host from mysql<span class="token number">.</span>user<span class="token punctuation">;</span>desc  mysql<span class="token number">.</span>user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小结:<br> 1.版本 (主流版本的GA时间了解一下)</p><pre class="line-numbers language-css"><code class="language-css"><span class="token number">5.6</span> <span class="token number">5.7</span> <span class="token number">5.6.38</span>   <span class="token number">5.7.20</span> <span class="token number">20170913</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 初始化方式变了mysql_install_db   mysqld  --initialize-insecure<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 用户安全<span class="token number">12</span>位<span class="token number">180</span><span class="token number">4</span>种复杂度<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>密码字段authentication_strings<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.安装方法:</p><pre class="line-numbers language-undefined"><code class="language-undefined">二进制源码yum <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3.建库(初始化数据库)</p><pre class="line-numbers language-jsx"><code class="language-jsx">mysqld <span class="token operator">--</span>intialize<span class="token operator">-</span>insecure <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.简易的配制文件/etc/my.cnf</p><pre class="line-numbers language-undefined"><code class="language-undefined">user basedirdatadir server_idportsocket <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>管理员密码</li></ol><pre class="line-numbers language-undefined"><code class="language-undefined">mysqladmin -uroot -p password xx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="第三章节-MySQL体系结构及基础管理"><a href="#第三章节-MySQL体系结构及基础管理" class="headerlink" title="第三章节 MySQL体系结构及基础管理"></a>第三章节 MySQL体系结构及基础管理</h1><pre><code>1. MySQL 的C/S模型工作结构Client：     自带命令    第三方工具    APIServer :     TCP/IP    Unix Socket2. MySQL 的实例结构实例： mysqld进程 + Master thread + worker thread(IO\SQL\Purge...)+ 预分配内存结构公司： BOSS + 经理 + 员工 + 办公区域   3. mysqld 核心程序工作原理3.1  server 层      ----&gt; Linux  OS3.1.1 连接器 3.1.2 SQL层3.2  engine 层      ----&gt; 文件系统</code></pre><h1 id="终结篇"><a href="#终结篇" class="headerlink" title="终结篇"></a>终结篇</h1><pre><code>第一章节 MySQL 的介绍及规划实施1. 数据库产品时代演变第一代数据库架构：    RDBMS 关系型数据库时代 ： 合的时代    代表产品 ：Oracle 、MSSQL 、MySQL第二代数据库架构：拆的时代    NoSQL  ： Not Only SQL 时代    代表产品： Redis 、MongoDB、ES 第三代数据库架构： 合的时代     NewSQL  ：新型数据库架构时代    代表产品：            阿里系列： OB 、PolarDB            Pincap  ： TiDB            google  ： spanner2. 熟悉数据库行业 定期参加数据库大会db-engines.com http://www.itdks.com/休息20分钟：10:50继续彩蛋： 面试题     1. 请你介绍你熟悉的数据库产品？   你们公司用了哪些数据库产品？    RDBMS ： MySQL  、Oracle  、PG、 MSSQL    NoSQL :  Redis  、MongoDB 、ES 、Memcached    云数据库：RDS    2. 你喜欢MySQL数据库吗？ 平常如何学习的？ MySQL需要具备哪些技能？    热爱。    官档 、源码、看书、视频、参加一些数据库大会。    技能： 大纲3. MySQL 产品分支Oracle MySQL  ：C版 、 E版 、Cluster版Percona MySQL ：最接近于Oracle MySQL MariaDB       ：从5.5+ 以后，10.x +版本阿里：  RDS for MySQL 腾讯：  TDSQL ....4. MySQL的企业版本选择5.7  ： 一般选择最新GA版本  5.7.26   5.7.28 5.6  ： GA 6-12月之间的版本 8.0  ： 一般选择最新GA版本  8.0.17+5.6 版本 2020 10月  常规、扩展服务全部停止5.7 版本 2021 1月   常规服务停止.5. 获取软件https://downloads.mysql.com/archives/[root@db01 app]# md5sum  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz1daa30a32b99a92062f481bd3ef8694c  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz[root@db01 app]# MD5: 1daa30a32b99a92062f481bd3ef8694cdiff a  b  6. 手撕 MySQL 5728 二进制版本规划和实施6.1 准备Linux服务器 克隆：Centos 7.6  1核  2G  100G 虚拟机环境IP： 10.0.0.51/24 hostname : db01 防火墙： 关闭 selinux ： 关闭 6.2 上传软件到指定目录6.2.1 创建指定目录mkdir -p  /data/app 6.2.2 上传软件mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz6.2.3 解压制作软连接[root@db01 app]# tar xf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz [root@db01 app]# ln -s mysql-5.7.28-linux-glibc2.12-x86_64 mysql6.2.4 修改环境变量echo &quot;export PATH=$PATH:/opt/src/mysql/bin&quot; &gt;&gt;/etc/profile# 生效配置 source /etc/profile  # 验证[root@db01 bin]# mysql -Vmysql  Ver 14.14 Distrib 5.7.28, for linux-glibc2.12 (x86_64) using  EditLine wrapper6.2.5 清理遗留环境 # 检查是否有mariadb相关软件[root@db01 ~]# rpm -qa|grep mariadb# 如果有，清理掉 yum remove mariadb-libs -y # 删掉/etc/my.cnf 已有的配置文件 rm -rf /etc/my.cnf 6.2.6 安装依赖包 [root@db01 ~]# yum install -y libaio-devel 6.2.7 创建相关目录、用户，并做授权[root@db01 ~]# mkdir -p /data/3306/data [root@db01 ~]# useradd mysql [root@db01 ~]# chown -R mysql.mysql /data6.2.8 初始化数据# 5.7+ 版本初始化 ：mysqld       --initialize-insecure      --user=mysql      --basedir=/data/app/mysql        --datadir=/data/3306/data 有可能的报错：     1. libaio-devel     2.  [ERROR] --initialize specified but the data directory has files in it. Aborting.    rm -rf /data/3306/data/*6.2.9 准备配置文件 vim /etc/my.cnf [mysqld]user=mysqlbasedir=/data/app/mysqldatadir=/data/3306/datasocket=/tmp/mysql.sock[mysql]socket=/tmp/mysql.sock6.2.10 准备启动脚本，启动数据库[root@db01 data]# cp /data/app/mysql/support-files/mysql.server  /etc/init.d/mysqld [root@db01 data]# chkconfig --add mysqld[root@db01 data]# systemctl start mysqld彩蛋：       1. 5.6 和 5.7 在初始化方面的不同？    5.6 版本：          /data/app/mysql56/scripts/mysql_install_db   --user=mysql --basedir=/data/app/mysql --datadir=/data/3306/data     初始化完成之后，启动数据库，无密码登陆    5.7 版本：          mysqld   --initialize-insecure   --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data    初始化完成之后，启动数据库，无密码登陆    2. 5.7+ 两种初始化方式     （1） --initialize-insecure （不安全）     mysqld   --initialize-insecure   --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data     结果： 初始化完成之后，启动数据库，无密码登陆    （2） --initialize （安全）     mysqld   --initialize    --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data     结果： 初始化完成之后，生成临时密码（4种复杂度、12位），不能用作管理数据库，需要第一次使用之前改掉这个密码。     mysql -uroot -p     Enter password: 此处填写临时密码：     2020-04-21T06:49:15.881987Z 1 [Note] A temporary password is generated for root@localhost: +fCQiY1x:rH-     mysql&gt; alter user root@&#39;localhost&#39; identified by &#39;123&#39;;    [root@db01 data]# mysql -uroot -p123    3. 设置管理员初始密码    [root@db01 data]# mysqladmin     -uroot     -p   password      123    4. 编译安装：源码包       cmake        make         make install        什么时候用？        测试、调试。       二次开发---》 编译安装        定制---》源码包或者配置文件。       定制rpm包---》源码包第一章节作业：      1. 部署5.6版本    2. 部署8.0版本第二章节 MySQL体系结构及基础管理1. MySQL 的C/S模型工作结构Client：     自带命令    第三方工具    APIServer :     TCP/IP    Unix Socket2. MySQL 的实例结构实例： mysqld进程 + Master thread + worker thread(IO\SQL\Purge...)+ 预分配内存结构公司： BOSS + 经理 + 员工 + 办公区域   3. mysqld 核心程序工作原理3.1  server 层      ----&gt; Linux  OS3.1.1 连接器 3.1.2 SQL层3.2  engine 层      ----&gt; 文件系统</code></pre><p><img src="image-20200423083500092.png" alt="image-20200423083500092"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
