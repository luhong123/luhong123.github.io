<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第二章   体系结构</title>
      <link href="/2020/04/22/02-mysql-lesson02-ti-xi-jie-gou-yu-guan-li/"/>
      <url>/2020/04/22/02-mysql-lesson02-ti-xi-jie-gou-yu-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="1-体系结构"><a href="#1-体系结构" class="headerlink" title="1. 体系结构"></a>1. 体系结构</h1><h2 id="1-1-C-S-客户端-服务端-模型介绍"><a href="#1-1-C-S-客户端-服务端-模型介绍" class="headerlink" title="1.1 C/S(客户端/服务端)模型介绍"></a>1.1 C/S(客户端/服务端)模型介绍</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-301b140a033d0dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/712/format/webp" alt="img"></p><p>image</p><pre class="line-numbers language-scss"><code class="language-scss">TCP/IP方式（远程、本地）：mysql -uroot -poldboy<span class="token number">123</span> -h <span class="token number">10.0.0.51</span> -P<span class="token number">3306</span>Socket方式<span class="token punctuation">(</span>仅本地<span class="token punctuation">)</span>：mysql -uroot -poldboy<span class="token number">123</span> -S /tmp/mysql<span class="token number">.</span>sock----------------------------------Linux 中一切皆文件。Linux中一切皆命令。MySQL 中一切皆表。一切皆SQL。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-实例介绍"><a href="#1-2-实例介绍" class="headerlink" title="1.2 实例介绍"></a>1.2 实例介绍</h2><p>MySQL 逻辑对象的特点</p><pre><code>库 ： 库名 + 库属性表 ： 列(字段：列名，列属性) + 行（记录）+ 表属性</code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">实例=mysqld后台守护进程+Master Thread +干活的Thread+预分配的内存公司=老板+经理+员工+办公室<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="1-3-mysqld程序运行原理"><a href="#1-3-mysqld程序运行原理" class="headerlink" title="1.3 mysqld程序运行原理"></a>1.3 mysqld程序运行原理</h2><h3 id="1-3-1-mysqld程序结构"><a href="#1-3-1-mysqld程序结构" class="headerlink" title="1.3.1 mysqld程序结构"></a>1.3.1 mysqld程序结构</h3><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-7824255ca53f23e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/645/format/webp" alt="img"></p><p>image</p><h3 id="1-3-2-一条SQL语句的执行过程"><a href="#1-3-2-一条SQL语句的执行过程" class="headerlink" title="1.3.2 一条SQL语句的执行过程"></a>1.3.2 一条SQL语句的执行过程</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">2.1</span> 连接层（<span class="token number">1</span>）提供连接协议：<span class="token constant">TCP</span><span class="token operator">/</span><span class="token constant">IP</span> 、<span class="token constant">SOCKET</span>（<span class="token number">2</span>）提供验证：用户、密码，<span class="token constant">IP</span>，<span class="token constant">SOCKET</span>（<span class="token number">3</span>）提供专用连接线程：接收用户<span class="token constant">SQL</span>，返回结果通过以下语句可以查看到连接线程基本情况mysql<span class="token operator">></span> show processlist<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.3.2.2 SQL层 （重点）</p><pre class="line-numbers language-undefined"><code class="language-undefined">（1）接收上层传送的SQL语句（2）语法验证模块：验证语句语法,是否满足SQL_MODE（3）语义检查：判断SQL语句的类型DDL ：数据定义语言DCL ：数据控制语言DML ：数据操作语言DQL： 数据查询语言...（4）权限检查：用户对库表有没有权限（5）解析器：对语句执行前,进行预处理，生成解析树(执行计划),说白了就是生成多种执行方案.（6）优化器：根据解析器得出的多种执行计划，进行判断，选择最优的执行计划        代价模型：资源（CPU IO MEM）的耗损评估性能好坏（7）执行器：根据最优执行计划，执行SQL语句，产生执行结果执行结果：在磁盘的xxxx位置上（8）提供查询缓存（默认是没开启的），会使用redis tair替代查询缓存功能（9）提供日志记录（日志管理章节）：binlog，默认是没开启的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.3.2.3 存储引擎层（类似于Linux中的文件系统）</p><pre class="line-numbers language-undefined"><code class="language-undefined">负责根据SQL层执行的结果，从磁盘上拿数据。将16进制的磁盘数据，交由SQL结构化化成表，连接层的专用线程返回给用户。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="1-4-逻辑结构"><a href="#1-4-逻辑结构" class="headerlink" title="1.4 逻辑结构"></a>1.4 逻辑结构</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-127fff46fdb7fea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/505/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-4-1-库："><a href="#1-4-1-库：" class="headerlink" title="1.4.1 库："></a>1.4.1 库：</h3><pre class="line-numbers language-undefined"><code class="language-undefined">库名，库属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-4-2-表"><a href="#1-4-2-表" class="headerlink" title="1.4.2 表"></a>1.4.2 表</h3><p>微观</p><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">扇区、OS block、PAGE、extents 设计理念，都是为了能够程序  -----> OS -----> HDISK 从逻辑操作，到物理操作都能够保证尽可能“连续”IO。段 ： segments , 一个表就是一个段，由1-N个区构成。区 ： extents,  又被称之为“簇”，由64个连续的PAGE构成。默认大小1M。页 :  PAGE，MySQL 最小IO单元，默认大小 16KB，连续的4个OS block。OS block : 文件系统块，默认是4KB，连续的8个扇区。扇区     ： 默认512字节，连续的512字节长度的磁盘区域。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">表名属性列:列名(字段),列属性(数据类型,约束等)数据行(记录)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-5-物理存储结构引入"><a href="#1-5-物理存储结构引入" class="headerlink" title="1.5 物理存储结构引入"></a>1.5 物理存储结构引入</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-bfd40838aef7971b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/973/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-5-1-库的物理存储结构"><a href="#1-5-1-库的物理存储结构" class="headerlink" title="1.5.1 库的物理存储结构"></a>1.5.1 库的物理存储结构</h3><pre class="line-numbers language-undefined"><code class="language-undefined">用文件系统的目录来存储<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-5-2-表的物理存储结构"><a href="#1-5-2-表的物理存储结构" class="headerlink" title="1.5.2 表的物理存储结构"></a>1.5.2 表的物理存储结构</h3><pre class="line-numbers language-css"><code class="language-css">MyISAM（一种引擎）的表：-rw-r----- <span class="token number">1</span> mysql mysql   <span class="token number">10816</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> user<span class="token number">.</span>frm-rw-r----- <span class="token number">1</span> mysql mysql     <span class="token number">396</span> Apr <span class="token number">18</span> <span class="token property">12</span><span class="token punctuation">:</span><span class="token number">20</span>  user<span class="token number">.</span>MYD-rw-r----- <span class="token number">1</span> mysql mysql    <span class="token number">4096</span> Apr <span class="token number">18</span> <span class="token property">14</span><span class="token punctuation">:</span><span class="token number">48</span> user<span class="token number">.</span>MYI<span class="token function">InnoDB</span><span class="token punctuation">(</span>默认的存储引擎<span class="token punctuation">)</span>的表：-rw-r----- <span class="token number">1</span> mysql mysql    <span class="token number">8636</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> time_zone<span class="token number">.</span>frm-rw-r----- <span class="token number">1</span> mysql mysql   <span class="token number">98304</span> Apr <span class="token number">18</span> <span class="token property">11</span><span class="token punctuation">:</span><span class="token number">37</span> time_zone<span class="token number">.</span>ibdtime_zone<span class="token number">.</span>frm：存储列相关信息time_zone<span class="token number">.</span>ibd：数据行+索引<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-3-表的段、区、页（16k）（了解）"><a href="#1-5-3-表的段、区、页（16k）（了解）" class="headerlink" title="1.5.3 表的段、区、页（16k）（了解）"></a>1.5.3 表的段、区、页（16k）（了解）</h3><pre class="line-numbers language-undefined"><code class="language-undefined">页：最小的存储单元，默认16k区：64个连续的页，共1M段：一个表就是一个段，包含一个或多个区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-基础管理"><a href="#2-基础管理" class="headerlink" title="2. 基础管理"></a>2. 基础管理</h1><h2 id="2-1-用户、权限管理"><a href="#2-1-用户、权限管理" class="headerlink" title="2.1 用户、权限管理"></a>2.1 用户、权限管理</h2><h3 id="2-1-1-用户"><a href="#2-1-1-用户" class="headerlink" title="2.1.1 用户"></a>2.1.1 用户</h3><h3 id="2-查询"><a href="#2-查询" class="headerlink" title="2-查询"></a>2-查询</h3><pre><code>mysql&gt; select user,host ,authentication_string ,plugin from mysql.user;mysql&gt; desc mysql.user;    -- 查询表定义</code></pre><p>作用：</p><pre class="line-numbers language-undefined"><code class="language-undefined">登录，管理数据库逻辑对象<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>定义：</p><pre class="line-numbers language-kotlin"><code class="language-kotlin">用户名@<span class="token string">'白名单'</span>白名单支持的方式？<span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.%'</span>    <span class="token label symbol">wordpress@</span><span class="token string">'%'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.200'</span><span class="token label symbol">wordpress@</span><span class="token string">'localhost'</span><span class="token label symbol">wordpress@</span><span class="token string">'db02'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.5%'</span><span class="token label symbol">wordpress@</span><span class="token string">'10.0.0.0/255.255.254.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>管理操作：</p><pre class="line-numbers language-css"><code class="language-css">增：mysql> create user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>查：mysql> desc mysql<span class="token number">.</span>user<span class="token punctuation">;</span>    ---->  authentication_stringmysql> select user ,host ,authentication_string from mysql<span class="token number">.</span>user改<span class="token punctuation">:</span>mysql> alter user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'456'</span><span class="token punctuation">;</span>删：mysql> drop user oldboy@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span>用户锁定 ACCOUNT LOCK    ACCOUNT UNLOCK        mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT LOCK<span class="token punctuation">;</span>    mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT UNLOCK<span class="token punctuation">;</span>    ## 密码过期 （了解）    alter user oldboy@<span class="token string">'10.0.0.%'</span> PASSWORD EXPIRE<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-2-权限"><a href="#2-1-2-权限" class="headerlink" title="2.1.2 权限"></a>2.1.2 权限</h3><p>权限管理操作：</p><pre class="line-numbers language-css"><code class="language-css">mysql> grant all on wordpress<span class="token number">.</span>* to wordpress@<span class="token string">'10.0.0.%'</span> identified  by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常用权限介绍:</p><pre class="line-numbers language-dart"><code class="language-dart">ALL<span class="token punctuation">:</span>SELECT<span class="token punctuation">,</span>INSERT<span class="token punctuation">,</span> UPDATE<span class="token punctuation">,</span> DELETE<span class="token punctuation">,</span> CREATE<span class="token punctuation">,</span> DROP<span class="token punctuation">,</span> RELOAD<span class="token punctuation">,</span> SHUTDOWN<span class="token punctuation">,</span> PROCESS<span class="token punctuation">,</span> FILE<span class="token punctuation">,</span> REFERENCES<span class="token punctuation">,</span> INDEX<span class="token punctuation">,</span> ALTER<span class="token punctuation">,</span> SHOW DATABASES<span class="token punctuation">,</span> SUPER<span class="token punctuation">,</span> CREATE TEMPORARY TABLES<span class="token punctuation">,</span> LOCK TABLES<span class="token punctuation">,</span> EXECUTE<span class="token punctuation">,</span> REPLICATION SLAVE<span class="token punctuation">,</span> REPLICATION CLIENT<span class="token punctuation">,</span> CREATE VIEW<span class="token punctuation">,</span> SHOW VIEW<span class="token punctuation">,</span> CREATE ROUTINE<span class="token punctuation">,</span> ALTER ROUTINE<span class="token punctuation">,</span> CREATE USER<span class="token punctuation">,</span> EVENT<span class="token punctuation">,</span> TRIGGER<span class="token punctuation">,</span> CREATE TABLESPACEALL <span class="token punctuation">:</span> 以上所有权限，一般是普通管理员拥有的<span class="token keyword">with</span> grant option：超级管理员才具备的，给别的用户授权的功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>权限作用范围:</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span>                  <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>管理员用户wordpress<span class="token punctuation">.</span><span class="token operator">*</span>          <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>开发和应用用户wordpress<span class="token punctuation">.</span>t1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需求1：windows机器的navicat登录到linux中的MySQL，管理员用户。</p><pre class="line-numbers language-css"><code class="language-css">mysql> grant all on *<span class="token number">.</span>* to root@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需求2：创建一个应用用户app用户，能从windows上登录mysql，并能操作app库</p><pre class="line-numbers language-csharp"><code class="language-csharp">mysql<span class="token operator">></span> grant <span class="token keyword">select</span> <span class="token punctuation">,</span>update<span class="token punctuation">,</span>insert<span class="token punctuation">,</span>delete on app<span class="token punctuation">.</span><span class="token operator">*</span> to app<span class="token string">@'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-3-开发人员用户授权流程"><a href="#2-1-3-开发人员用户授权流程" class="headerlink" title="2.1.3 开发人员用户授权流程"></a>2.1.3 开发人员用户授权流程</h3><pre class="line-numbers language-undefined"><code class="language-undefined">1.权限2.对谁操作3.你从哪来4.密码要求<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-4-提示：8-0在grant命令添加新特性"><a href="#2-1-4-提示：8-0在grant命令添加新特性" class="headerlink" title="2.1.4 提示：8.0在grant命令添加新特性"></a>2.1.4 提示：8.0在grant命令添加新特性</h3><pre class="line-numbers language-undefined"><code class="language-undefined">建用户和授权分开了grant 不再支持自动创建用户了，不支持改密码授权之前，必须要提前创建用户。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-1-5-查看授权"><a href="#2-1-5-查看授权" class="headerlink" title="2.1.5 查看授权"></a>2.1.5 查看授权</h3><pre class="line-numbers language-css"><code class="language-css">mysql> show grants for app@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-6-回收权限"><a href="#2-1-6-回收权限" class="headerlink" title="2.1.6 回收权限"></a>2.1.6 回收权限</h3><pre class="line-numbers language-csharp"><code class="language-csharp">revoke  delete on app<span class="token punctuation">.</span><span class="token operator">*</span>  <span class="token keyword">from</span> app<span class="token string">@'10.0.0.%'</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-1-7-本地管理员用户密码忘记"><a href="#2-1-7-本地管理员用户密码忘记" class="headerlink" title="2.1.7 本地管理员用户密码忘记."></a>2.1.7 本地管理员用户密码忘记.</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># mysqld_safe <span class="token operator">--</span>skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables <span class="token operator">--</span>skip<span class="token operator">-</span>networking <span class="token operator">&amp;</span>mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>mysql<span class="token operator">></span>  alter user root<span class="token string">@'localhost'</span> identified by <span class="token string">'123456'</span><span class="token punctuation">;</span><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># pkill mysqld<span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># systemctl start  mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-2-连接管理"><a href="#2-2-连接管理" class="headerlink" title="2.2 连接管理"></a>2.2 连接管理</h2><h3 id="2-2-1-自带客户端命令"><a href="#2-2-1-自带客户端命令" class="headerlink" title="2.2.1 自带客户端命令"></a>2.2.1 自带客户端命令</h3><p>mysql  常用参数：</p><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token operator">-</span>u                   用户<span class="token operator">-</span>p                   密码<span class="token operator">-</span>h                   <span class="token constant">IP</span><span class="token operator">-</span><span class="token constant">P</span>                   端口<span class="token operator">-</span><span class="token constant">S</span>                   socket文件<span class="token operator">-</span>e                   免交互执行命令<span class="token operator">&lt;</span>                    导入<span class="token constant">SQL</span>脚本<span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -h 10.0.0.51 -P3306</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span>mysql<span class="token operator">></span> select <span class="token variable">@@socket</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token variable">@@socket</span>        <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">|</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -S /tmp/mysql.sock</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p -e "select user,host from mysql.user;"</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> user          <span class="token operator">|</span> host      <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> abc          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> app          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> root          <span class="token operator">|</span> <span class="token number">10.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">%</span>  <span class="token operator">|</span><span class="token operator">|</span> mysql<span class="token punctuation">.</span>session <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">|</span> mysql<span class="token punctuation">.</span>sys    <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">|</span> root          <span class="token operator">|</span> localhost <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p &lt;world.sql</span><span class="token constant">Enter</span> password<span class="token punctuation">:</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-多种启动方式介绍"><a href="#2-3-多种启动方式介绍" class="headerlink" title="2.3 多种启动方式介绍"></a>2.3 多种启动方式介绍</h2><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-54becae60bf4ca48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/860/format/webp" alt="img"></p><p>image</p><p>提示：</p><pre class="line-numbers language-undefined"><code class="language-undefined">以上多种方式，都可以单独启动MySQL服务mysqld_safe和mysqld一般是在临时维护时使用。另外，从Centos 7系统开始，支持systemd直接调用mysqld的方式进行启动数据库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-4-初始化配置"><a href="#2-4-初始化配置" class="headerlink" title="2.4 初始化配置"></a>2.4 初始化配置</h2><h3 id="2-4-0-作用"><a href="#2-4-0-作用" class="headerlink" title="2.4.0 作用"></a>2.4.0 作用</h3><pre class="line-numbers language-undefined"><code class="language-undefined">控制MySQL的启动影响到客户端的连接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-4-1-初始化配置的方法"><a href="#2-4-1-初始化配置的方法" class="headerlink" title="2.4.1 初始化配置的方法"></a>2.4.1 初始化配置的方法</h3><pre class="line-numbers language-undefined"><code class="language-undefined">预编译**配置文件(所有启动方式)**命令行参数 (仅限于 mysqld_safe mysqld)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4-2-初始配置文件"><a href="#2-4-2-初始配置文件" class="headerlink" title="2.4.2 初始配置文件"></a>2.4.2 初始配置文件</h3><p>初始化配置文件的默认读取路径</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@db01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqld --help --verbose |grep my.cnf</span>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf注:默认情况下，MySQL启动时，会依次读取以上配置文件，如果有重复选项，会以最后一个文件设置的为准。但是，如果启动时加入了--defaults-file<span class="token operator">=</span>xxxx时，以上的所有文件都不会读取.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置文件的书写方式:</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>标签<span class="token punctuation">]</span>配置项<span class="token operator">=</span>xxxx标签类型：服务端、客户端服务器端标签：<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span><span class="token punctuation">[</span>mysqld_safe<span class="token punctuation">]</span><span class="token punctuation">[</span>server<span class="token punctuation">]</span>客户端标签：<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span><span class="token punctuation">[</span>mysqldump<span class="token punctuation">]</span><span class="token punctuation">[</span>client<span class="token punctuation">]</span>配置文件的示例展示：<span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># cat <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysqlsocket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockserver_id<span class="token operator">=</span><span class="token number">6</span>port<span class="token operator">=</span><span class="token number">3306</span>log_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql<span class="token operator">/</span>mysql<span class="token punctuation">.</span>log<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockprompt<span class="token operator">=</span>Master <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5-多实例的应用"><a href="#2-5-多实例的应用" class="headerlink" title="2.5 多实例的应用"></a>2.5 多实例的应用</h2><h3 id="2-5-1-准备多个目录"><a href="#2-5-1-准备多个目录" class="headerlink" title="2.5.1 准备多个目录"></a>2.5.1 准备多个目录</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">330</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token keyword">data</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-2-准备配置文件"><a href="#2-5-2-准备配置文件" class="headerlink" title="2.5.2 准备配置文件"></a>2.5.2 准备配置文件</h3><pre class="line-numbers language-jsx"><code class="language-jsx">cat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3307/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3307</span>server_id<span class="token operator">=</span><span class="token number">7</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOFcat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3308/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3308</span>server_id<span class="token operator">=</span><span class="token number">8</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOFcat <span class="token operator">></span> <span class="token operator">/</span>data<span class="token regex">/3309/my</span><span class="token punctuation">.</span>cnf <span class="token operator">&lt;</span><span class="token operator">&lt;</span>EOF<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>socklog_error<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>logport<span class="token operator">=</span><span class="token number">3309</span>server_id<span class="token operator">=</span><span class="token number">9</span>log_bin<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token operator">-</span>binEOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-3-初始化三套数据"><a href="#2-5-3-初始化三套数据" class="headerlink" title="2.5.3 初始化三套数据"></a>2.5.3 初始化三套数据</h3><pre class="line-numbers language-jsx"><code class="language-jsx">mv <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf<span class="token punctuation">.</span>bakmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqlmysqld <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>data <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-4-systemd管理多实例"><a href="#2-5-4-systemd管理多实例" class="headerlink" title="2.5.4 systemd管理多实例"></a>2.5.4 systemd管理多实例</h3><pre class="line-numbers language-ruby"><code class="language-ruby">cd <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>systemcp mysqld<span class="token punctuation">.</span>service mysqld3307<span class="token punctuation">.</span>servicecp mysqld<span class="token punctuation">.</span>service mysqld3308<span class="token punctuation">.</span>servicecp mysqld<span class="token punctuation">.</span>service mysqld3309<span class="token punctuation">.</span>servicevim mysqld3307<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnfvim mysqld3308<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnfvim mysqld3309<span class="token punctuation">.</span>service<span class="token constant">ExecStart</span><span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld  <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-5-授权"><a href="#2-5-5-授权" class="headerlink" title="2.5.5 授权"></a>2.5.5 授权</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-6-启动"><a href="#2-5-6-启动" class="headerlink" title="2.5.6 启动"></a>2.5.6 启动</h3><pre class="line-numbers language-css"><code class="language-css">systemctl start mysqld<span class="token number">3307.</span>servicesystemctl start mysqld<span class="token number">3308.</span>servicesystemctl start mysqld<span class="token number">3309.</span>service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-5-7-验证多实例"><a href="#2-5-7-验证多实例" class="headerlink" title="2.5.7 验证多实例"></a>2.5.7 验证多实例</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin">netstat <span class="token operator">-</span>lnp|grep <span class="token number">330</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3308</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3309</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>e <span class="token string">"select @@server_id"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-mysql8-0特性"><a href="#3-mysql8-0特性" class="headerlink" title="3.mysql8.0特性"></a>3.mysql8.0特性</h1><h2 id="1-增加用户"><a href="#1-增加用户" class="headerlink" title="1-增加用户"></a>1-增加用户</h2><pre class="line-numbers language-css"><code class="language-css"> 增加mysql> create user IF NOT EXISTS oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>彩蛋： <span class="token number">8.0</span> + 版本新特性：    <span class="token number">1.</span> 必须先建用户，再授权。    以下命令不再被支持：    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>    正确方法：     create user zabbix@<span class="token string">'%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span><span class="token punctuation">;</span>    <span class="token number">2.</span> <span class="token number">8.0</span>+ 版本，采用了全新的密码加密插件（caching_sha<span class="token number">2</span>_password）    部分场景下，需要将加密插件替换为<span class="token number">5.7</span>版本支持 mysql_native_password    例如：     主从    MHA    客户端软件    配置方法：     create user zabbix@<span class="token string">'%'</span> identified  by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix@<span class="token string">'%'</span><span class="token punctuation">;</span>    替换为<span class="token punctuation">:</span>     create user zabbix<span class="token number">2</span>@<span class="token string">'%'</span> identified  with mysql_native_password   by <span class="token string">'123'</span><span class="token punctuation">;</span>    grant all on *<span class="token number">.</span>* to zabbix<span class="token number">2</span>@<span class="token string">'%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>##2- 修改密码 </p><pre class="line-numbers language-powershell"><code class="language-powershell">alter user oldboy@<span class="token string">'10.0.0.%'</span> identified by <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 8.0 修改密码插件</span>    alter user zabbix@<span class="token string">'%'</span>  identified with mysql_native_password  by <span class="token string">'123456'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 用户锁定 </span>    ACCOUNT LOCK    ACCOUNT UNLOCK        mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT LOCK<span class="token punctuation">;</span>    mysql> alter user test@<span class="token string">'10.0.0.%'</span> ACCOUNT UNLOCK<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">## 密码过期 （了解）</span>    alter user oldboy@<span class="token string">'10.0.0.%'</span> PASSWORD EXPIRE<span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 删除 </span>    mysql> drop user test@<span class="token string">'10.0.0.%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-权限的定义"><a href="#3-权限的定义" class="headerlink" title="3-权限的定义"></a>3-权限的定义</h2><pre><code>MySQL : 8.0 以前，以命令为授权粒度。8.0 以后，加入了role（角色）方式授权。通过以下命令，可以查看可授权的列表mysql&gt; show privileges;8.0 中角色(role)功能    # 创建角色： CREATE ROLE &#39;app_developer&#39;, &#39;app_read&#39;, &#39;app_write&#39;;    # 角色授权：GRANT ALL ON app_db.* TO &#39;app_developer&#39;;GRANT SELECT ON app_db.* TO &#39;app_read&#39;;GRANT INSERT, UPDATE, DELETE ON app_db.* TO &#39;app_write&#39;;    # 创建用户： CREATE USER &#39;dev1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dev1pass&#39;;CREATE USER &#39;read_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user1pass&#39;;CREATE USER &#39;read_user2&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user2pass&#39;;CREATE USER &#39;rw_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;rw_user1pass&#39;;    # 授权用户角色GRANT &#39;app_developer&#39; TO &#39;dev1&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39; TO &#39;read_user1&#39;@&#39;localhost&#39;, &#39;read_user2&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39;, &#39;app_write&#39; TO &#39;rw_user1&#39;@&#39;localhost&#39;;    </code></pre><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><pre><code>day02-老男孩教育-MySQL中级DBA课程-15K+第二章体系结构及基础管理（下）1. MySQL 逻辑结构（抽象）1.1 MySQL逻辑结构和Linux对比MySQL        Linux库           目录表           文件Linux 中一切皆文件。Linux中一切皆命令。MySQL 中一切皆表。一切皆SQL。1.2 MySQL 逻辑对象的特点库 ： 库名 + 库属性表 ： 列(字段：列名，列属性) + 行（记录）+ 表属性2. 物理结构    2.1  宏观    2.1.1 库     2.1.2 表 略 。 见图片。2.2  微观扇区、OS block、PAGE、extents 设计理念，都是为了能够程序  -----&gt; OS -----&gt; HDISK 从逻辑操作，到物理操作都能够保证尽可能“连续”IO。段 ： segments , 一个表就是一个段，由1-N个区构成。区 ： extents,  又被称之为“簇”，由64个连续的PAGE构成。默认大小1M。页 :  PAGE，MySQL 最小IO单元，默认大小 16KB，连续的4个OS block。OS block : 文件系统块，默认是4KB，连续的8个扇区。扇区     ： 默认512字节，连续的512字节长度的磁盘区域。3. MySQL基础管理   3.1 用户管理   3.1.1 作用# Linux 用户的作用？ 登录 管理对象（文件）# MySQL 用户作用？登录 管理对象（库、表）3.1.2 用户的定义？# Linux字符串表示用户名 oldguo oldboy# MySQL 用户名@&#39;白名单&#39;oldboy@&#39;白名单&#39;白名单？允许登录数据库的主机名单例子：     常用的： oldboy@&#39;localhost&#39;  -- 只允许本机oldboy登录oldboy@&#39;10.0.0.%&#39;   -- 允许10.0.0.0/24网段，以oldboy用户登录数据库oldboy@&#39;10.0.0.5%&#39;  -- 允许50-59段的地址，以oldboy用户登录数据库oldboy@&#39;10.0.0.0/255.255.254.0&#39; -- 允许10.0.0.0/23网段，以oldboy用户登录数据库    不常用：oldboy@&#39;%&#39;          -- 允许所有网络地址，以oldboy用户登录数据库oldboy@&#39;db02&#39;oldboy@&#39;oldboy.com&#39;3.1.3 用户管理  # 查询 mysql&gt; select user,host ,authentication_string ,plugin from mysql.user;+---------------+-----------+-------------------------------------------+-----------------------+| user          | host      | authentication_string                     | plugin                |+---------------+-----------+-------------------------------------------+-----------------------+| root          | localhost | *23AE809DDACAF96AF0FD78ED04B6A265E05AA257 | mysql_native_password || mysql.session | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password || mysql.sys     | localhost | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |+---------------+-----------+-------------------------------------------+-----------------------+mysql&gt; desc mysql.user;    -- 查询表定义# 增加mysql&gt; create user IF NOT EXISTS oldboy@&#39;10.0.0.%&#39; identified by &#39;123&#39;;彩蛋： 8.0 + 版本新特性：    1. 必须先建用户，再授权。    以下命令不再被支持：    grant all on *.* to zabbix@&#39;%&#39; identified by &#39;123&#39;;    正确方法：     create user zabbix@&#39;%&#39; identified by &#39;123&#39;;    grant all on *.* to zabbix@&#39;%&#39;;    2. 8.0+ 版本，采用了全新的密码加密插件（caching_sha2_password）    部分场景下，需要将加密插件替换为5.7版本支持 mysql_native_password    例如：     主从    MHA    客户端软件    配置方法：     create user zabbix@&#39;%&#39; identified  by &#39;123&#39;;    grant all on *.* to zabbix@&#39;%&#39;;    替换为:     create user zabbix2@&#39;%&#39; identified  with mysql_native_password   by &#39;123&#39;;    grant all on *.* to zabbix2@&#39;%&#39;;# 修改     ## 修改密码      alter user oldboy@&#39;10.0.0.%&#39; identified by &#39;123456&#39;;    ## 8.0 修改密码插件    alter user zabbix@&#39;%&#39;  identified with mysql_native_password  by &#39;123456&#39;;    ## 用户锁定     ACCOUNT LOCK    ACCOUNT UNLOCK        mysql&gt; alter user test@&#39;10.0.0.%&#39; ACCOUNT LOCK;    mysql&gt; alter user test@&#39;10.0.0.%&#39; ACCOUNT UNLOCK;    ## 密码过期 （了解）    alter user oldboy@&#39;10.0.0.%&#39; PASSWORD EXPIRE;# 删除     mysql&gt; drop user test@&#39;10.0.0.%&#39;;3.2 权限 3.2.1 作用 #  Linux 中的作用 ？ 约束、控制 用户能够对 Linux 文件 做什么样的操作。权限属于文件的属性。# MySQL 中的作用约束、控制用户能够对 MySQL 中的对象（库、表）做什么样的操作。权限属于用户的属性。3.2.2 权限的定义？ #  Linux ：R 、W 、X4   2   1#  MySQL : 8.0 以前，以命令为授权粒度。8.0 以后，加入了role（角色）方式授权。通过以下命令，可以查看可授权的列表mysql&gt; show privileges;比较特殊的权限： ALL,包含了权限列表中，所有的权限，除了Grant optiongrant all privileges  on  .....3.2.3 权限管理 #  授权  ##  例子1：超级管理员用户（oldguo@&#39;10.0.0.%&#39;）授权   ## 5.7    mysql&gt; grant  all   on   *.*   to   oldguo@&#39;10.0.0.%&#39;   identified by &#39;123&#39;    with grant option;   grant  权限     on  权限范围  to  用户  identified by 密码  ;权限范围? 指的是，用户能够操作的对象是哪些。*.*          ====&gt;      chmod -R 777  /            全库级别，管理员用户oldboy.*     ====&gt;      chmod -R 777 /oldboy/*     单库级别，普通用户oldboy.t1    ====&gt;      chmod -R 777 /oldboy/t1##   例子2： 授权一个普通用户 test@&#39;10.0.0.%&#39; ,权限为 select 、update、delete、insert，范围：test.*mysql&gt; grant select,update,delete,insert on test.*  to test@&#39;10.0.0.%&#39; identified by &#39;123&#39;;# 查看授权 mysql&gt; show grants for test@&#39;10.0.0.%&#39;;# 回收权限注意： MySQL中不能重复授权，达到修改权限的目录。是相加关系。mysql&gt; revoke delete on test.* from &#39;test&#39;@&#39;10.0.0.%&#39; ;mysql&gt; show grants for test@&#39;10.0.0.%&#39;;扩展： 权限列表介绍------------------------+---------------------------------------+-------------------------------------------------------+| Privilege               | Context                               | Comment                                               |+-------------------------+---------------------------------------+---------------------------------------| Alter                   | Tables                                | To alter the table                                    || Alter routine           | Functions,Procedures                  | To alter or drop stored functions/procedures          || Create                  | Databases,Tables,Indexes              | To create new databases and tables                    || Create routine          | Databases                             | To use CREATE FUNCTION/PROCEDURE                      || Create temporary tables | Databases                             | To use CREATE TEMPORARY TABLE                         || Create view             | Tables                                | To create new views                                   || Create user             | Server Admin                          | To create new users                                   || Delete                  | Tables                                | To delete existing rows                               || Drop                    | Databases,Tables                      | To drop databases, tables, and views                  || Event                   | Server Admin                          | To create, alter, drop and execute events             || Execute                 | Functions,Procedures                  | To execute stored routines                            || File                    | File access on server                 | To read and write files on the server                 || Grant option            | Databases,Tables,Functions,Procedures | To give to other users those privileges you possess   || Index                   | Tables                                | To create or drop indexes                             || Insert                  | Tables                                | To insert data into tables                            || Lock tables             | Databases                             | To use LOCK TABLES (together with SELECT privilege)   || Process                 | Server Admin                          | To view the plain text of currently executing queries || Proxy                   | Server Admin                          | To make proxy user possible                           || References              | Databases,Tables                      | To have references on tables                          || Reload                  | Server Admin                          | To reload or refresh tables, logs and privileges      || Replication client      | Server Admin                          | To ask where the slave or master servers are          || Replication slave       | Server Admin                          | To read binary log events from the master             || Select                  | Tables                                | To retrieve rows from table                           || Show databases          | Server Admin                          | To see all databases with SHOW DATABASES              || Show view               | Tables                                | To see views with SHOW CREATE VIEW                    || Shutdown                | Server Admin                          | To shut down the server                               || Super                   | Server Admin                          | To use KILL thread, SET GLOBAL, CHANGE MASTER, etc.   || Trigger                 | Tables                                | To use triggers                                       || Create tablespace       | Server Admin                          | To create/alter/drop tablespaces  彩蛋：      8.0 中角色(role)功能    # 创建角色： CREATE ROLE &#39;app_developer&#39;, &#39;app_read&#39;, &#39;app_write&#39;;    # 角色授权：GRANT ALL ON app_db.* TO &#39;app_developer&#39;;GRANT SELECT ON app_db.* TO &#39;app_read&#39;;GRANT INSERT, UPDATE, DELETE ON app_db.* TO &#39;app_write&#39;;    # 创建用户： CREATE USER &#39;dev1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dev1pass&#39;;CREATE USER &#39;read_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user1pass&#39;;CREATE USER &#39;read_user2&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;read_user2pass&#39;;CREATE USER &#39;rw_user1&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;rw_user1pass&#39;;    # 授权用户角色GRANT &#39;app_developer&#39; TO &#39;dev1&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39; TO &#39;read_user1&#39;@&#39;localhost&#39;, &#39;read_user2&#39;@&#39;localhost&#39;;GRANT &#39;app_read&#39;, &#39;app_write&#39; TO &#39;rw_user1&#39;@&#39;localhost&#39;;    3.3 连接管理 3.3.1 自带的客户端程序连接# mysql      ## 参数 ： -u  -p -S -h -P -e &lt;  ### 本地连接（socket文件）前提：提前创建可以本地连接的用户，例如 :  test@&#39;localhost&#39;mysql&gt; grant all on *.* to test@&#39;localhost&#39; identified by &#39;123&#39;;[root@db01 data]# mysql     -utest      -p123     -S /tmp/mysql.sock说明:  什么情况下可以不加-S 参数？    1. 配置文件中 [mysql] 或者 [client]下已经制定socket正确位置。    2. 二进制版本的软件，如果服务器启动时，将socket存放到了/tmp/mysql.sock。### 远程登录 前提：提前创建能够用做远程登录的用户，例如：test1@&#39;10.0.0.%&#39;mysql&gt; grant all on *.* to test1@&#39;10.0.0.%&#39; identified by &#39;123&#39;;[root@db02 ~]# mysql -utest1 -p123     -h 10.0.0.51        -P 3306 ### -e  免交互执行MySQL 内置命令 [root@db01 tmp]# mysql -uroot -p123 -e &quot;select user,host from mysql.user;&quot; 2&gt;/dev/null### &lt;  导入SQL脚本[root@db01 ~]# mysql -uroot -p123 &lt; world.sql ## 内置功能help           :  获取客户端命令帮助\c (Ctrl+C)    :  结束上条命令运行Ctrl+l         :  清理屏幕Ctrl+d（\q）   :  退出会话\G             ： 格式化输出source         :  导入SQL脚本system         :  MySQL中调用操作系统命令use            ： 进入某个库# mysqladmin # mysqldump（备份章节） 3.3.2  开发工具# sqlyog # navicat# workbench </code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/22/hello-world/"/>
      <url>/2020/04/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第五章SQL 常识</title>
      <link href="/2020/02/26/05-sql-ying-yong-ji-chu/"/>
      <url>/2020/02/26/05-sql-ying-yong-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="1-SQL-常识"><a href="#1-SQL-常识" class="headerlink" title="1. SQL 常识"></a>1. SQL 常识</h1><h2 id="1-1-SQL的介绍"><a href="#1-1-SQL的介绍" class="headerlink" title="1.1 SQL的介绍"></a>1.1 SQL的介绍</h2><pre class="line-numbers language-shell"><code class="language-shell">属于关系型数据库产品中专用的语句。结构化查询语句。MySQL 1.2  SQL 标准SQL-89  \ SQL-92  \  SQL-99   \SQL03 .....1.3 sql_mode <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3-1-作用"><a href="#1-3-1-作用" class="headerlink" title="1.3.1 作用"></a>1.3.1 作用</h2><pre class="line-numbers language-scss"><code class="language-scss">影响到了SQL语句的执行行为。为了让数据库在存、取能够满足生活的常识、科学的逻辑，让这些数据有意义。例子：     现实生活中常识：        日期： <span class="token number">1000</span>-<span class="token number">9999</span> 年 <span class="token number">1</span>-<span class="token number">12</span> 月 <span class="token number">1</span>-<span class="token number">31</span>日     科学逻辑：                 除法：除数不能为<span class="token number">0</span><span class="token number">1.3.2</span> 查看sql_mode mysql> select @@sql_mode<span class="token punctuation">;</span><span class="token property">ONLY_FULL_GROUP_BY</span>          <span class="token punctuation">:</span>  针对group by 语句执行时的规范<span class="token property">STRICT_TRANS_TABLES</span>         <span class="token punctuation">:</span>  针对事务表启动严格模式NO_ZERO_IN_DATE             ： <span class="token number">2010</span>-<span class="token number">00</span>-<span class="token number">10</span>NO_ZERO_DATE                ： <span class="token number">0000</span>-<span class="token number">00</span>-<span class="token number">00</span>ERROR_FOR_DIVISION_BY_ZERO  ： 除数不能为<span class="token number">0</span>NO_AUTO_CREATE_USER         ： 是否自动创建用户<span class="token property">NO_ENGINE_SUBSTITUTION</span>      <span class="token punctuation">:</span>  建表是使用了一个不支持的存储引擎报错。        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-数据库对象属性介绍"><a href="#2-数据库对象属性介绍" class="headerlink" title="2. 数据库对象属性介绍"></a>2. 数据库对象属性介绍</h1><h2 id="2-1-数据库对象"><a href="#2-1-数据库对象" class="headerlink" title="2.1 数据库对象"></a>2.1 数据库对象</h2><pre><code>库    库名    库属性：字符集、校对规则表     表名     列 ：        列名        列属性：数据类型、约束、其他属性    行    表属性：引擎、字符集、校对规则、其他。</code></pre><h3 id="2-2-字符集"><a href="#2-2-字符集" class="headerlink" title="2.2 字符集"></a>2.2 字符集</h3><pre><code>2.2 字符集  2.2.1 作用 MySQL 中的 “密码本”2.2.2 种类utf8    not  UTF-8  utf8mb4 is   UTF-8（万国码）特点 : 1. utf8   , 最大支持3字节的字符。不支持emoji字符2. utf8mb4, 最大支持4字节的字符。支持emoji字符。8.0之前，默认字符集latin1,8.0之后是utf8mb4。我们建议使用utf8mb4.</code></pre><h3 id="2-2-3-设置方法"><a href="#2-2-3-设置方法" class="headerlink" title="2.2.3 设置方法"></a>2.2.3 设置方法</h3><pre><code>默认字符集参数建库建表2.3 校对规则（排序规则）  2.3.1 作用 影响到数据的排序方式。    ASCII码a    97b    98c    99d    100A    65B    66C    67D    68</code></pre><h2 id="2-3-2-查看属性"><a href="#2-3-2-查看属性" class="headerlink" title="2.3.2 查看属性"></a>2.3.2 查看属性</h2><pre><code>mysql&gt; show collation;</code></pre><h2 id="2-4-列属性"><a href="#2-4-列属性" class="headerlink" title="2.4 列属性"></a>2.4 列属性</h2><h3 id="2-4-1-数据类型"><a href="#2-4-1-数据类型" class="headerlink" title="2.4.1 数据类型"></a>2.4.1 数据类型</h3><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#  作用 </span>尽可能保证数据是有意义的。<span class="token comment" spellcheck="true">#  种类 </span><span class="token comment" spellcheck="true">## 数字类型</span>整数：    tinyint   1字节  =  8位 = 00000000 <span class="token operator">-</span> 11111111  = 2^8个  = 0  <span class="token operator">-</span> 255     <span class="token punctuation">,</span> <span class="token operator">-</span>127<span class="token operator">-</span>128        int       4字节  =  32位                       = 2^32个 = 0  <span class="token operator">-</span> 2^32<span class="token operator">-</span>1  <span class="token punctuation">,</span><span class="token operator">-</span>2^31<span class="token operator">-</span>2^31<span class="token operator">-</span>1 <span class="token punctuation">,</span>10位数    bigint    8字节                                           0  <span class="token operator">-</span> 2^64<span class="token operator">-</span>1  <span class="token punctuation">,</span><span class="token operator">-</span>2^63<span class="token operator">-</span>2^63<span class="token operator">-</span>1 <span class="token punctuation">,</span>20位数浮点数：    decimal<span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 字符串类型</span>char<span class="token punctuation">(</span>N<span class="token punctuation">)</span>    :     N字符个数，最大不超过255    定长的字符串类型。    例如： char<span class="token punctuation">(</span>10<span class="token punctuation">)</span> <span class="token punctuation">,</span>最多存10个字符<span class="token punctuation">,</span>只要10个字符以内，都10个字符长度的存储空间。剩余用空格填充。varchar<span class="token punctuation">(</span>M<span class="token punctuation">)</span> ：    M字符个数，最大不超过65535    变长的字符串类型。会额外占用1<span class="token operator">-</span>2字节存储字符长度。255字符之内，额外1字节，255以上，额外2字节    例如： varchar<span class="token punctuation">(</span>10<span class="token punctuation">)</span><span class="token punctuation">,</span>最多存10个字符<span class="token punctuation">,</span>按需分配存储空间。    abc 3             =4    asdasdadasd 1000  =1002enum<span class="token punctuation">(</span><span class="token string">'bj'</span><span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">,</span><span class="token string">'tj'</span><span class="token punctuation">,</span><span class="token string">'heibei'</span><span class="token punctuation">,</span><span class="token string">'henan'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>district enum<span class="token punctuation">(</span><span class="token string">'bj'</span><span class="token punctuation">,</span><span class="token string">'sh'</span><span class="token punctuation">,</span><span class="token string">'tj'</span><span class="token punctuation">,</span><span class="token string">'heibei'</span><span class="token punctuation">,</span><span class="token string">'henan'</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5时间类型"><a href="#2-5时间类型" class="headerlink" title="2.5时间类型"></a>2.5时间类型</h2><pre class="line-numbers language-shell"><code class="language-shell">datetime    8字节 timestamp   4字节 DATETIME 范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。TIMESTAMP 1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。timestamp会受到时区的影响<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6二进制类型"><a href="#2-6二进制类型" class="headerlink" title="2.6二进制类型"></a>2.6二进制类型</h3><pre><code>## 二进制类型## json 数据类型数据类型选型： 合适的、足够的、简短的</code></pre><h2 id="2-7约束"><a href="#2-7约束" class="headerlink" title="2.7约束"></a>2.7约束</h2><pre class="line-numbers language-scala"><code class="language-scala"># 主键 primary key （PK）  ： <span class="token number">1</span><span class="token punctuation">.</span> 一张表只能有一个，可以有多个列构成<span class="token number">2</span><span class="token punctuation">.</span> 特点： 非空<span class="token operator">+</span>唯一<span class="token number">3</span><span class="token punctuation">.</span> 建议每张表都设置主键，有利于索引的应用，通常是使用自增的数字列更佳。# 非空 not <span class="token keyword">null</span> <span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">.</span> 特点： 必须录入值。<span class="token number">2</span><span class="token punctuation">.</span> 建议： 每个列最好设置为，有利于索引的应用。# 唯一 unique key ：<span class="token number">1</span><span class="token punctuation">.</span> 特点： 不能有重复值。# 无符号 unsigned<span class="token number">1</span><span class="token punctuation">.</span> 特点： 针对数字列，无符号设定。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-8其他"><a href="#2-8其他" class="headerlink" title="2.8其他"></a>2.8其他</h2><pre><code>表属性 ：         engine  ： 存储引擎设置，默认是innodb，也是我们建议的。        charset ： utf8mb4         comment :  注释。列属性 ：         default       :  默认值。一般是在not null 配合使用        auto_increment： 数字列自增长。一般是在主键列配合使用        comment       ： 列的注释，建议每个列都有</code></pre><h1 id="3-SQL-种类"><a href="#3-SQL-种类" class="headerlink" title="3. SQL 种类"></a>3. SQL 种类</h1><pre><code>3.1  DDL  ： 数据定义语言对于： 库 、表（元数据）的 增、删、改建库、删库、修改库、建表、删表、修改表3.2 DCL  ： 数据控制语言grant revoke 3.3 DML  ： 数据操作语言表的数据行进行的增、删、改、查3.4 DQL  ： 数据查询语言对于表数据行查看对于元数据查看</code></pre><h2 id="1-DDL语句"><a href="#1-DDL语句" class="headerlink" title="1. DDL语句"></a>1. DDL语句</h2><pre class="line-numbers language-CQL"><code class="language-CQL">4.1 DDL-库定义 # 建库  CREATE DATABASE oldguo CHARSET utf8mb4;CREATE DATABASE school CHARSET utf8mb4;# 字符集设置： vim /etc/my.cnf[mysqld]character_set_server=utf8mb4init_connect = "SET NAMES 'utf8mb4'"# 改库  CREATE DATABASE oldli ;SHOW CREATE DATABASE oldboy;SHOW CREATE DATABASE oldli;ALTER DATABASE oldli CHARSET utf8mb4;SHOW CREATE DATABASE oldli;# 删库 DROP DATABASE oldli;# 查库 show databases;SHOW CREATE DATABASE oldboy;# 库定义的 开发规范 开发  ----》  测试   ----》 预发布  ----》生产Windows                                   linuxtest=TEST                               test ≠ TEST1. 库名不能数字开头2. 库名要和业务有关3. 库名不要有大写字符   原因：为了多平台兼容。4. 建库需要显示指定字符集。建议是utf8mb4。    5. 生产中禁用普通用户的drop database权限。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-DDL-表定义"><a href="#2-DDL-表定义" class="headerlink" title="2.DDL  - 表定义"></a>2.DDL  - 表定义</h2><pre><code># 建表 Create table `oldboy`.`student`( `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;, `name` varchar(64) NOT NULL COMMENT &#39;学生姓名&#39;, `age` tinyint UNSIGNED NOT NULL DEFAULT 0 COMMENT &#39;学生年龄&#39;, `gender` CHAR(1) NOT NULL DEFAULT &#39;n&#39; COMMENT &#39;学生性别&#39;, `address` enum(&#39;北京&#39;,&#39;天津&#39;,&#39;上海&#39;,&#39;重庆&#39;,&#39;河北&#39;,&#39;河南&#39;,&#39;山东&#39;,&#39;未知&#39;) NOT NULL DEFAULT &#39;未知&#39; COMMENT &#39;省份&#39;,  `intime` datetime NOT NULL COMMENT &#39;入学时间&#39;, `shenfen` CHAR(18) NOT NULL COMMENT &#39;身份证&#39;, `num` int(10) UNSIGNED ZEROFILL NOT NULL COMMENT &#39;测试&#39;,  primary key (`id`) ) ENGINE=InnoDB charset=utf8mb4 collate=utf8mb4_bin; 补充：  1. `` 反引号， 还原字符串原有的含义。2. 克隆一张和student表结构一致的stu表。create table stu like student;3. 建表规范    a. 表名：         不能数字开头        业务有关        不要大写字母        不要超过18字符        不能是关键字    b. 存储引擎使用InnoDB    c. 5.7版本以后，字符集使用utf8mb4    d. 列名要和业务有关，不要超过18个字符    e. 选择合适、足够、简短数据类型    f. 建议每个列设置not null    g. 每个列要有注释    h. 每个表要有主键    i. 针对not null 列，可以设定默认值。    j. 表注释推荐软件： yearing   开源SQL审核工具。inception SQL审核工具。# 查表mysql&gt; use oldboy;mysql&gt; show tables;mysql&gt; show create table student;  # 命令行mysql&gt; desc student;# 改表（表定义=元数据）  -- 修改表定义  --- 添加列: 在student表中添加telnum列 *****use oldboy;desc student;alter table oldboy.student add column telnum CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; ;desc student;--- 不建议的方式alter table oldboy.student add column a CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; after gender ;desc student;alter table oldboy.student add column b CHAR(11) not null unique key default &#39;0&#39; comment &#39;手机号&#39; first ;desc student;--- 删除列 （不代表生产操作，危险！！！！）alter table student drop  a;alter table student drop  b;alter table student drop  telnum;--- 修改表属性--- 修改表名 alter table student rename to st;--- 修改引擎  *****create table t1(id int)engine=myisam;show create table t1;alter table t1 engine=innodb;--- 修改字符集create table t2(id int)charset=utf8;show create table t2;alter table t2 charset=utf8mb4;--- 修改列属性desc st;--- 修改列名alter table st change shenfen cardnum CHAR(18) not null default &#39;0&#39; comment &#39;身份证&#39;;--- 修改默认值alter table st change cardnum cardnum CHAR(18) not null default &#39;1&#39; comment &#39;身份证&#39;;--- 修改数据类型 *****alter table st modify cardnum CHAR(20) not null default &#39;1&#39; comment &#39;身份证&#39;;#  删表(危险操作！！ 普通用户禁用 drop 操作)drop table stu;# 表定义规范1. 建表      a. 表名：         不能数字开头        业务有关        不要大写字母        不要超过18字符        不能是关键字    b. 存储引擎使用InnoDB    c. 5.7版本以后，字符集使用utf8mb4    d. 列名要和业务有关，不要超过18个字符    e. 选择合适、足够、简短数据类型    f. 建议每个列设置not null    g. 每个列要有注释    h. 每个表要有主键    i. 针对not null 列，可以设定默认值。    j. 表注释    2. 修改表     a. 添加列，使用追加式添加列     b. 修改列属性，尽量使用modify语句    c. 修改表定义，建议在业务不繁忙期间进行。尽量采用pt-osc或者gh-ost工具减少业务影响。</code></pre><pre><code>上作业：     1. 什么是online-ddl? 各个版本的不同？    参考 ： https://dev.mysql.com/doc/refman/5.7/en/innodb-online-ddl-operations.html    2. pt-osc（percona-toolkit : pt-online-schema-change） 或者 gh-ost工具的使用    参考： https://www.jianshu.com/p/c97228b6f60c 或者 百度。</code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL升级和降级</title>
      <link href="/2020/02/24/di-si-zhang-mysql-sheng-ji-he-jiang-ji/"/>
      <url>/2020/02/24/di-si-zhang-mysql-sheng-ji-he-jiang-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MySQL升级和降级"><a href="#1-MySQL升级和降级" class="headerlink" title="1. MySQL升级和降级"></a>1. MySQL升级和降级</h1><p>`</p><h2 id="1-1-方式"><a href="#1-1-方式" class="headerlink" title="1.1 方式"></a>1.1 方式</h2><pre class="line-numbers language-cs"><code class="language-cs">1.1.1 INPLACE  就地 在一台服务器上，原版本升级到新版本。风险较大。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="建议-：-不管哪种方式升级，都应该先做备份。方便失败回退。"><a href="#建议-：-不管哪种方式升级，都应该先做备份。方便失败回退。" class="headerlink" title="==建议 ： 不管哪种方式升级，都应该先做备份。方便失败回退。=="></a>==建议 ： 不管哪种方式升级，都应该先做备份。方便失败回退。==</h3><h2 id="1-1-2-Mergeing-迁移-建议"><a href="#1-1-2-Mergeing-迁移-建议" class="headerlink" title="1.1.2 Mergeing 迁移   建议"></a>1.1.2 Mergeing 迁移   建议</h2><pre class="line-numbers language-SPARQL"><code class="language-SPARQL">备份迁移 主从迁移<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-升级注意事项"><a href="#1-2-升级注意事项" class="headerlink" title="1.2 升级注意事项"></a>1.2 升级注意事项</h3><pre class="line-numbers language-mssql"><code class="language-mssql">a. 支持GA版本之间升级b. 5.6--> 5.7  ,先将5.6升级至最新版，再升级到5.7c. 5.5 ---> 5.7 ,先将5.5 升级至最新，再5.5---> 5.6最新，再5.6--->5.7 最新d. 回退方案要提前考虑好，最好升级前要备份(特别是往8.0版本升级)。e. 降低停机时间（停业务的时间）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-INPLACE-升级过程原理"><a href="#2-INPLACE-升级过程原理" class="headerlink" title="2.INPLACE 升级过程原理"></a>2.INPLACE 升级过程原理</h1><pre class="line-numbers language-cassandra"><code class="language-cassandra">0. 备份原数据库数据a. 安装新版本软件b. 关闭原数据库（挂维护页）c. 使用新版本软件 “挂” 旧版本数据启动(--skip-grant-tables ,--skip-networking)d. 升级 ： 只是升级系统表。升级时间和数据量无关的。e. 正常重启数据库。f. 验证各项功能是否正常。g. 业务恢复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.4 5.6.46 —-&gt; 5.7.28 Inplace 升级演练</p><pre class="line-numbers language-less"><code class="language-less">a<span class="token number">.</span> 安装 新版本软件 b<span class="token number">.</span> 停原库 # <span class="token number">1.</span> 快速关库功能关闭<span class="token punctuation">(</span>优雅关闭<span class="token punctuation">)</span>  vim <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3316</span><span class="token operator">/</span>my<span class="token number">.</span>cnf ## 添加以下配置innodb_fast_shutdown=<span class="token number">0</span> [root<span class="token variable">@db01</span> data]# systemctl stop mysqld<span class="token number">3316</span>c<span class="token number">.</span> 使用高版本软件挂低版本数据启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-停止数据库"><a href="#1-停止数据库" class="headerlink" title="1-停止数据库"></a>1-停止数据库</h3><pre><code>[root@db01 data]# systemctl stop mysqld3316</code></pre><h2 id="2-使用高版本软件挂低版本数据启动"><a href="#2-使用高版本软件挂低版本数据启动" class="headerlink" title="2- 使用高版本软件挂低版本数据启动"></a>2- 使用高版本软件挂低版本数据启动</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># vim /data/3316/my.cnf </span><span class="token namespace">[mysqld]</span>user=mysqlbasedir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span><span class="token keyword">data</span>socket=<span class="token operator">/</span>tmp<span class="token operator">/</span>mysql3316<span class="token punctuation">.</span>sockport=3316server_id=16innodb_fast_shutdown=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-启动"><a href="#3-启动" class="headerlink" title="3-启动"></a>3-启动</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 data]# /data/app/mysql/bin/mysqld_safe --defaults-file=/data/3316/my.cnf --skip-grant-tables --skip-networking &<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-升级"><a href="#4-升级" class="headerlink" title="4-升级"></a>4-升级</h2><p> 升级 （升级到8.0可以省略）</p><pre><code>d. 升级 （升级到8.0可以省略）[root@db01 data]# /data/app/mysql/bin/mysql_upgrade -S /tmp/mysql3316.sock --force </code></pre><h2 id="5-重启数据库到正常状态"><a href="#5-重启数据库到正常状态" class="headerlink" title="5-重启数据库到正常状态"></a>5-重启数据库到正常状态</h2><pre class="line-numbers language-spreadsheet"><code class="language-spreadsheet">[root@db01 data]# mysqladmin -S /tmp/mysql3316.sock shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修改启动脚本"><a href="#修改启动脚本" class="headerlink" title="修改启动脚本"></a>修改启动脚本</h3><pre class="line-numbers language-powershell"><code class="language-powershell">修改以下内容 <span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># vim /etc/systemd/system/mysqld3316.service </span>ExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">-</span><span class="token namespace">[root@China ~]</span> <span class="token comment" spellcheck="true"># cat /etc/systemd/system/mysqld3316.service </span><span class="token namespace">[Unit]</span>Description=MySQL ServerDocumentation=man:mysqld<span class="token punctuation">(</span>8<span class="token punctuation">)</span>Documentation=http:<span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter=network<span class="token punctuation">.</span>targetAfter=syslog<span class="token punctuation">.</span>target<span class="token namespace">[Install]</span>WantedBy=multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token namespace">[Service]</span>User=mysql<span class="token function">Group</span>=mysqlExecStart=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql80<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file=<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>3316<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE = 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-启动数据库"><a href="#6-启动数据库" class="headerlink" title="6-启动数据库"></a>6-启动数据库</h2><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># systemctl start mysqld3316 </span><span class="token comment" spellcheck="true"># 连接查看</span><span class="token namespace">[root@db01 data]</span><span class="token comment" spellcheck="true"># mysql -S /tmp/mysql3316.sock</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># mysqlsh root:123@10.0.0.51:3306 -e "util.checkForServerUpgrade()"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-SQL-应用基础"><a href="#3-SQL-应用基础" class="headerlink" title="3.-SQL 应用基础"></a>3.-SQL 应用基础</h1><h2 id="1、SQL介绍"><a href="#1、SQL介绍" class="headerlink" title="1、SQL介绍"></a>1、SQL介绍</h2><pre class="line-numbers language-css"><code class="language-css">结构化查询语言<span class="token number">5.7</span> 以后符合SQL<span class="token number">92</span>严格模式通过sql_mode参数来控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、常用SQL分类"><a href="#2、常用SQL分类" class="headerlink" title="2、常用SQL分类"></a>2、常用SQL分类</h2><pre class="line-numbers language-undefined"><code class="language-undefined">DDL：数据定义语言DCL：数据控制语言DML：数据操作语言DQL：数据的查询语言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、数据类型、表属性、字符集"><a href="#3、数据类型、表属性、字符集" class="headerlink" title="3、数据类型、表属性、字符集"></a>3、数据类型、表属性、字符集</h2><h3 id="3-1-数据类型"><a href="#3-1-数据类型" class="headerlink" title="3.1  数据类型"></a>3.1  数据类型</h3><h3 id="3-1-1-作用"><a href="#3-1-1-作用" class="headerlink" title="3.1.1 作用"></a>3.1.1 作用</h3><pre><code>影响到了SQL语句的执行行为。为了让数据库在存、取能够满足生活的常识、科学的逻辑，让这些数据有意义。例子：     现实生活中常识：        日期： 1000-9999 年 1-12 月 1-31日     科学逻辑：                 除法：除数不能为0</code></pre><h3 id="查看sql-mode"><a href="#查看sql-mode" class="headerlink" title="查看sql_mode"></a>查看sql_mode</h3><pre class="line-numbers language-powershell"><code class="language-powershell">mysql> <span class="token function">select</span> @@sql_mode<span class="token punctuation">;</span>ONLY_FULL_GROUP_BY          :  针对<span class="token function">group</span> by 语句执行时的规范STRICT_TRANS_TABLES         :  针对事务表启动严格模式NO_ZERO_IN_DATE             ： 2010<span class="token operator">-</span>00<span class="token operator">-</span>10NO_ZERO_DATE                ： 0000<span class="token operator">-</span>00<span class="token operator">-</span>00ERROR_FOR_DIVISION_BY_ZERO  ： 除数不能为0NO_AUTO_CREATE_USER         ： 是否自动创建用户NO_ENGINE_SUBSTITUTION      :  建表是使用了一个不支持的存储引擎报错。    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SQL-标准"><a href="#SQL-标准" class="headerlink" title="SQL 标准"></a>SQL 标准</h3><pre><code>SQL-89  \ SQL-92  \  SQL-99   \SQL03 .....</code></pre><pre class="line-numbers language-undefined"><code class="language-undefined">保证数据的准确性和标准性。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-数据库对象属性介绍"><a href="#4-数据库对象属性介绍" class="headerlink" title="4-数据库对象属性介绍"></a>4-数据库对象属性介绍</h2><pre><code>库    库名    库属性：字符集、校对规则表     表名     列 ：        列名        列属性：数据类型、约束、其他属性    行    表属性：引擎、字符集、校对规则、其他。</code></pre><h2 id="5-字符集"><a href="#5-字符集" class="headerlink" title="5-字符集"></a>5-字符集</h2><pre><code>MySQL 中的 “密码本”2.2.2 种类utf8    not  UTF-8  utf8mb4 is   UTF-8（万国码）特点 : 1. utf8   , 最大支持3字节的字符。不支持emoji字符2. utf8mb4, 最大支持4字节的字符。支持emoji字符。8.0之前，默认字符集latin1,8.0之后是utf8mb4。我们建议使用utf8mb4.2.2.3 设置方法默认字符集参数建库建表2.3 校对规则（排序规则）  2.3.1 作用 影响到数据的排序方式。    ASCII码a    97b    98c    99d    100A    65B    66C    67D    682.3.2 查看mysql&gt; show collation;2.4 列属性  </code></pre><h2 id="6-数据类型"><a href="#6-数据类型" class="headerlink" title="6-数据类型"></a>6-数据类型</h2><pre><code>#  作用 尽可能保证数据是有意义的。#  种类 ## 数字类型整数：    tinyint   1字节  =  8位 = 00000000 - 11111111  = 2^8个  = 0  - 255     , -127-128        int       4字节  =  32位                       = 2^32个 = 0  - 2^32-1  ,-2^31-2^31-1 ,10位数    bigint    8字节                                           0  - 2^64-1  ,-2^63-2^63-1 ,20位数浮点数：    decimal(m,n)## 字符串类型char(N)    :     N字符个数，最大不超过255    定长的字符串类型。    例如： char(10) ,最多存10个字符,只要10个字符以内，都10个字符长度的存储空间。剩余用空格填充。varchar(M) ：    M字符个数，最大不超过65535    变长的字符串类型。会额外占用1-2字节存储字符长度。255字符之内，额外1字节，255以上，额外2字节    例如： varchar(10),最多存10个字符,按需分配存储空间。    abc 3             =4    asdasdadasd 1000  =1002enum(&#39;bj&#39;,&#39;sh&#39;,&#39;tj&#39;,&#39;heibei&#39;,&#39;henan&#39;,.....)district enum(&#39;bj&#39;,&#39;sh&#39;,&#39;tj&#39;,&#39;heibei&#39;,&#39;henan&#39;,.....)## 时间类型 datetime    8字节 timestamp   4字节 DATETIME 范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。TIMESTAMP 1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。timestamp会受到时区的影响## 二进制类型## json 数据类型</code></pre><h1 id="4-数据库降级"><a href="#4-数据库降级" class="headerlink" title="4-数据库降级"></a>4-数据库降级</h1><h2 id="1-官方解释"><a href="#1-官方解释" class="headerlink" title="1-官方解释"></a>1-官方解释</h2><pre><code>降级：官方解释： https://dev.mysql.com/doc/refman/5.7/en/downgrade-paths.htmlDowngrade from MySQL 5.7 to 5.6 is supported using the logical downgrade method.https://dev.mysql.com/doc/refman/5.7/en/downgrade-binary-package.html#downgrade-procedure-inplaceIn-place downgrade is supported for downgrades between GA releases within the same release series.</code></pre><p>5.7.28 —》 5.7.10       inplace downgrade  ok</p><p>原环境：<br>    5.7.28 二进制版本 + /data/3306/data  </p><h2 id="2-安装-5-7-10-（低）-二进制版本"><a href="#2-安装-5-7-10-（低）-二进制版本" class="headerlink" title="2. 安装 5.7.10 （低） 二进制版本"></a>2. 安装 5.7.10 （低） 二进制版本</h2><pre><code>/data/app/mysql5710</code></pre><p>针对5728版本（高）进行处理工作</p><pre class="line-numbers language-shell"><code class="language-shell">https://dev.mysql.com/doc/refman/5.7/en/downgrading-to-previous-series.htmlset sql_mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' ;set global sql_mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' ;select @@sql_mode;                              ALTER TABLE mysql.proc MODIFY definer char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.event MODIFY definer char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.tables_priv MODIFY Grantor char(77) COLLATE utf8_bin NOT NULL DEFAULT '';ALTER TABLE mysql.procs_priv MODIFY Grantor char(77) COLLATE utf8_bin NOT NULL DEFAULT '';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-优雅的关闭5-7-28（高）。"><a href="#3-优雅的关闭5-7-28（高）。" class="headerlink" title="3. 优雅的关闭5.7.28（高）。"></a>3. 优雅的关闭5.7.28（高）。</h2><pre class="line-numbers language-scss"><code class="language-scss">set global innodb_fast_shutdown=<span class="token number">0</span> <span class="token punctuation">;</span>mysql --execute=<span class="token string">"SET GLOBAL innodb_fast_shutdown=0"</span>mysqladmin  shutdown[root@db<span class="token number">01</span> /data] # mysqladmin  -S /tmp/mysql<span class="token number">3308.</span>sock  shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-删除ib-logfile"><a href="#4-删除ib-logfile" class="headerlink" title="4. 删除ib_logfile*"></a>4. 删除ib_logfile*</h2><pre><code>防止冲突[root@db01 mysql5710]# rm -rf /data/3306/data/ib_logfile*</code></pre><h2 id="5-替换配置文件、环境变量-（替换成低版本）"><a href="#5-替换配置文件、环境变量-（替换成低版本）" class="headerlink" title="5. 替换配置文件、环境变量 （替换成低版本）"></a>5. 替换配置文件、环境变量 （替换成低版本）</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 mysql5710]# vim /etc/my.cnf[mysqld]user=mysqlbasedir=/data/app/mysql5710#basedir=/data/app/mysql56datadir=/data/3306/datasocket=/tmp/mysql.sock[mysql]socket=/tmp/mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[root@db01 mysql5710]# vim /etc/profileexport PATH=/data/app/mysql5710/bin:$PATH</code></pre><pre><code>[root@db01 mysql5710]# source /etc/profiledb01_5.7 [(none)]&gt;select version();+-----------+| version() |+-----------+| 5.7.10    |+-----------+1 row in set (0.00 sec)db01_5.7 [(none)]&gt;[root@db01 mysql5710]# mysql -Vmysql  Ver 14.14 Distrib 5.7.10, for linux-glibc2.5 (x86_64) using  EditLine wrapper</code></pre><h2 id="6-启动数据库-1"><a href="#6-启动数据库-1" class="headerlink" title="6. 启动数据库"></a>6. 启动数据库</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> mysql<span class="token number">5710</span>]# /etc/init<span class="token number">.</span>d/mysqld start Starting MySQL<span class="token number">..</span> SUCCESS!    全路径启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-执行upgrade"><a href="#7-执行upgrade" class="headerlink" title="7. 执行upgrade"></a>7. 执行upgrade</h2><pre><code>[root@db01 /data] # /data/app/mysql5710/bin/mysql_upgrade   --force [root@db01 mysql5710]# mysql_upgrade --force </code></pre><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> /data] # /data/app/mysql<span class="token number">5710</span>/bin/mysql_upgrade   -S /tmp/mysql<span class="token number">3308.</span>sock   --force Checking server version<span class="token number">.</span>Running queries to upgrade MySQL server<span class="token number">.</span>Checking system database<span class="token number">.</span>mysql<span class="token number">.</span>columns_priv                                 OKmysql<span class="token number">.</span>db                                           OKmysql<span class="token number">.</span>engine_cost                                  OKmysql<span class="token number">.</span>event                                        OKmysql<span class="token number">.</span>func                                         OKmysql<span class="token number">.</span>general_log                                  OKmysql<span class="token number">.</span>gtid_executed                                OKmysql<span class="token number">.</span>help_category                                OKmysql<span class="token number">.</span>help_keyword                                 OKmysql<span class="token number">.</span>help_relation                                OKmysql<span class="token number">.</span>help_topic                                   OKmysql<span class="token number">.</span>innodb_index_stats                           OKmysql<span class="token number">.</span>innodb_table_stats                           OKmysql<span class="token number">.</span>ndb_binlog_index                             OKmysql<span class="token number">.</span>plugin                                       OKmysql<span class="token number">.</span>proc                                         OKmysql<span class="token number">.</span>procs_priv                                   OKmysql<span class="token number">.</span>proxies_priv                                 OKmysql<span class="token number">.</span>server_cost                                  OKmysql<span class="token number">.</span>servers                                      OKmysql<span class="token number">.</span>slave_master_info                            OKmysql<span class="token number">.</span>slave_relay_log_info                         OKmysql<span class="token number">.</span>slave_worker_info                            OKmysql<span class="token number">.</span>slow_log                                     OKmysql<span class="token number">.</span>tables_priv                                  OKmysql<span class="token number">.</span>time_zone                                    OKmysql<span class="token number">.</span>time_zone_leap_second                        OKmysql<span class="token number">.</span>time_zone_name                               OKmysql<span class="token number">.</span>time_zone_transition                         OKmysql<span class="token number">.</span>time_zone_transition_type                    OKmysql<span class="token number">.</span>user                                         OKThe sys schema is already up to date <span class="token punctuation">(</span>version <span class="token number">1.5.2</span><span class="token punctuation">)</span><span class="token number">.</span>Checking databases<span class="token number">.</span>sys<span class="token number">.</span>sys_config                                     OKUpgrade process completed successfully<span class="token number">.</span>Checking if update is needed<span class="token number">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-数据库5-7-5-6降级"><a href="#5-数据库5-7-5-6降级" class="headerlink" title="5-数据库5.7-5.6降级"></a>5-数据库5.7-5.6降级</h1><h2 id="0-恢复5-7-28-环境"><a href="#0-恢复5-7-28-环境" class="headerlink" title="0. 恢复5.7.28 环境"></a>0. 恢复5.7.28 环境</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token number">0.</span> 恢复<span class="token number">5.7.28</span> 环境 [root@db<span class="token number">01</span> data]# pkill mysqld[root@db<span class="token number">01</span> data]# rm -rf /data/<span class="token number">3306</span>/data/*# 恢复配置文件[root@db<span class="token number">01</span> data]# vim /etc/my<span class="token number">.</span>cnf[mysqld]user=mysqlbasedir=/data/app/mysql#basedir=/data/app/mysql<span class="token number">56</span>datadir=/data/<span class="token number">3306</span>/datasocket=/tmp/mysql<span class="token number">.</span>sock[mysql]socket=/tmp/mysql<span class="token number">.</span>sock# 恢复环境变量 export PATH=/data/app/mysql/<span class="token property">bin</span><span class="token punctuation">:</span>$PATH[root@db<span class="token number">01</span> data]# source /etc/profile[root@db<span class="token number">01</span> data]# mysql -Vmysql  Ver <span class="token number">14.14</span> Distrib <span class="token number">5.7.28</span>, for linux-glibc<span class="token number">2.12</span> <span class="token punctuation">(</span>x<span class="token number">86</span>_<span class="token number">64</span><span class="token punctuation">)</span> using  EditLine wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-初始化数据"><a href="#1-初始化数据" class="headerlink" title="1-初始化数据"></a>1-初始化数据</h2><p>从新安装的软件</p><pre><code>mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql --datadir=/data/3306/data</code></pre><h2 id="2-启动数据库"><a href="#2-启动数据库" class="headerlink" title="2-启动数据库"></a>2-启动数据库</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# /etc/init<span class="token number">.</span>d/mysqld startStarting MySQL<span class="token number">.</span>Logging to <span class="token string">'/data/3306/data/db01.err'</span><span class="token number">.</span> SUCCESS!  mysql> select <span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>+-----------+| <span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span> |+-----------+| <span class="token number">5.7.28</span>    |+-----------+<span class="token number">1</span> row in set <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-安装5-6-46二进制版本软件"><a href="#3-安装5-6-46二进制版本软件" class="headerlink" title="3-安装5.6.46二进制版本软件"></a>3-安装5.6.46二进制版本软件</h2><pre><code>/data/app/mysql56</code></pre><h2 id="4-处理5-7-28高版本数据"><a href="#4-处理5-7-28高版本数据" class="headerlink" title="4-处理5.7.28高版本数据"></a>4-处理5.7.28高版本数据</h2><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">set</span> sql_mode<span class="token operator">=</span><span class="token string">'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span> <span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> sql_mode<span class="token operator">=</span><span class="token string">'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span> <span class="token punctuation">;</span><span class="token keyword">select</span> @@sql_mode<span class="token punctuation">;</span>   ALTER TABLE mysql<span class="token punctuation">.</span>proc MODIFY definer <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span><span class="token keyword">event</span> MODIFY definer <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>tables_priv MODIFY Grantor <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>procs_priv MODIFY Grantor <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span> COLLATE utf8_bin NOT NULL DEFAULT <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>tables_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>columns_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>db MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> NOT NULL <span class="token keyword">default</span> <span class="token string">''</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>procs_priv MODIFY User <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> binary DEFAULT <span class="token string">''</span> NOT NULL<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user ADD Password <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">)</span> character <span class="token keyword">set</span> latin1collate latin1_bin NOT NULL <span class="token keyword">default</span> <span class="token string">''</span> AFTER user<span class="token punctuation">;</span>UPDATE mysql<span class="token punctuation">.</span>user SET password <span class="token operator">=</span> authentication_string WHERE<span class="token function">LENGTH</span><span class="token punctuation">(</span>authentication_string<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">41</span> AND plugin <span class="token operator">=</span> <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>UPDATE mysql<span class="token punctuation">.</span>user SET authentication_string <span class="token operator">=</span> <span class="token string">''</span> WHERE<span class="token function">LENGTH</span><span class="token punctuation">(</span>authentication_string<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">41</span> AND plugin <span class="token operator">=</span> <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_category ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_keyword ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_relation ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>help_topic ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_leap_second ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_name ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_transition  ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>time_zone_transition_type ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>plugin ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>servers ENGINE<span class="token operator">=</span><span class="token string">'MyISAM'</span> STATS_PERSISTENT<span class="token operator">=</span>DEFAULT<span class="token punctuation">;</span>ALTER TABLE mysql<span class="token punctuation">.</span>user MODIFY plugin <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> COLLATE utf8_binDEFAULT <span class="token string">'mysql_native_password'</span><span class="token punctuation">;</span>DROP DATABASE sys<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-逻辑备份5-7-28数据"><a href="#5-逻辑备份5-7-28数据" class="headerlink" title="5. 逻辑备份5.7.28数据"></a>5. 逻辑备份5.7.28数据</h2><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> /data] # mysqldump -S /tmp/mysql<span class="token number">3308.</span>sock   -A >/tmp/full<span class="token number">.</span>sql[root@db<span class="token number">01</span> ~]# mysqldump -A >/tmp/full<span class="token number">.</span>sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-初始化一套5-6-46的空环境"><a href="#6-初始化一套5-6-46的空环境" class="headerlink" title="6. 初始化一套5.6.46的空环境"></a>6. 初始化一套5.6.46的空环境</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@db01 ~]# vim /etc/profileexport PATH=/data/app/mysql56/bin:$PATH[root@db01 ~]# source /etc/profile[root@db01 ~]# mysql -Vmysql  Ver 14.14 Distrib 5.6.46, for linux-glibc2.12 (x86_64) using  EditLine wrapper[root@db01 ~]# mv /etc/my.cnf /etc/my.cnf.bakmv: overwrite ‘/etc/my.cnf.bak’? y[root@db01 data]# rm -rf /data/3316/data/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-1-初始化-5-6"><a href="#6-1-初始化-5-6" class="headerlink" title="6.1-初始化 5.6"></a>6.1-初始化 5.6</h3><pre><code>[root@db01 data]# /data/app/mysql56/scripts/mysql_install_db  --user=mysql --basedir=/data/app/mysql56 --datadir=/data/3316/data[root@db01 data]# systemctl start mysqld3316</code></pre><h2 id="7-恢复备份数据到5-6-46中"><a href="#7-恢复备份数据到5-6-46中" class="headerlink" title="7. 恢复备份数据到5.6.46中"></a>7. 恢复备份数据到5.6.46中</h2><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> data]# mysql -S /tmp/mysql<span class="token number">3316.</span>sock mysql> source /tmp/full<span class="token number">.</span>sql把 /etc/my<span class="token number">.</span>cnf 的移动走<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-8-0的新功能"><a href="#6-8-0的新功能" class="headerlink" title="6-8.0的新功能"></a>6-8.0的新功能</h1><p>mysql-shell工具，8.0以后，可以调用这个命令，升级之前的预检查。</p><pre><code>[root@db01 ~]# mysqlsh root:123@10.0.0.51:3306 -e &quot;util.checkForServerUpgrade()&quot;</code></pre><h2 id="例如：-5-7-28-升级至-8-0-18-版本"><a href="#例如：-5-7-28-升级至-8-0-18-版本" class="headerlink" title="例如：  5.7.28 升级至 8.0.18 版本"></a>例如：  5.7.28 升级至 8.0.18 版本</h2><h3 id="1-下载-8-0-18-版本的-mysql-shell，并安装"><a href="#1-下载-8-0-18-版本的-mysql-shell，并安装" class="headerlink" title="1. 下载 8.0.18 版本的 mysql-shell，并安装"></a>1. 下载 8.0.18 版本的 mysql-shell，并安装</h3><pre><code>[root@db01 app]# yum install -y mysql-shell-8.0.18-1.el7.x86_64.rpm</code></pre><h3 id="2-恢复5728环境"><a href="#2-恢复5728环境" class="headerlink" title="2. 恢复5728环境"></a>2. 恢复5728环境</h3><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> data]# pkill mysqld[root@db<span class="token number">01</span> data]# rm -rf /data/<span class="token number">3306</span>/data/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-恢复配置文件"><a href="#3-恢复配置文件" class="headerlink" title="3.恢复配置文件"></a>3.恢复配置文件</h3><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# vim /etc/my<span class="token number">.</span>cnf[mysqld]user=mysqlbasedir=/data/app/mysql#basedir=/data/app/mysql<span class="token number">56</span>datadir=/data/<span class="token number">3306</span>/datasocket=/tmp/mysql<span class="token number">.</span>sock[mysql]socket=/tmp/mysql<span class="token number">.</span>sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-恢复环境变量"><a href="#4-恢复环境变量" class="headerlink" title="4.恢复环境变量"></a>4.恢复环境变量</h3><pre class="line-numbers language-scss"><code class="language-scss">export PATH=/data/app/mysql/<span class="token property">bin</span><span class="token punctuation">:</span><span class="token variable">$PATH</span>[root@db<span class="token number">01</span> data]# source /etc/profile[root@db<span class="token number">01</span> data]# mysql -Vmysql  Ver <span class="token number">14.14</span> Distrib <span class="token number">5.7.28</span>, for linux-glibc<span class="token number">2.12</span> <span class="token punctuation">(</span>x<span class="token number">86</span>_<span class="token number">64</span><span class="token punctuation">)</span> using  EditLine wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-初始化数据"><a href="#5-初始化数据" class="headerlink" title="5.初始化数据"></a>5.初始化数据</h3><pre class="line-numbers language-scss"><code class="language-scss">mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql --datadir=/data/<span class="token number">3306</span>/data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-启动数据库-2"><a href="#6-启动数据库-2" class="headerlink" title="6.启动数据库"></a>6.启动数据库</h3><pre class="line-numbers language-scss"><code class="language-scss">[root@db<span class="token number">01</span> data]# /etc/init<span class="token number">.</span>d/mysqld startStarting MySQL<span class="token number">.</span>Logging to <span class="token string">'/data/3306/data/db01.err'</span><span class="token number">.</span> SUCCESS! mysql> grant all on *<span class="token number">.</span>* to root@<span class="token string">'10.0.1.%'</span> identified by <span class="token string">'123'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-预-检查"><a href="#7-预-检查" class="headerlink" title="7. 预 检查"></a>7. 预 检查</h3><p>检查</p><pre class="line-numbers language-shell"><code class="language-shell">mysqlsh root:123@10.0.0.51:3306 -e "util.checkForServerUpgrade()"[root@db01 ~] # mysqlsh root:123@10.0.1.51:3308 -e "util.checkForServerUpgrade()"-----------[root@db01 ~] # mysqlsh root:123@10.0.1.51:3308 -e "util.checkForServerUpgrade()"WARNING: Using a password on the command line interface can be insecure.The MySQL server at 10.0.1.51:3308, version 5.7.28 - MySQL Community Server(GPL), will now be checked for compatibility issues for upgrade to MySQL8.0.18...1) Usage of old temporal type  No issues found2) Usage of db objects with names conflicting with new reserved keywords  No issues found3) Usage of utf8mb3 charset  No issues found<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx多策略流量分发</title>
      <link href="/2020/02/24/nginx-duo-ce-lue-liu-liang-fen-fa/"/>
      <url>/2020/02/24/nginx-duo-ce-lue-liu-liang-fen-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx多策略流量分发"><a href="#Nginx多策略流量分发" class="headerlink" title="Nginx多策略流量分发"></a>Nginx多策略流量分发</h2><h2 id="1、场景描述"><a href="#1、场景描述" class="headerlink" title="1、场景描述"></a>1、场景描述</h2><p>在实际生产环境中，流量分发有很多情况，下面主要讲讲以下两种流量分发场景：</p><ol><li>新版本上线，为了保证新版本稳定性，需要用线上的流量的引入，对新版本进行真实流量测试。如果新版本上线有问题，为降低影响范围，我们对流量的引入应该为从小到大的策略。</li><li>现如今是移动端的时代，而移动端和pc端的设备的不同，需要对移动端和pc的流量进行不同的处理，同时可以针对两种设备的不同需求可以单独升级，可控性强，且架构灵活。</li></ol><h3 id="2、nginx策略配置"><a href="#2、nginx策略配置" class="headerlink" title="2、nginx策略配置"></a>2、nginx策略配置</h3><p>针对以上两种场景，nginx做为强大的web服务器，通过简单的配置来就可以满足我们的需求，下面我们就开始实战：</p><pre><code>nginx version: nginx/1.16.1os version: centos 7</code></pre><p>完成以上需求，主要依赖于nginx的两个模块：</p><ol><li>ngx_http_split_clients_module 文档参考地址: <a href="http://nginx.org/en/docs/http/ngx_http_split_clients_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_split_clients_module.html</a></li><li>ngx_http_map_module 文档参考地址：<a href="http://nginx.org/en/docs/http/ngx_http_map_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_map_module.html</a></li></ol><h3 id="3、流量按比例分配-ngx-http-split-clients-module"><a href="#3、流量按比例分配-ngx-http-split-clients-module" class="headerlink" title="3、流量按比例分配[ngx_http_split_clients_module]"></a>3、流量按比例分配[ngx_http_split_clients_module]</h3><p>按比例分配流量，通过ngx_http_split_clients_module模块实现，该模块可通过客户端的某些属性对客户端通过hash算法按比例分配，这些属性包括客户端ip等，通过hash函数，将不同客户端ip进行比例分配，从而可以将部分流量引入新版本服务中，下面看一下具体配置：</p><pre><code>user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    access_log  /var/log/nginx/access.log  main;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    # 根据内置变量变量${remote_addr}进行1:1分发，并将v1和v2的值赋予$version变量    split_clients &quot;${remote_addr}AAA&quot; $version {                   50%               v1;                   *                 v2;    }    # v1版本服务    server {          listen 8081;          location  / {              return 200 &quot;v1\n&quot;;          }    }    # v2版本服务    server {          listen 8082;          location  / {              return 200 &quot;v2\n&quot;;          }    }    server {        listen 80;        location / {            proxy_pass http://127.0.0.1/$version;        }        # v2版本转发        location  /v2 {            proxy_pass http://127.0.0.1:8082/;        }        # v1版本转发        location  /v1 {            proxy_pass http://127.0.0.1:8081/;        }    }}</code></pre><p>在配置中，我们利用<code>split_clients</code>指令对<code>$remote_addr</code>变量进行hash运算，并按1:1比例随机地将<code>$version</code>的值赋予v1和v2，*表示剩余的比例，即1-50%，这样就可以通过<code>$version</code>的值进行流量分配，具体可看nginx配置，已有注释。可以看到在版本转发时，在<code>proxy_pass</code>转发路径最后加了/，是为了把版本路径(v1|v2)去掉，然后再进行转发，可以保持原有的请求uri路径不变，此处算是一个小技巧。</p><p>实际效果：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/QFzRdz9libEYSsND4W9avicYCDsy6pICZibcWKzJlrBfLOeB6I5E5EGyicIC4luoiauicVU2gPhfPnx1EyibzB6Z7dBaw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1" alt="img"></p><h3 id="4、移动端和pc端流量分配-ngx-http-map-module"><a href="#4、移动端和pc端流量分配-ngx-http-map-module" class="headerlink" title="4、移动端和pc端流量分配[ngx_http_map_module]"></a>4、移动端和pc端流量分配[ngx_http_map_module]</h3><p>ngx_http_map_module模块可通过客户端属性按一定规则匹配映射为新的变量，我们可以对客户端的ua进行正则匹配来区分流量，从而进行流量分发，下面是nginx配置文件示例：</p><pre><code>user nobody;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;events {    worker_connections 1024;}http {    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    access_log  /var/log/nginx/access.log  main;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    map &quot;${http_user_agent}&quot; $uatype {           default           nomobile;           &quot;~*mobile&quot;        mobile;    }    # pc端服务    server {          listen 8082;          location  / {              return 200 &quot;nomobile\n&quot;;          }    }    # 移动端服务    server {          listen 8081;          location  / {              return 200 &quot;mobile\n&quot;;          }    }    server {        listen 80;        location / {            proxy_pass http://127.0.0.1/$uatype;        }        # pc端版本转发        location  /nomobile {            proxy_pass http://127.0.0.1:8082/;        }        # 移动端版本转发        location  /mobile {            proxy_pass http://127.0.0.1:8081/;        }    }}</code></pre><p>在nginx配置中，我们可以看到使用map指令，对客户端的ua进行正则匹配，一旦匹配成功，$uatype将被分配为mobile，并根据此变量的值进行转发，剩下未匹配的由default 指定，此时$uatype为nomobile，从而转发到pc端服务，同时在转发到后端时，同样在proxy_pass后加/，也是为了去掉nomobile和mobile前缀。在使用map的正则匹配时，代表区分大小写的匹配，*则为不区分大小写。</p><p>实际效果：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/QFzRdz9libEYSsND4W9avicYCDsy6pICZibrrcbDPt6GFaqELTxdchZsteca2nOZds9H7zNM8mfhVdY0nc7SC2nhA/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1" alt="img"></p><h4 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h4><p>以上只是列举典型的流量分发方式，我们可以根据<code>$http_name</code>或者<code>$arg_name</code>来定制化需求，<code>$http_name</code>获取自定义头部，<code>$arg_name</code>获取自定义<code>uri</code>参数，这就给予我们更多的可能，比如我们可以再用户登录后，添加自定义头部，使用自定义头部，map指令进行流量拆分，更多的用途需要我们自行发挥想象进行探索。</p><p>来源:</p><p><a href="https://mp.weixin.qq.com/s/09R9l0cIcn4uogPNJbYwvw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/09R9l0cIcn4uogPNJbYwvw</a></p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写Shell脚本的最佳实践</title>
      <link href="/2020/02/24/bian-xie-shell-jiao-ben-de-zui-jia-shi-jian/"/>
      <url>/2020/02/24/bian-xie-shell-jiao-ben-de-zui-jia-shi-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="1-编写Shell脚本的最佳实践"><a href="#1-编写Shell脚本的最佳实践" class="headerlink" title="1. 编写Shell脚本的最佳实践"></a>1. 编写Shell脚本的最佳实践</h1><p><strong>开头有“蛇棒”</strong></p><p><img src="shell.png" alt></p><p>所谓shebang其实就是在很多脚本的第一行出现的以”#!”开头的注释，他指明了当我们没有指定解释器的时候默认的解释器，一般可能是下面这样：</p><ul><li><pre><code>#!/bin/bash</code></pre></li></ul><p>当然，解释器有很多种，除了bash之外，我们可以用下面的命令查看本机支持的解释器:</p><ul><li><pre><code>$ cat /etc/shells/bin/sh/bin/dash/bin/bash/bin/rbash/usr/bin/screen</code></pre></li></ul><p>当我们直接使用<code>./a.sh</code>来执行这个脚本的时候，如果没有shebang，那么它就会默认用<code>$SHELL</code>指定的解释器，否则就会用shebang指定的解释器。<br>不过，上面这种写法可能不太具备适应性，一般我们会用下面的方式来指定：</p><ul><li><pre><code>#!/usr/bin/env bash</code></pre></li></ul><p>这种方式是我们推荐的使用方式。</p><h2 id="代码有注释"><a href="#代码有注释" class="headerlink" title="代码有注释"></a><strong>代码有注释</strong></h2><p>注释，显然是一个常识，不过这里还是要再强调一下，这个在shell脚本里尤为重要。因为很多单行的shell命令不是那么浅显易懂，没有注释的话在维护起来会让人尤其的头大。<br>注释的意义不仅在于解释用途，而在于告诉我们注意事项，就像是一个README。<br>具体的来说，对于shell脚本，注释一般包括下面几个部分：</p><pre><code>shebang脚本的参数脚本的用途脚本的注意事项脚本的写作时间，作者，版权等各个函数前的说明注释一些较复杂的单行命令注释</code></pre><h2 id="参数要规范"><a href="#参数要规范" class="headerlink" title="参数要规范"></a><strong>参数要规范</strong></h2><p>这一点很重要，当我们的脚本需要接受参数的时候，我们一定要先判断参数是否合乎规范，并给出合适的回显，方便使用者了解参数的使用。</p><p>最少，最少，我们至少得判断下参数的个数吧：</p><pre><code>if [[ $# != 2 ]];then    echo &quot;Parameter incorrect.&quot;    exit 1fi</code></pre><h2 id="变量和魔数"><a href="#变量和魔数" class="headerlink" title="变量和魔数"></a><strong>变量和魔数</strong></h2><p>一般情况下我们会将一些重要的环境变量定义在开头，确保这些变量的存在。</p><pre><code>source /etc/profileexport PATH=”/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/apps/bin/”这种定义方式有一个很常见的用途，最典型的应用就是，当我们本地安装了很多java版本时，我们可能需要指定一个java来用。那么这时我们就会在脚本开头重新定义JAVA_HOME以及PATH变量来进行控制。</code></pre><p>同时，一段好的代码通常是不会有很多硬编码在代码里的“魔数”的。如果一定要有，通常是用一个变量的形式定义在开头，然后调用的时候直接调用这个变量，这样方便日后的修改。</p><h2 id="缩进有规矩"><a href="#缩进有规矩" class="headerlink" title="缩进有规矩"></a><strong>缩进有规矩</strong></h2><p>对于shell脚本，缩进是个大问题。因为很多需要缩进的地方(比如if,for语句)都不长，所有很多人都懒得去缩进，而且很多人不习惯用函数，导致缩进功能被弱化。</p><p>其实正确的缩进是很重要的，尤其是在写函数的时候，否则我们在阅读的时候很容易把函数体跟直接执行的命令搞混。<br>常见的缩进方法主要有”soft tab”和”hard tab”两种。</p><ul><li><p>所谓soft tab就是使用n个空格进行缩进(n通常是2或4)</p></li><li><p>所谓hard tab当然就是指真实的”\t”字符</p><p>这里不去撕哪种方式最好，只能说各有各的优劣。</p><p>反正我习惯用hard tab。</p></li></ul><p>  对于if和for语句之类的，我们最好不要把then，do这些关键字单独写一行，这样看上去比较丑。</p><h2 id="命名有标准"><a href="#命名有标准" class="headerlink" title="命名有标准"></a><strong>命名有标准</strong></h2><p>所谓命名规范，基本包含下面这几点：</p><ol><li>文件名规范，以.sh结尾，方便识别</li><li>变量名字要有含义，不要拼错</li><li>统一命名风格，写shell一般用小写字母加下划线</li></ol><h2 id="编码要统一"><a href="#编码要统一" class="headerlink" title="编码要统一"></a><strong>编码要统一</strong></h2><p>在写脚本的时候尽量使用UTF-8编码，能够支持中文等一些奇奇怪怪的字符。不过虽然能写中文，但是在写注释以及打log的时候还是尽量英文，毕竟很多机器还是没有直接支持中文的，打出来可能会有乱码。</p><p>这里还尤其需要注意一点，就是当我们是在windows下用utf-8编码来写shell脚本的时候，一定要注意这个utf-8是否是有BOM的。默认情况下windows判断utf-8格式是通过在文件开头加上三个EF BB BF字节来判断的，但是在Linux中默认是无BOM的。因此如果我们是在windows下写脚本的时候，一定要注意将编码改成Utf-8无BOM，一般用notepad++之类的编辑器都能改。否则，在Linux下运行的时候就会识别到开头的三个字符，从而报一些无法识别命令的错。<br>当然，对于跨平台写脚本还有一个比较常见的问题就是换行符不同。windows默认是\r\n而unix下是\n。不过有两个小工具可以非常方便的解决这个问题:dos2unix,unix2dos。</p><h2 id="权限记得加"><a href="#权限记得加" class="headerlink" title="权限记得加"></a><strong>权限记得加</strong></h2><p>这一点虽然很小，但是我个人却经常忘记，不加执行权限会导致无法直接执行，有点讨厌。。。</p><h2 id="日志和回显"><a href="#日志和回显" class="headerlink" title="日志和回显"></a><strong>日志和回显</strong></h2><p>日志的重要性不必多说，能够方便我们回头纠错，在大型的项目里是非常重要的。<br>如果这个脚本是供用户直接在命令行使用的，那么我们最好还要能够在执行时实时回显执行过程，方便用户掌控。<br>有时候为了提高用户体验，我们会在回显中添加一些特效，比如颜色啊，闪烁啊之类的，具体可以参考ANSI/VT100 Control sequences这篇文章的介绍。</p><h2 id="密码要移除"><a href="#密码要移除" class="headerlink" title="密码要移除"></a><strong>密码要移除</strong></h2><p>不要把密码硬编码在脚本里，不要把密码硬编码在脚本里，不要把密码硬编码在脚本里。<br>重要的事情说三遍，尤其是当脚本托管在类似Github这类平台中时。。。</p><h2 id="太长要分行"><a href="#太长要分行" class="headerlink" title="太长要分行"></a><strong>太长要分行</strong></h2><p>在调用某些程序的时候，参数可能会很长，这时候为了保证较好的阅读体验，我们可以用反斜杠来分行：</p><pre><code>./configure \–prefix=/usr \–sbin-path=/usr/sbin/nginx \–conf-path=/etc/nginx/nginx.conf \</code></pre><blockquote><p>注意在反斜杠前有个空格。</p></blockquote><h2 id="代码有效率"><a href="#代码有效率" class="headerlink" title="代码有效率"></a><strong>代码有效率</strong></h2><p>在使用命令的时候要了解命令的具体做法，尤其当数据处理量大的时候，要时刻考虑该命令是否会影响效率。<br>比如下面的两个sed命令：</p><pre><code>sed -n &#39;1p&#39; filesed -n &#39;1p;1q&#39; file</code></pre><p>他们的作用一样，都是获取文件的第一行。但是第一条命令会读取整个文件，而第二条命令只读取第一行。当文件很大的时候，仅仅是这样一条命令不一样就会造成巨大的效率差异。<br>当然，这里只是为了举一个例子，这个例子真正正确的用法应该是使用<code>head -n1 file</code>命令。。。</p><h2 id="勤用双引号"><a href="#勤用双引号" class="headerlink" title="勤用双引号"></a><strong>勤用双引号</strong></h2><p>几乎所有的大佬都推荐在使用”$”来获取变量的时候最好加上双引号。</p><p>不加上双引号在很多情况下都会造成很大的麻烦，为什么呢？举一个例子：</p><pre><code>#!/bin/shvar=&quot;*.sh&quot;echo $varecho &quot;$var&quot;他的运行结果如下：</code></pre><pre><code>a.sh*.sh为啥会这样呢？其实可以解释为他执行了下面的命令：</code></pre><pre><code>echo *.shecho &quot;*.sh&quot;</code></pre><p>在很多情况下，在将变量作为参数的时候，一定要注意上面这一点，仔细体会其中的差异。上面只是一个非常小的例子，实际应用的时候由于这个细节导致的问题实在是太多了。。。</p><h2 id="巧用main函数"><a href="#巧用main函数" class="headerlink" title="巧用main函数"></a><strong>巧用main函数</strong></h2><p>我们知道，像java，C这样的编译型语言都会有一个函数入口，这种结构使得代码可读性很强，我们知道哪些直接执行，那些是函数。但是脚本不一样，脚本属于解释性语言，从第一行直接执行到最后一行，如果在这当中命令与函数糅杂在一起，那就非常难读了。<br>用python的朋友都知道，一个合乎标准的python脚本大体上至少是这样的：</p><pre><code>def func1():    passdef func2():    passif __name__==&#39;__main__&#39;:    func1()    func2()</code></pre><p>他用一个很巧妙的方法实现了我们习惯的main函数，使得代码可读性更强。<br>在shell中，我们也有类似的小技巧:</p><pre><code>#!/usr/bin/env bashfunc1(){    }func2(){    }main(){    func1    func2}main &quot;$@&quot;我们可以采用这种写法，同样实现类似的main函数，使得脚本的结构化程度更好。</code></pre><h2 id="考虑作用域"><a href="#考虑作用域" class="headerlink" title="考虑作用域"></a><strong>考虑作用域</strong></h2><p>shell中默认的变量作用域都是全局的，比如下面的脚本：</p><pre><code>#!/usr/bin/env bashvar=1func(){    var=2}funcecho $var他的输出结果就是2而不是1，这样显然不符合我们的编码习惯，很容易造成一些问题。</code></pre><p>因此，相比直接使用全局变量，我们最好使用<code>local readonly</code>这类的命令，其次我们可以使用<code>declare</code>来声明变量。这些方式都比使用全局方式定义要好。</p><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a><strong>函数返回值</strong></h2><p>在使用函数的时候一定要注意，shell中函数的返回值只能是整数，估计是因为一般情况下一个函数的返回值通常表示这个函数的运行状态，所以一般都是0或者是１就够了，因此就设计成了这样。不过，如果非得想传递字符串，也可以通过下面变通的方法:</p><pre><code>func(){    echo &quot;2333&quot;}res=$(func)echo &quot;This is from $res.&quot;这样，通过echo或者print之类的就可以做到传一些额外参数的目的。</code></pre><h2 id="间接引用值"><a href="#间接引用值" class="headerlink" title="间接引用值"></a><strong>间接引用值</strong></h2><p>什么叫间接引用？比如下面这个场景：</p><pre><code>VAR1=&quot;2323232&quot;VAR2=&quot;VAR1&quot;我们有一个变量VAR1，又有一个变量VAR2，这个VAR2的值是VAR1的名字，那么我们现在想通过VAR2来获取VAR1的值，这时候应该怎么办呢？</code></pre><p>比较土鳖的方法是这样：</p><pre><code>eval echo \$$VAR2啥意思呢？其实就是构造了一个字符串&quot;echo $XXX&quot;，这个XXX就是$VAR2的值VAR1，然后再用eval强制解析，这样就做到了变相取值。</code></pre><p>这个用法的确可行，但是看起来十分的不舒服，很难直观的去理解，我们并不推荐。而且事实上我们本身就不推荐使用eval这个命令。<br>比较舒服的写法是下面这样:</p><pre><code>echo ${!VAR1}通过在变量名前加一个!就可以做到简单的间接引用了。</code></pre><p>不过需要注意的是，用上面的方法，我们只能够做到取值，而不能做到赋值。如果想要做到赋值，还要老老实实的用eval来处理:</p><pre><code>VAR1=VAR2eval $VAR1=233echo $VAR2</code></pre><h2 id="巧用heredocs"><a href="#巧用heredocs" class="headerlink" title="巧用heredocs"></a><strong>巧用heredocs</strong></h2><p>所谓heredocs，也可以算是一种多行输入的方法，即在”&lt;&lt;”后定一个标识符，接着我们可以输入多行内容，直到再次遇到标识符为止。</p><p>使用heredocs，我们可以非常方便的生成一些模板文件：</p><pre><code>cat&gt;&gt;/etc/rsyncd.conf &lt;&lt; EOFlog file = /usr/local/logs/rsyncd.logtransfer logging = yeslog format = %t %a %m %f %bsyslog facility = local3EOF</code></pre><h2 id="学会查路径"><a href="#学会查路径" class="headerlink" title="学会查路径"></a><strong>学会查路径</strong></h2><p>很多情况下，我们会先获取当前脚本的路径，然后一这个路径为基准，去找其他的路径。通常我们是直接用<code>pwd</code>以期获得脚本的路径。<br>不过其实这样是不严谨的，<code>pwd</code>获得的是当前shell的执行路径，而不是当前脚本的执行路径。<br>正确的做法应该是下面这两种：</p><pre><code>script_dir=$(cd $(dirname $0) &amp;&amp; pwd)script_dir=$(dirname $(readlink -f $0 ))应当先cd进当前脚本的目录然后再pwd，或者直接读取当前脚本的所在路径。</code></pre><h2 id><a href="#" class="headerlink" title=" "></a> </h2><h2 id="代码要简短"><a href="#代码要简短" class="headerlink" title="代码要简短"></a><strong>代码要简短</strong></h2><p>这里的简短不单单是指代码长度，而是只用到的命令数。原则上我们应当做到，能一条命令解决的问题绝不用两条命令解决。这不仅牵涉到代码的可读性，而且也关乎代码的执行效率。</p><p>最最经典的例子如下：</p><pre><code>cat /etc/passwd | grep rootgrep root /etc/passwdcat命令最为人不齿的用法就是这样，用的没有任何意义，明明一条命令可以解决，他非得加根管道。。。</code></pre><p>其实代码简短在还能某种程度上能保证效率的提升，比如下面的例子：</p><pre><code>find . -name &#39;*.txt&#39; |xargs sed -i s/233/666/gfind . -name &#39;*.txt&#39; |xargs sed -i s/235/626/gfind . -name &#39;*.txt&#39; |xargs sed -i s/333/616/gfind . -name &#39;*.txt&#39; |xargs sed -i s/233/664/gfind . -name &#39;*.txt&#39; |xargs sed -i &quot;s/233/666/g;s/235/626/g;s/333/616/g;s/233/664/g&quot;这两种方法做的事情都一样，就是查找所有的.txt后缀的文件并做一系列替换。前者是多次执行find，后者是执行一次find，但是增加了sed的模式串。第一种更直观一点，但是当替换的量变大的时候，第二种的速度就会比第一种快很多。这里效率提升的原因，就是第二种只要执行一次命令，而第一种要执行多次。</code></pre><p>并且，巧用xargs命令，我们还可以十分方便的进行并行化处理:</p><pre><code>find . -name &#39;*.txt&#39; |xargs -P $(nproc) sed -i &quot;s/233/666/g;s/235/626/g;s/333/616/g;s/233/664/g&quot;</code></pre><p>通过-P参数指定并行度，可以进一步加快执行效率。</p><h2 id="命令并行化"><a href="#命令并行化" class="headerlink" title="命令并行化"></a><strong>命令并行化</strong></h2><p>当我们需要充分考虑执行效率时，我们可能需要在执行命令的时候考虑并行化。shell中最简单的并行化是通过”&amp;”以及”wait”命令来做:</p><pre><code>func(){    ｝for((i=0;i&lt;10;i++))do    func &amp;donewait当然，这里并行的次数不能太多，否则机器会卡死。稍微正确的做法比较复杂，以后再讨论，如果图省事可以使用parallel命令来做，或者是用上面提到的xargs来处理。</code></pre><h2 id="全文本检索"><a href="#全文本检索" class="headerlink" title="全文本检索"></a><strong>全文本检索</strong></h2><p>我们知道，当我们想在文件夹下所有的txt文件中检索某一个字符串(比如233)的时候，我们可能会用类似这样的命令：</p><ul><li><pre><code>find . -name &#39;*.txt&#39; -type f | xargs grep 2333很多情况下，这个命令会想我们所想的找到对应的匹配行，但是我们需要注意两个小问题。</code></pre></li></ul><p>find命令会符合要求的匹配文件名，但是如果文件名包含<strong>空格</strong>，这时候将文件名传给grep的时候就会有问题，这个文件就会被当成两个参数，这时候就要加一层处理，保证用空格分开的文件名不会被当成两个参数：</p><ul><li><pre><code>find . -type f|xargs -i echo &#39;&quot;{}&quot;&#39;|xargs grep 2333有时候，文件的字符集可能跟终端的字符集不一致，这时候就会导致grep在搜索时将文件当成二进制文件从而报binary file matches之类的问题。这时候要么用iconv之类的字符集转换工具将字符集进行切换，要么就在不影响查找的情况下对grep加-a参数，将所有文件看成文本文件:</code></pre></li></ul><pre><code>- </code></pre><p>find . -type f|xargs grep -a 2333<br>```</p><h2 id="使用新写法"><a href="#使用新写法" class="headerlink" title="使用新写法"></a><strong>使用新写法</strong></h2><p>这里的新写法不是指有多厉害，而是指我们可能更希望使用较新引入的一些语法，更多是偏向代码风格的，比如</p><ol><li>尽量使用<code>func(){}</code>来定义函数，而不是<code>func{}</code></li><li>尽量使用<code>[[]]</code>来代替<code>[]</code></li><li>尽量使用<code>$()</code>将命令的结果赋给变量，而不是反引号</li><li>在复杂的场景下尽量使用printf代替echo进行回显</li></ol><p>事实上，这些新写法很多功能都比旧的写法要强大，用的时候就知道了。</p><p><strong>其他小tip</strong></p><p>考虑到还有很多零碎的点，就不一一展开了，这里简单提一提。</p><ul><li><p>路径尽量保持绝对路径，绝多路径不容易出错，如果非要用相对路径，最好用./修饰</p></li><li><p>优先使用bash的变量替换代替awk sed，这样更加简短</p></li><li><p>简单的if尽量使用&amp;&amp; ||，写成单行。</p><p>比如<code>[[ x &gt; 2]] &amp;&amp; echo x</code></p></li><li><p>当export变量时，尽量加上子脚本的namespace，保证变量不冲突</p></li><li><p>会使用trap捕获信号，并在接受到终止信号时执行一些收尾工作</p></li><li><p>使用mktemp生成临时文件或文件夹</p></li><li><p>利用/dev/null过滤不友好的输出信息</p></li><li><p>会利用命令的返回值判断命令的执行情况</p></li><li><p>使用文件前要判断文件是否存在，否则做好异常处理</p></li><li><p>不要处理ls后的数据(比如<code>ls -l | awk &#39;{ print $8 }&#39;</code>)，ls的结果非常不确定，并且平台有关</p></li><li><p>读取文件时不要使用for loop而要使用while read</p></li><li><p>使用<code>cp -r</code>命令复制文件夹的时候要注意如果目的文件夹不存在则会创建，如果存在则会复制到该文件的子文件夹下</p></li></ul><blockquote><p>来源： </p><p><a href="https://blog.mythsman.com/post/5d2ab67ff678ba2eb3bd346f/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="noopener">https://blog.mythsman.com/post/5d2ab67ff678ba2eb3bd346f/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三章mysql连接管理</title>
      <link href="/2020/02/23/01-ce-shi/"/>
      <url>/2020/02/23/01-ce-shi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux禁止ping以及开启ping的方法</title>
      <link href="/2020/02/23/linux-jin-zhi-ping-yi-ji-kai-qi-ping-de-fang-fa/"/>
      <url>/2020/02/23/linux-jin-zhi-ping-yi-ji-kai-qi-ping-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>Linux默认是允许Ping响应的，系统是否允许Ping由2个因素决定的 ：</p><p>作者：Happiness</p><p>来源：<a href="https://urlify.cn/Mr6zMb" target="_blank" rel="noopener">https://urlify.cn/Mr6zMb</a></p><pre><code>\1. 内核参数\2. 防火墙</code></pre><p>需要2个因素同时允许才能允许Ping，2个因素有任意一个禁Ping就无法Ping。</p><p><strong>内核参数设置</strong></p><p>禁止ping设置：</p><p>1）临时禁止ping命令如下所示：</p><pre><code># 如果想要临时允许的话只需要把下面的1换成0即可echo 1 &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all</code></pre><p>2）永久禁止ping命令如下所示(如果想要永久允许的话只需要把下面的1换成0即可)</p><pre><code>在 /etc/sysctl.conf 文件中增加一行net.ipv4.icmp_echo_ignore_all=1</code></pre><p>修改完成后执行 sysctl -p 使新的配置生效。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/1TDxR6xkRSGyTviaShq1Dymib1mhVQuDgGITq3Sr1tChmqa27fFdKibP30KbheVibicGTznFk2PQzHzI6iaJhKlN38OQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"></p><p><strong>防火墙设置</strong></p><p>(注意：此处的方法的前提是内核配置是默认值，也就是没有禁止ping)</p><p>这里以iptables防火墙为例：</p><p>1）允许ping设置</p><pre><code>iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT  iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT</code></pre><p>或者可以临时停止防火墙操作：</p><ul><li><pre><code>service iptables stop</code></pre></li></ul><p>2）禁止ping设置</p><ul><li><pre><code>iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中小企业如何做运维自动化</title>
      <link href="/2020/02/23/zhong-xiao-qi-ye-ru-he-zuo-yun-wei-zi-dong-hua/"/>
      <url>/2020/02/23/zhong-xiao-qi-ye-ru-he-zuo-yun-wei-zi-dong-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="中小企业如何做运维自动化"><a href="#中小企业如何做运维自动化" class="headerlink" title="中小企业如何做运维自动化"></a>中小企业如何做运维自动化</h2><p>以下文章来源于Spug运维 ，作者Spug运维</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTkwODIyNA==&mid=2247495002&idx=1&sn=a1d2294df17e336130e16ac02c551bfd&chksm=9bbb48b5acccc1a3abc95c560fe5f6ee7702c0e0ac3c0e7fca8bef208b5db704b421bd7e684f&scene=126&sessionid=1587731486&key=3afabdf7cfda3d9e0bf2620827790131c5a8864a02f0dfaa707a1b841048b8633de99e609a570b07f035c12b34c1180ec3efdf398bad1fd1437a257a33401b6c1d66ab537be2a1da8a3276afc6b9af83&ascene=1&uin=Mjk0MTk1MjA1OA%3D%3D&devicetype=Windows+10+x64&version=62090069&lang=zh_CN&exportkey=ArKwIKtLZaVLOE1sFS2Z%2FV0%3D&pass_ticket=OwHSpW5hA25T1dXIv%2B3kelVvbcjcUIX1A0F3%2F%2F5oNFe4rt6fipRmOg51lJoU2UqE&winzoom=1#" target="_blank" rel="noopener"><img src="http://wx.qlogo.cn/mmhead/Q3auHgzwzM5vicZkuR10ibuTysOr7hMD1yM7bORz5z2ibTWWnaS8XYTJQ/0" alt="Spug运维"><strong>Spug运维</strong><a href="http://spug.dev" target="_blank" rel="noopener">http://spug.dev</a></a></p><p><strong>我们先看一下中小企业面临的问题：</strong></p><p>1、人员有限，小一点的公司专业运维可能没有，开发自己上线，也有可能1-2个运维人员，基本不会投入专门的运维开发来开发运维自动化平台。</p><p>2、服务器少，可能不超过50台服务器。</p><p>3、版本更新迭代比较快，需要快速方便的发布回滚。</p><p><strong>中小企业运维自动化常见做法：</strong></p><p>1、Gitlab+Jenkins，创建Jenkins任务，使用Jenkins登录服务器执行脚本实现发布，配合服务器多个脚本实现对服务器管理。</p><p>2、Gitlab+Jenkins+Ansible，使用Jenkins调用Ansible登录服务器执行脚本实现代码的发布，平时服务器管理使用Anaible进行服务器管理。</p><p>3、K8S平台，使用K8s发布平台，打包应用Docker镜像，通过K8s发布到线上。</p><p>4、使用开源的运维自动化平台发布管理，Github上有很多优秀的开源项目，可以使用。</p><p>虽然可以通过上面的几种方法把发布和经常操作的都实现自动化，但是避免不了登录服务器操作命令、配置任务计划，修改应用配置文件，配置服务器监控等。那么有没有开源平台可以很方便的实现上面说到的这些功能呢？</p><p>下面就给给大家推荐一款面向中小企业的开源运维自动化平台：<strong>Spug</strong></p><p><strong>平台介绍：</strong></p><p><strong>Spug</strong>，中文名称：麻雀。寓意：麻雀虽小，五脏俱全，它是面向中小型企业设计的无 Agent的自动化运维平台，整合了主机管理、主机批量执行、主机在线终端、应用发布、任务计划、配置中心、监控、报警等一系列功能。</p><p><strong>开源地址：</strong></p><blockquote><p>仓库：<a href="https://github.com/openspug/spug" target="_blank" rel="noopener">https://github.com/openspug/spug</a></p><p>官网：spug.dev</p><p>公众号：openspug</p></blockquote><p><strong>技术栈：</strong></p><blockquote><p>后端：Python + Django</p><p>前端：React + Ant Design</p></blockquote><p><strong>功能特性：</strong></p><ul><li>批量执行: 命令可以在线批量执行</li><li>在线终端: 主机支持浏览器在线终端登录</li><li>任务计划: 灵活的任务计划，支持间隔执行，一次性执行，Crontab风格执行</li><li>发布部署: 支持自动创建应用，支持工单，自定义发布流程</li><li>配置中心: 支持KV、文本、Json等格式的配置</li><li>监控中心: 支持站点、端口、进程、自定义等监控</li><li>报警中心: 支持短信、邮件、钉钉、微信等报警方式</li><li>优雅美观: 基于 Ant Design 的UI界面</li></ul><p><strong>模块介绍：</strong></p><p>*<em>1、批量执行<br>*</em></p><p>批量执行可以同时选择多台主机执行命令，也可以将经常执行的命令保存到模版，选择执行模板里面的命令执行，执行结果实时在界面上返回。</p><p>*<em>2、在线终端<br>*</em></p><p>在线终端，可以很方便的通过浏览器在线终端登录到主机上操作命令。</p><p>3、应用发布</p><p>应用发布，支持应用自动创建、部署、发布，创建应用只需要输入要部署的应用Git地址，和部署的目标服务器目标目录，定义好发布前发布中执行的命令就可以配置好应用的自动化发布部署。</p><p>应用发布支持提交工单，工单审核，工单审批通过后自动发布。</p><p>4、任务计划</p><p>任务计划，支持间隔执行，一次性执行，Crontab格式执行。</p><p>5、配置中心</p><blockquote><p>配置中心，应用配置支持在线化配置，支持多环境配置，配置格式支持KV，Txt，Json格式的配置</p></blockquote><p>6、监控中心</p><p>监控中心执行站点监控，进程监控，端口监控，以及自定义脚本监控，并支持微信，钉钉，邮件报警。</p><p>7、报警中心</p><p>报警支持报警联系人，报警组管理。可以把报警发给指定的分组。</p>]]></content>
      
      
      <categories>
          
          <category> Spug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> Spug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql多实例部署</title>
      <link href="/2020/02/23/di-san-zhang-mysql-lian-jie-guan-li/"/>
      <url>/2020/02/23/di-san-zhang-mysql-lian-jie-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-需求说明"><a href="#第一章-需求说明" class="headerlink" title="第一章  需求说明"></a>第一章  需求说明</h1><p>作者:夏正平</p><ol><li>部署<code>MySQL</code>5.7的三个多实例环境(端口分别为3307,3308,3309)</li><li>部署<code>MySQL</code>5.6和8.0版本数据库实例((端口分别为3316和3326)</li></ol><h1 id="第二章-环境准备"><a href="#第二章-环境准备" class="headerlink" title="第二章 环境准备"></a>第二章 环境准备</h1><h2 id="1-虚拟机环境"><a href="#1-虚拟机环境" class="headerlink" title="1.虚拟机环境"></a>1.虚拟机环境</h2><pre><code>$ hostname -I   10.0.1.51$ hostname  db01$ cat /etc/redhat-release   CentOS Linux release 7.7.1908 (Core)</code></pre><h2 id="2-虚拟机优化"><a href="#2-虚拟机优化" class="headerlink" title="2.虚拟机优化"></a>2.虚拟机优化</h2><pre><code># 关闭Selinux$ setenforce 0$ sed -i s#SELINUX=enforcing#SELINUX=disabled#g /etc/selinux/config# 关闭防火墙$ systemctl stop firewalld$ systemctl disable firewalld$ iptables-save# 更改yum源$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.ori$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo$ sed  -i &#39;/aliyuncs/d&#39; /etc/yum.repos.d/CentOS-Base.repo # 添加epel源$ wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo# 更新yum缓存$  yum clean all$ yum makecache fast# 停止NetworkManager$ systemctl stop NetworkManager$ systemctl disable NetworkManager# 加大文件描述符$ echo &#39;* - nofile 65535&#39; &gt;&gt;/etc/security/limits.conf </code></pre><h2 id="3-清理环境"><a href="#3-清理环境" class="headerlink" title="3.清理环境"></a>3.清理环境</h2><h3 id="①卸载已安装的mysql"><a href="#①卸载已安装的mysql" class="headerlink" title="①卸载已安装的mysql"></a>①卸载已安装的mysql</h3><pre><code>$ rpm -qa | grep mysql# 结果如下mysql-community-common-8.0.18-1.el7.x86_64mysql-community-client-8.0.18-1.el7.x86_64mysql-community-libs-8.0.18-1.el7.x86_64# 使用以下命令依次删除上面的程序$ yum remove mysql-xxx-xxx-</code></pre><h3 id="②删除mysql的配置文件"><a href="#②删除mysql的配置文件" class="headerlink" title="②删除mysql的配置文件"></a>②删除mysql的配置文件</h3><pre><code>$ find / -name mysql|xargs rm -fr</code></pre><h3 id="③删除MariaDB的文件"><a href="#③删除MariaDB的文件" class="headerlink" title="③删除MariaDB的文件"></a>③删除MariaDB的文件</h3><pre><code>$ rpm -qa | grep mariadb$ rpm -e mariadb-xxx --nodeps</code></pre><h3 id="④删除my-cnf"><a href="#④删除my-cnf" class="headerlink" title="④删除my.cnf"></a>④删除my.cnf</h3><pre><code>$ rm -fr /etc/my.cnf</code></pre><h3 id="⑤检查端口是否被占用"><a href="#⑤检查端口是否被占用" class="headerlink" title="⑤检查端口是否被占用"></a>⑤检查端口是否被占用</h3><pre><code>$ which mysql$ pkill mysqld$ netstat -lntup|egrep &#39;3307|3308|3309|3316|3326&#39;</code></pre><h2 id="4-准备软件包"><a href="#4-准备软件包" class="headerlink" title="4.准备软件包"></a>4.准备软件包</h2><p><a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener">MySQL官方下载地址</a><br>下载二进制包略。</p><h2 id="5-准备目录"><a href="#5-准备目录" class="headerlink" title="5.准备目录"></a>5.准备目录</h2><pre><code>$ rm -rf /data/*# MySQL安装目录$ mkdir -p /data/app# MySQL数据目录$ mkdir -p /data/330{7,8,9}/data$ mkdir -p /data/33{16,26}/data# Scoket目录$ mkdir -p /data/socket</code></pre><h1 id="第三章-部署MySQL5-7多实例"><a href="#第三章-部署MySQL5-7多实例" class="headerlink" title="第三章 部署MySQL5.7多实例"></a>第三章 部署MySQL5.7多实例</h1><h2 id="1-解压软件包并制作软连接"><a href="#1-解压软件包并制作软连接" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz$ mv mysql-5.7.28-linux-glibc2.12-x86_64 mysql-5.7.28$ ln -s /data/app/mysql-5.7.28 /data/app/mysql5728</code></pre><h2 id="2-创建MySQL多实例配置"><a href="#2-创建MySQL多实例配置" class="headerlink" title="2.创建MySQL多实例配置"></a>2.创建<code>MySQL</code>多实例配置</h2><pre><code># 3307实例配置$ cat &gt; /data/3307/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3307/data     socket=/data/socket/mysql3307.sock      port=3307                   server_id=7                  EOF# 3308实例配置$ cat &gt; /data/3308/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3308/data     socket=/data/socket/mysql3308.sock      port=3308                   server_id=8                  EOF# 3309实例配置$ cat &gt; /data/3309/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5728    datadir=/data/3309/data     socket=/data/socket/mysql3309.sock      port=3309                   server_id=9                  EOF</code></pre><h2 id="3-创建MySQL傀儡用户并授权"><a href="#3-创建MySQL傀儡用户并授权" class="headerlink" title="3.创建MySQL傀儡用户并授权"></a>3.创建<code>MySQL</code>傀儡用户并授权</h2><pre><code>$ useradd -s /sbin/nologin -M mysql$ id mysql$ chown -R mysql.mysql /data</code></pre><h2 id="4-初始化"><a href="#4-初始化" class="headerlink" title="4.初始化"></a>4.初始化</h2><pre><code>$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3307/data$ echo $?$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3308/data$ echo $?$ /data/app/mysql5728/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql5728 --datadir=/data/3309/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本"><a href="#5-编写systemd启动脚本" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code># 3307实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3307.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3307/my.cnfLimitNOFILE = 5000EOF# 3308实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3308.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3308/my.cnfLimitNOFILE = 5000EOF# 3309实例启动的服务脚本$ cat &gt; /etc/systemd/system/mysqld3309.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5728/bin/mysqld --defaults-file=/data/3309/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动多实例"><a href="#6-启动多实例" class="headerlink" title="6.启动多实例"></a>6.启动多实例</h2><pre><code>$ systemctl start mysqld3307$ systemctl start mysqld3308$ systemctl start mysqld3309$ netstat -lntup|grep mysqld  tcp6   0   0  :::3307    :::*     LISTEN   2093/mysqld           tcp6   0   0  :::3308    :::*     LISTEN   2127/mysqld           tcp6   0   0  :::3309    :::*     LISTEN   2161/mysqld </code></pre><h2 id="7-绝对路径登录MySQL多实例"><a href="#7-绝对路径登录MySQL多实例" class="headerlink" title="7.绝对路径登录MySQL多实例"></a>7.绝对路径登录<code>MySQL</code>多实例</h2><pre><code>$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3307.sock$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3308.sock$ /data/app/mysql5728/bin/mysql -S /data/socket/mysql3309.sock</code></pre><h1 id="第四章-部署MySQL5-6单实例"><a href="#第四章-部署MySQL5-6单实例" class="headerlink" title="第四章 部署MySQL5.6单实例"></a>第四章 部署MySQL5.6单实例</h1><h2 id="1-解压软件包并制作软连接-1"><a href="#1-解压软件包并制作软连接-1" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz$ mv mysql-5.6.46-linux-glibc2.12-x86_64 mysql-5.6.46$ ln -s ln -s mysql-5.6.46 mysql5646</code></pre><h2 id="2-创建MySQL实例配置"><a href="#2-创建MySQL实例配置" class="headerlink" title="2.创建MySQL实例配置"></a>2.创建<code>MySQL</code>实例配置</h2><pre><code>cat &gt; /data/3316/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql5646    datadir=/data/3316/data     socket=/data/socket/mysql3316.sock       port=3316                   server_id=16                  EOF</code></pre><h2 id="3-创建mysql傀儡用户并授权"><a href="#3-创建mysql傀儡用户并授权" class="headerlink" title="3.创建mysql傀儡用户并授权"></a>3.创建mysql傀儡用户并授权</h2><pre><code>$ chown -R mysql.mysql /data</code></pre><h2 id="4-初始化-1"><a href="#4-初始化-1" class="headerlink" title="4.初始化"></a>4.初始化</h2><pre><code>$ /data/app/mysql5646/scripts/mysql_install_db  --user=mysql --basedir=/data/app/mysql5646 --datadir=/data/3316/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本-1"><a href="#5-编写systemd启动脚本-1" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code>cat &gt; /etc/systemd/system/mysqld3316.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql5646/bin/mysqld --defaults-file=/data/3316/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动实例"><a href="#6-启动实例" class="headerlink" title="6.启动实例"></a>6.启动实例</h2><pre><code>$ systemctl daemon-reload$ systemctl start mysqld3316.service$ netstat -lntup|grep mysqld  tcp6  0  0 :::3316    :::*    LISTEN      2516/mysqld</code></pre><h2 id="7-绝对路径登录MySQL实例"><a href="#7-绝对路径登录MySQL实例" class="headerlink" title="7.绝对路径登录MySQL实例"></a>7.绝对路径登录<code>MySQL</code>实例</h2><pre><code>$ /data/app/mysql5646/bin/mysql -S /data/socket/mysql3316.sock</code></pre><h1 id="第五章-部署MySQL8-0单实例"><a href="#第五章-部署MySQL8-0单实例" class="headerlink" title="第五章 部署MySQL8.0单实例"></a>第五章 部署MySQL8.0单实例</h1><h2 id="1-解压软件包并制作软连接-2"><a href="#1-解压软件包并制作软连接-2" class="headerlink" title="1.解压软件包并制作软连接"></a>1.解压软件包并制作软连接</h2><pre><code>$ tar xf mysql-8.0.18-linux-glibc2.12-x86_64.tar.xz$ mv mysql-8.0.18-linux-glibc2.12-x86_64 mysql-8.0.18$ ln -s mysql-8.0.18 mysql8018</code></pre><h2 id="2-创建MySQL实例配置-1"><a href="#2-创建MySQL实例配置-1" class="headerlink" title="2.创建MySQL实例配置"></a>2.创建<code>MySQL</code>实例配置</h2><pre><code>cat &gt; /data/3326/my.cnf &lt;&lt;EOF [mysqld]                    user=mysql                  basedir=/data/app/mysql8018     datadir=/data/3326/data     socket=/data/socket/mysql3326.sock       port=3326                  server_id=26                  EOF</code></pre><h2 id="3-创建mysql傀儡用户并授权-1"><a href="#3-创建mysql傀儡用户并授权-1" class="headerlink" title="3.创建mysql傀儡用户并授权"></a>3.创建mysql傀儡用户并授权</h2><pre><code>$ chown -R mysql.mysql /data</code></pre><h2 id="4-安装依赖并初始化"><a href="#4-安装依赖并初始化" class="headerlink" title="4.安装依赖并初始化"></a>4.安装依赖并初始化</h2><pre><code>$ yum install -y perl-DBD-MySQL perl-Config-Tiny epel-release perl-Log-Dispatch perl-Parallel-ForkManager perl-Time-HiRes$ /data/app/mysql8018/bin/mysqld --initialize-insecure --user=mysql --basedir=/data/app/mysql8018 --datadir=/data/3326/data$ echo $?</code></pre><h2 id="5-编写systemd启动脚本-2"><a href="#5-编写systemd启动脚本-2" class="headerlink" title="5.编写systemd启动脚本"></a>5.编写systemd启动脚本</h2><pre><code>cat &gt; /etc/systemd/system/mysqld3326.service &lt;&lt;EOF[Unit]Description=MySQL ServerDocumentation=man:mysqld(8)Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.htmlAfter=network.targetAfter=syslog.target[Install]WantedBy=multi-user.target[Service]User=mysqlGroup=mysqlExecStart=/data/app/mysql8018/bin/mysqld --defaults-file=/data/3326/my.cnfLimitNOFILE = 5000EOF</code></pre><h2 id="6-启动实例-1"><a href="#6-启动实例-1" class="headerlink" title="6.启动实例"></a>6.启动实例</h2><pre><code>$ systemctl start mysqld3326.service $ netstat -lntup|grep mysqld  tcp6       0      0 :::3326    :::*    LISTEN      2686/mysqld  </code></pre><h2 id="7-绝对路径登录MySQL实例-1"><a href="#7-绝对路径登录MySQL实例-1" class="headerlink" title="7.绝对路径登录MySQL实例"></a>7.绝对路径登录<code>MySQL</code>实例</h2><pre><code>$ /data/app/mysql8018/bin/mysql -S /data/socket/mysql3326.sock</code></pre><p>至此，在同一台服务器上部署多版本MySQL多实例完成，可是使用一下命令验证：</p><pre><code>[root@db01 ~]# netstat -lntup|grep mysqldtcp6       0      0 :::3326    :::*        LISTEN      2686/mysqld         tcp6       0      0 :::33060   :::*        LISTEN      2686/mysqld         tcp6       0      0 :::3307    :::*        LISTEN      2093/mysqld         tcp6       0      0 :::3308    :::*        LISTEN      2127/mysqld         tcp6       0      0 :::3309    :::*        LISTEN      2161/mysqld         tcp6       0      0 :::3316    :::*        LISTEN      2516/mysqld </code></pre>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小明同学为了战斗而生</title>
      <link href="/2020/02/16/sort-algorithms/"/>
      <url>/2020/02/16/sort-algorithms/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="性质汇总"><a href="#性质汇总" class="headerlink" title="性质汇总"></a>性质汇总</h2><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章   MySQL 大纲介绍</title>
      <link href="/2020/02/16/di-yi-zhang-mysql-da-gang-jie-shao/"/>
      <url>/2020/02/16/di-yi-zhang-mysql-da-gang-jie-shao/</url>
      
        <content type="html"><![CDATA[<h2 id="1、官方定义的MySQL-DBA工作内容"><a href="#1、官方定义的MySQL-DBA工作内容" class="headerlink" title="1、官方定义的MySQL  DBA工作内容"></a>1、官方定义的MySQL  DBA工作内容</h2><pre class="line-numbers language-undefined"><code class="language-undefined">（1）运维DBA初级：各版本、各平台安装搭建、升级中级：体系结构原理、基础管理（启动关闭、初始化配置文件管理、多实例管理、用户权限管理、基本SQL（增删改查））、     日志管理、备份与恢复、主从复制（构建、状态监控） 高级：高可用（MGR、InnoDB Cluster）、高性能（优化）（2）开发DBA懂至少一门开发语言 ：JAVA、Python基本SQL语句深入学习（增删改查）、数据库结构设计（建模）高级SQL：存储过程、函数、触发器、视图、事件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、MySQL课程-2019-03月-中级DBA要求（80-以上）"><a href="#2、MySQL课程-2019-03月-中级DBA要求（80-以上）" class="headerlink" title="2、MySQL课程-2019-03月-中级DBA要求（80%以上）"></a>2、MySQL课程-2019-03月-中级DBA要求（80%以上）</h2><pre class="line-numbers language-css"><code class="language-css">（<span class="token number">1</span>）MySQL <span class="token number">5.7</span> 安装部署（二进制）*****    编译自己扩展（<span class="token number">2</span>）MySQL升级步骤扩展 ***（<span class="token number">3</span>）MySQL<span class="token number">5.7</span> 体系结构原理 *****（<span class="token number">4</span>）MySQL基础管理  *****（<span class="token number">5</span>）基础SQL语句使用 *****（<span class="token number">6</span>）SQL高级应用  ***（<span class="token number">7</span>）Information_schema获取元数据 ***（<span class="token number">8</span>）索引、执行计划管理（基础优化）*****（<span class="token number">9</span>）存储引擎  *****（<span class="token number">10</span>）日志管理 *****（<span class="token number">11</span>）备份与恢复 ******（<span class="token number">12</span>）主从复制及架构演变 ******（<span class="token number">13</span>）传统的高可用及读写分离（MHA&amp;Atlas）****（<span class="token number">14</span>）传统分布式架构设计与实现-扩展（Mycat--->DBLE,DRDS）**（<span class="token number">15</span>）MySQL <span class="token number">5.7</span> 高可用及分布式架构-扩展（MGR,InnoDB Cluster）***（<span class="token number">16</span>）MySQL优化（安全、性能） ****（<span class="token number">17</span>）MySQL 监控（zabbix、Open-falcon）    **** <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token function">RDS</span><span class="token punctuation">(</span>阿里云课程<span class="token punctuation">)</span>    *****额外要会的：    Redis    mongodb     了解<span class="token punctuation">:</span>     PG    Oracle  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、DBA职业素养"><a href="#3、DBA职业素养" class="headerlink" title="3、DBA职业素养"></a>3、DBA职业素养</h2><hr><h3 id="3-1、人品"><a href="#3-1、人品" class="headerlink" title="3.1、人品"></a>3.1、人品</h3><pre class="line-numbers language-undefined"><code class="language-undefined">责任-----权利<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><h4 id="3-2-1、严谨"><a href="#3-2-1、严谨" class="headerlink" title="3.2.1、严谨"></a>3.2.1、严谨</h4><pre class="line-numbers language-rust"><code class="language-rust">磁带库<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">-></span>备份软件<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">17</span>楼数据库修改\删除类的命令时 再三考虑，而且要有理论或者实践的支撑<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-2-2-请收起你的好奇心！！！！！"><a href="#3-2-2-请收起你的好奇心！！！！！" class="headerlink" title="3.2.2 请收起你的好奇心！！！！！"></a>3.2.2 请收起你的好奇心！！！！！</h4><pre class="line-numbers language-undefined"><code class="language-undefined">注意规范:脱库？ 华住网（ip root 密码），“脱敏”!!!!!。学会保护自己!!!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-3、细心"><a href="#3-3、细心" class="headerlink" title="3.3、细心"></a>3.3、细心</h3><pre class="line-numbers language-undefined"><code class="language-undefined">把最简单的事情做的最漂亮，最专业。不要怕成功的门很拥挤,因为很多人在半路就已经放弃了.                                           ----oldguo                     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-4、心态"><a href="#3-4、心态" class="headerlink" title="3.4、心态"></a>3.4、心态</h3><pre class="line-numbers language-undefined"><code class="language-undefined">别惹事，出事别怕事<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-5、熟悉操作系统（精通）"><a href="#3-5、熟悉操作系统（精通）" class="headerlink" title="3.5、熟悉操作系统（精通）"></a>3.5、熟悉操作系统（精通）</h3><h3 id="3-6、熟悉公司业务"><a href="#3-6、熟悉公司业务" class="headerlink" title="3.6、熟悉公司业务"></a>3.6、熟悉公司业务</h3><pre class="line-numbers language-undefined"><code class="language-undefined">业务？    产品的功能    用户的行为(热功能,热数据)      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-7、熟悉行业"><a href="#3-7、熟悉行业" class="headerlink" title="3.7、熟悉行业"></a>3.7、熟悉行业</h3><pre class="line-numbers language-cpp"><code class="language-cpp">熟悉行业发展趋势版本数据库产品类型https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>db<span class="token operator">-</span>engines<span class="token punctuation">.</span>com<span class="token operator">/</span>en<span class="token operator">/</span>ranking<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-8、喜欢数据库"><a href="#3-8、喜欢数据库" class="headerlink" title="3.8、喜欢数据库"></a>3.8、喜欢数据库</h3><pre class="line-numbers language-undefined"><code class="language-undefined">体验很重要<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="第二章-MySQL-介绍和安装"><a href="#第二章-MySQL-介绍和安装" class="headerlink" title="第二章: MySQL 介绍和安装"></a>第二章: MySQL 介绍和安装</h1><h2 id="1、什么是数据？"><a href="#1、什么是数据？" class="headerlink" title="1、什么是数据？"></a>1、什么是数据？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">数据：文字、图片、视频。。。人类认知的数据表现方式计算机：二进制、16进制的机器语言基于数据的重要性和复杂性的不同，我们可能有不同的管理方式。哪些数据是适合存储到数据库的呢？重要性比较高的关系较复杂的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、什么是数据库管理系统（DBMS）？"><a href="#2、什么是数据库管理系统（DBMS）？" class="headerlink" title="2、什么是数据库管理系统（DBMS）？"></a>2、什么是数据库管理系统（DBMS）？</h2><pre class="line-numbers language-powershell"><code class="language-powershell">RDBMS: 关系型数据库管理系统比较适合于<span class="token punctuation">,</span>安全级别要求高的数据以及关系较复杂的数据NoSQL:非关系型数据库管理系统适合于高性能存取数据<span class="token punctuation">,</span>一般是配合RDBMS进行使用的针对大数据处理分析<span class="token punctuation">,</span>分布式架构更加擅长<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、数据库管理系统种类"><a href="#3、数据库管理系统种类" class="headerlink" title="3、数据库管理系统种类"></a>3、数据库管理系统种类</h2><pre class="line-numbers language-powershell"><code class="language-powershell">RDBMS  ：MySQL 、Oracle、MSSQL（SQL Server）、PGNoSQL：Not Only SQL键<span class="token operator">-</span>值（key<span class="token operator">-</span>value）：Redis<span class="token punctuation">,</span> memcached文档（document）：Mongodb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-数据库产品时代演变"><a href="#4-数据库产品时代演变" class="headerlink" title="4-数据库产品时代演变"></a>4-数据库产品时代演变</h2><pre class="line-numbers language-powershell"><code class="language-powershell">第一代数据库架构：    RDBMS 关系型数据库时代 ： 合的时代    代表产品 ：Oracle 、MSSQL 、MySQL第二代数据库架构：拆的时代    NoSQL  ： Not Only SQL 时代    代表产品： Redis 、MongoDB、ES 第三代数据库架构： 合的时代     NewSQL  ：新型数据库架构时代    代表产品：            阿里系列： OB 、PolarDB            Pincap  ： TiDB            google  ： spanner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、MySQL简介及产品线"><a href="#5、MySQL简介及产品线" class="headerlink" title="5、MySQL简介及产品线"></a>5、MySQL简介及产品线</h2><h3 id="5-1-MySQL行业主流版本："><a href="#5-1-MySQL行业主流版本：" class="headerlink" title="5.1 MySQL行业主流版本："></a>5.1 MySQL行业主流版本：</h3><pre class="line-numbers language-css"><code class="language-css">    <span class="token number">5.6</span>      <span class="token number">5.7</span>        <span class="token number">8.0</span><span class="token punctuation">(</span>现在开始研究新特性<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-2-企业版本选择-MySQL分支版本-笔试题"><a href="#5-2-企业版本选择-MySQL分支版本-笔试题" class="headerlink" title="5.2 企业版本选择(MySQL分支版本),笔试题"></a>5.2 企业版本选择(MySQL分支版本),笔试题</h3><pre class="line-numbers language-undefined"><code class="language-undefined">Oracle:      MySQL官方版红帽  :      MariaDBPercona:      PerconaDB 面试题     1. 请你介绍你熟悉的数据库产品？   你们公司用了哪些数据库产品？    RDBMS ： MySQL  、Oracle  、PG、 MSSQL    NoSQL :  Redis  、MongoDB 、ES 、Memcached    云数据库：RDS    2. 你喜欢MySQL数据库吗？ 平常如何学习的？ MySQL需要具备哪些技能？    热爱。    官档 、源码、看书、视频、参加一些数据库大会。    技能： 大纲<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-版本选择建议要上新环境"><a href="#5-3-版本选择建议要上新环境" class="headerlink" title="5.3 版本选择建议要上新环境"></a>5.3 版本选择建议要上新环境</h3><h3 id="5-34MySQL-产品分支"><a href="#5-34MySQL-产品分支" class="headerlink" title="5.34MySQL 产品分支"></a>5.34MySQL 产品分支</h3><pre class="line-numbers language-powershell"><code class="language-powershell">3<span class="token punctuation">.</span> Oracle MySQL  ：C版 、 E版 、Cluster版Percona MySQL ：最接近于Oracle MySQL MariaDB       ：从5<span class="token punctuation">.</span>5<span class="token operator">+</span> 以后，10<span class="token punctuation">.</span>x <span class="token operator">+</span>版本阿里：  RDS <span class="token keyword">for</span> MySQL 腾讯：  TDSQL <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token number">1.</span>一般选择官方主流版本<span class="token punctuation">:</span><span class="token number">5.6</span>,<span class="token number">5.7</span> <span class="token number">2.</span>GA（稳定发布版）<span class="token number">3.6</span>-<span class="token number">12</span>月的产品版本--------------------------<span class="token number">4.</span> MySQL的企业版本选择<span class="token number">5.7</span>  ： 一般选择最新GA版本  <span class="token number">5.7.26</span>   <span class="token number">5.7.28</span> <span class="token number">5.6</span>  ： GA <span class="token number">6</span>-<span class="token number">12</span>月之间的版本 <span class="token number">8.0</span>  ： 一般选择最新GA版本  <span class="token number">8.0.17</span>+<span class="token number">5.6</span> 版本 <span class="token number">2020</span> <span class="token number">10</span>月  常规、扩展服务全部停止<span class="token number">5.7</span> 版本 <span class="token number">2021</span> <span class="token number">1</span>月   常规服务停止<span class="token number">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4-课程版本："><a href="#5-4-课程版本：" class="headerlink" title="5.4 课程版本："></a>5.4 课程版本：</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token number">5.7.20</span>  二进制安装，其他安装方式自己扩展<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-5-如何获取MySQL软件"><a href="#5-5-如何获取MySQL软件" class="headerlink" title="5.5 如何获取MySQL软件"></a>5.5 如何获取MySQL软件</h3><pre class="line-numbers language-css"><code class="language-css">企业版：Enterprise  , 互联网行业一般不选择<span class="token number">.</span>社区版本：选择源码包：source code    <span class="token number">.</span>tar<span class="token number">.</span>gz   通用二进制   面试题<span class="token punctuation">:</span>你们公司用什么版本数据库? 具体什么小版本号?<span class="token number">5.6.20</span> <span class="token number">5.6.34</span> <span class="token number">5.6.36</span>  <span class="token number">5.6.38</span>  <span class="token number">5.6.40</span>    <span class="token number">5.7.18</span>  <span class="token number">5.7.20</span>  <span class="token number">5.7.22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取软件</p><pre><code>https://downloads.mysql.com/archives/[root@db01 app]# md5sum  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz1daa30a32b99a92062f481bd3ef8694c  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz[root@db01 app]# MD5: 1daa30a32b99a92062f481bd3ef8694cdiff a  b  </code></pre><h2 id="5、-MySQL二进-制安装"><a href="#5、-MySQL二进-制安装" class="headerlink" title="5、==MySQL二进==制安装"></a>5、==MySQL二进==制安装</h2><h3 id="5-1-创建软件目录"><a href="#5-1-创建软件目录" class="headerlink" title="5.1.创建软件目录:"></a>5.1.创建软件目录:</h3><pre class="line-numbers language-powershell"><code class="language-powershell">6<span class="token punctuation">.</span>2<span class="token punctuation">.</span>5 清理遗留环境 <span class="token comment" spellcheck="true"># 检查是否有mariadb相关软件</span><span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># rpm -qa|grep mariadb</span><span class="token comment" spellcheck="true"># 如果有，清理掉 </span>yum remove mariadb<span class="token operator">-</span>libs <span class="token operator">-</span>y <span class="token comment" spellcheck="true"># 删掉/etc/my.cnf 已有的配置文件 </span><span class="token function">rm</span> <span class="token operator">-</span>rf <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf 6<span class="token punctuation">.</span>2<span class="token punctuation">.</span>6 安装依赖包 <span class="token namespace">[root@db01 ~]</span><span class="token comment" spellcheck="true"># yum install -y libaio-devel </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 <span class="token operator">~</span><span class="token punctuation">]</span># mkdir <span class="token operator">-</span>p  <span class="token operator">/</span>data<span class="token operator">/</span>app 上传软件到此目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-2-解压并改名为mysql"><a href="#5-2-解压并改名为mysql" class="headerlink" title="5.2. 解压并改名为mysql"></a>5.2. 解压并改名为mysql</h3><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token punctuation">[</span>root<span class="token variable">@db01</span> app<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mv mysql-5.7.20-linux-glibc2.12-x86_64 mysql</span><span class="token punctuation">[</span>root<span class="token variable">@China</span> <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># ln -s /data/app/mysql-5.6.46/  /data/app/mysql</span><span class="token punctuation">[</span>root<span class="token variable">@db01</span> app<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ls -l /app/mysql/</span>total <span class="token number">36</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> bin<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span>  <span class="token number">1</span> <span class="token number">7161</span> <span class="token number">31415</span> <span class="token number">17987</span> <span class="token constant">Sep</span> <span class="token number">13</span>  <span class="token number">2017</span> <span class="token constant">COPYING</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root     <span class="token number">55</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> docsdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">3</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> includedrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">5</span> root root    <span class="token number">229</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> libdrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">4</span> root root     <span class="token number">30</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> man<span class="token operator">-</span>rw<span class="token operator">-</span>r<span class="token operator">--</span>r<span class="token operator">--</span>  <span class="token number">1</span> <span class="token number">7161</span> <span class="token number">31415</span>  <span class="token number">2478</span> <span class="token constant">Sep</span> <span class="token number">13</span>  <span class="token number">2017</span> <span class="token constant">README</span>drwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x <span class="token number">28</span> root root   <span class="token number">4096</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> sharedrwxr<span class="token operator">-</span>xr<span class="token operator">-</span>x  <span class="token number">2</span> root root     <span class="token number">90</span> <span class="token constant">Mar</span>  <span class="token number">4</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">55</span> support<span class="token operator">-</span>files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改环境变量:</p><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/profile<span class="token punctuation">[</span>root@China /data/app/mysql<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># export  PATH=/data/app/mysql/bin:$PATH</span><span class="token punctuation">[</span>root@db01 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source /etc/profile</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-3-建立mysql用户和组-如果已有可忽略"><a href="#5-3-建立mysql用户和组-如果已有可忽略" class="headerlink" title="5.3. 建立mysql用户和组(如果已有可忽略)"></a>5.3. 建立mysql用户和组(如果已有可忽略)</h3><pre class="line-numbers language-undefined"><code class="language-undefined"> useradd mysql <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-4-创建相关目录并修改权限"><a href="#5-4-创建相关目录并修改权限" class="headerlink" title="5.4. 创建相关目录并修改权限"></a>5.4. 创建相关目录并修改权限</h3><pre class="line-numbers language-kotlin"><code class="language-kotlin"><span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># mkdir <span class="token operator">-</span>p <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span><span class="token keyword">data</span>  #数据目录<span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># useradd  mysql <span class="token operator">-</span>M <span class="token operator">-</span>s <span class="token operator">/</span>sbin<span class="token operator">/</span>nologin <span class="token punctuation">[</span><span class="token label symbol">root@</span>db01 ~<span class="token punctuation">]</span># chown <span class="token operator">-</span>R mysql<span class="token punctuation">.</span>mysql <span class="token operator">/</span><span class="token keyword">data</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-5-初始化数据（建库）"><a href="#5-5-初始化数据（建库）" class="headerlink" title="5.5 初始化数据（建库）"></a>5.5 初始化数据（建库）</h3><p>方法一:</p><pre class="line-numbers language-csharp"><code class="language-csharp">初始化数据，初始化管理员的临时密码mysqld <span class="token operator">--</span>initialize  <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql   <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token number">6.2</span><span class="token punctuation">.</span><span class="token number">8</span> 初始化数据<span class="token preprocessor property"># 5.7+ 版本初始化 ：</span>mysqld       <span class="token operator">--</span>initialize<span class="token operator">-</span>insecure      <span class="token operator">--</span>user<span class="token operator">=</span>mysql      <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql        <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data 有可能的报错：     <span class="token number">1</span><span class="token punctuation">.</span> libaio<span class="token operator">-</span>devel     <span class="token number">2</span><span class="token punctuation">.</span>  <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token operator">--</span>initialize specified but the data directory has files <span class="token keyword">in</span> it<span class="token punctuation">.</span> Aborting<span class="token punctuation">.</span>    rm <span class="token operator">-</span>rf <span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-35999407e3216f9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><pre class="line-numbers language-undefined"><code class="language-undefined">报错原因: Linux系统中缺少libaio-devel 软件包解决:yum install -y libaio-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https:////upload-images.jianshu.io/upload_images/16956686-28004810e36f801b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1004/format/webp" alt="img"></p><p>image.png</p><pre class="line-numbers language-kotlin"><code class="language-kotlin">报错原因<span class="token operator">:</span>在<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql 存在文件解决<span class="token operator">:</span>\rm <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>新特性重要说明:</strong><br> <strong>5.7开始,MySQL加入了全新的 密码的安全机制:</strong><br> <strong>1.初始化完成后,会生成临时密码(显示到屏幕上,并且会往日志中记一份)</strong><br> <strong>2.密码复杂度:长度:超过12位? 复杂度:字符混乱组合</strong><br> <strong>3.密码过期时间180天</strong></p><pre class="line-numbers language-shell"><code class="language-shell">方法二 :初始化数据，初始化管理员的密码为空[root@China /data/app] # rm -rf /data/3306/data/*[root@db01 ~]# mysqld --initialize-insecure  --user=mysql --basedir=/app/mysql --datadir=/data/mysql2019-04-18T03:37:44.042348Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.[root@db01 ~]# [root@db01 ~]# cd /data/mysql/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注释：5.6初始化的区别</strong></p><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token punctuation">[</span>root@China <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token punctuation">]</span> # <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>scripts<span class="token operator">/</span>mysql_install_db   <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>data <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-6-书写默认配置文件"><a href="#5-6-书写默认配置文件" class="headerlink" title="5.6 书写默认配置文件"></a>5.6 书写默认配置文件</h3><pre class="line-numbers language-jsx"><code class="language-jsx">vim <span class="token regex">/etc/my</span><span class="token punctuation">.</span>cnf<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysqlserver_id<span class="token operator">=</span><span class="token number">6</span>port<span class="token operator">=</span><span class="token number">3306</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sockprompt<span class="token operator">=</span><span class="token number">3306</span> <span class="token punctuation">[</span>\\d<span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>              <span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>user<span class="token operator">=</span>mysqlbasedir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysqldatadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span><span class="token number">3306</span><span class="token operator">/</span>datasocket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>socket<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-7-配置启动脚本"><a href="#5-7-配置启动脚本" class="headerlink" title="5.7 配置启动脚本:"></a>5.7 配置启动脚本:</h3><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>root@db01 mysql<span class="token punctuation">]</span># cd <span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>support<span class="token operator">-</span>files<span class="token punctuation">[</span>root@db01 support<span class="token operator">-</span>files<span class="token punctuation">]</span># <span class="token punctuation">.</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>server startStarting MySQL<span class="token punctuation">.</span>Logging to <span class="token string">'/data/mysql/db01.err'</span><span class="token punctuation">.</span> SUCCESS<span class="token operator">!</span> cp mysql<span class="token punctuation">.</span>server    <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>    <span class="token number">6.2</span><span class="token punctuation">.</span><span class="token number">10</span> 准备启动脚本，启动数据库<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># cp <span class="token operator">/</span>data<span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>support<span class="token operator">-</span>files<span class="token operator">/</span>mysql<span class="token punctuation">.</span>server  <span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>mysqld <span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># chkconfig <span class="token operator">--</span><span class="token keyword">add</span> mysqld<span class="token punctuation">[</span>root@db01 data<span class="token punctuation">]</span># systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-8-使用systemd管理mysql"><a href="#5-8-使用systemd管理mysql" class="headerlink" title="5.8 使用systemd管理mysql"></a>5.8 使用systemd管理mysql</h3><pre class="line-numbers language-csharp"><code class="language-csharp">vim <span class="token operator">/</span>etc<span class="token operator">/</span>systemd<span class="token operator">/</span>system<span class="token operator">/</span>mysqld<span class="token punctuation">.</span>service <span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>MySQL ServerDocumentation<span class="token operator">=</span>man<span class="token punctuation">:</span><span class="token function">mysqld</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>Documentation<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>com<span class="token operator">/</span>doc<span class="token operator">/</span>refman<span class="token operator">/</span>en<span class="token operator">/</span><span class="token keyword">using</span><span class="token operator">-</span>systemd<span class="token punctuation">.</span>htmlAfter<span class="token operator">=</span>network<span class="token punctuation">.</span>targetAfter<span class="token operator">=</span>syslog<span class="token punctuation">.</span>target<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>User<span class="token operator">=</span>mysqlGroup<span class="token operator">=</span>mysqlExecStart<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql<span class="token operator">/</span>bin<span class="token operator">/</span>mysqld <span class="token operator">--</span>defaults<span class="token operator">-</span>file<span class="token operator">=</span><span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnfLimitNOFILE <span class="token operator">=</span> <span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：将原来模式启动mysqld先关闭，然后再用systemd管理。</p><pre class="line-numbers language-undefined"><code class="language-undefined">systemctl  start/stop/restart/status   mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-安装后的简单管理"><a href="#6-安装后的简单管理" class="headerlink" title="6. 安装后的简单管理"></a>6. 安装后的简单管理</h2><pre class="line-numbers language-css"><code class="language-css">[root@db<span class="token number">01</span> ~]# mysqladmin -uroot -p password <span class="token number">123</span>Enter <span class="token property">password</span><span class="token punctuation">:</span> <span class="token property">mysqladmin</span><span class="token punctuation">:</span> [Warning] Using a password on the command line interface can be insecure<span class="token number">.</span><span class="token property">Warning</span><span class="token punctuation">:</span> Since password will be sent to server in plain text, use ssl connection to ensure password safety<span class="token number">.</span><span class="token number">5.6</span>版本<span class="token punctuation">:</span>select user,password,host from mysql<span class="token number">.</span>user<span class="token punctuation">;</span><span class="token number">5.7</span> 中用户基本信息select user,authentication_string,host from mysql<span class="token number">.</span>user<span class="token punctuation">;</span>desc  mysql<span class="token number">.</span>user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小结:<br> 1.版本 (主流版本的GA时间了解一下)</p><pre class="line-numbers language-css"><code class="language-css"><span class="token number">5.6</span> <span class="token number">5.7</span> <span class="token number">5.6.38</span>   <span class="token number">5.7.20</span> <span class="token number">20170913</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 初始化方式变了mysql_install_db   mysqld  --initialize-insecure<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 用户安全<span class="token number">12</span>位<span class="token number">180</span><span class="token number">4</span>种复杂度<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>密码字段authentication_strings<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.安装方法:</p><pre class="line-numbers language-undefined"><code class="language-undefined">二进制源码yum <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3.建库(初始化数据库)</p><pre class="line-numbers language-jsx"><code class="language-jsx">mysqld <span class="token operator">--</span>intialize<span class="token operator">-</span>insecure <span class="token operator">--</span>user<span class="token operator">=</span>mysql <span class="token operator">--</span>basedir<span class="token operator">=</span><span class="token operator">/</span>app<span class="token operator">/</span>mysql <span class="token operator">--</span>datadir<span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>mysql <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.简易的配制文件/etc/my.cnf</p><pre class="line-numbers language-undefined"><code class="language-undefined">user basedirdatadir server_idportsocket <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>管理员密码</li></ol><pre class="line-numbers language-undefined"><code class="language-undefined">mysqladmin -uroot -p password xx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="第三章节-MySQL体系结构及基础管理"><a href="#第三章节-MySQL体系结构及基础管理" class="headerlink" title="第三章节 MySQL体系结构及基础管理"></a>第三章节 MySQL体系结构及基础管理</h1><pre><code>1. MySQL 的C/S模型工作结构Client：     自带命令    第三方工具    APIServer :     TCP/IP    Unix Socket2. MySQL 的实例结构实例： mysqld进程 + Master thread + worker thread(IO\SQL\Purge...)+ 预分配内存结构公司： BOSS + 经理 + 员工 + 办公区域   3. mysqld 核心程序工作原理3.1  server 层      ----&gt; Linux  OS3.1.1 连接器 3.1.2 SQL层3.2  engine 层      ----&gt; 文件系统</code></pre><h1 id="终结篇"><a href="#终结篇" class="headerlink" title="终结篇"></a>终结篇</h1><pre><code>第一章节 MySQL 的介绍及规划实施1. 数据库产品时代演变第一代数据库架构：    RDBMS 关系型数据库时代 ： 合的时代    代表产品 ：Oracle 、MSSQL 、MySQL第二代数据库架构：拆的时代    NoSQL  ： Not Only SQL 时代    代表产品： Redis 、MongoDB、ES 第三代数据库架构： 合的时代     NewSQL  ：新型数据库架构时代    代表产品：            阿里系列： OB 、PolarDB            Pincap  ： TiDB            google  ： spanner2. 熟悉数据库行业 定期参加数据库大会db-engines.com http://www.itdks.com/休息20分钟：10:50继续彩蛋： 面试题     1. 请你介绍你熟悉的数据库产品？   你们公司用了哪些数据库产品？    RDBMS ： MySQL  、Oracle  、PG、 MSSQL    NoSQL :  Redis  、MongoDB 、ES 、Memcached    云数据库：RDS    2. 你喜欢MySQL数据库吗？ 平常如何学习的？ MySQL需要具备哪些技能？    热爱。    官档 、源码、看书、视频、参加一些数据库大会。    技能： 大纲3. MySQL 产品分支Oracle MySQL  ：C版 、 E版 、Cluster版Percona MySQL ：最接近于Oracle MySQL MariaDB       ：从5.5+ 以后，10.x +版本阿里：  RDS for MySQL 腾讯：  TDSQL ....4. MySQL的企业版本选择5.7  ： 一般选择最新GA版本  5.7.26   5.7.28 5.6  ： GA 6-12月之间的版本 8.0  ： 一般选择最新GA版本  8.0.17+5.6 版本 2020 10月  常规、扩展服务全部停止5.7 版本 2021 1月   常规服务停止.5. 获取软件https://downloads.mysql.com/archives/[root@db01 app]# md5sum  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz1daa30a32b99a92062f481bd3ef8694c  mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz[root@db01 app]# MD5: 1daa30a32b99a92062f481bd3ef8694cdiff a  b  6. 手撕 MySQL 5728 二进制版本规划和实施6.1 准备Linux服务器 克隆：Centos 7.6  1核  2G  100G 虚拟机环境IP： 10.0.0.51/24 hostname : db01 防火墙： 关闭 selinux ： 关闭 6.2 上传软件到指定目录6.2.1 创建指定目录mkdir -p  /data/app 6.2.2 上传软件mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz6.2.3 解压制作软连接[root@db01 app]# tar xf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz [root@db01 app]# ln -s mysql-5.7.28-linux-glibc2.12-x86_64 mysql6.2.4 修改环境变量echo &quot;export PATH=$PATH:/opt/src/mysql/bin&quot; &gt;&gt;/etc/profile# 生效配置 source /etc/profile  # 验证[root@db01 bin]# mysql -Vmysql  Ver 14.14 Distrib 5.7.28, for linux-glibc2.12 (x86_64) using  EditLine wrapper6.2.5 清理遗留环境 # 检查是否有mariadb相关软件[root@db01 ~]# rpm -qa|grep mariadb# 如果有，清理掉 yum remove mariadb-libs -y # 删掉/etc/my.cnf 已有的配置文件 rm -rf /etc/my.cnf 6.2.6 安装依赖包 [root@db01 ~]# yum install -y libaio-devel 6.2.7 创建相关目录、用户，并做授权[root@db01 ~]# mkdir -p /data/3306/data [root@db01 ~]# useradd mysql [root@db01 ~]# chown -R mysql.mysql /data6.2.8 初始化数据# 5.7+ 版本初始化 ：mysqld       --initialize-insecure      --user=mysql      --basedir=/data/app/mysql        --datadir=/data/3306/data 有可能的报错：     1. libaio-devel     2.  [ERROR] --initialize specified but the data directory has files in it. Aborting.    rm -rf /data/3306/data/*6.2.9 准备配置文件 vim /etc/my.cnf [mysqld]user=mysqlbasedir=/data/app/mysqldatadir=/data/3306/datasocket=/tmp/mysql.sock[mysql]socket=/tmp/mysql.sock6.2.10 准备启动脚本，启动数据库[root@db01 data]# cp /data/app/mysql/support-files/mysql.server  /etc/init.d/mysqld [root@db01 data]# chkconfig --add mysqld[root@db01 data]# systemctl start mysqld彩蛋：       1. 5.6 和 5.7 在初始化方面的不同？    5.6 版本：          /data/app/mysql56/scripts/mysql_install_db   --user=mysql --basedir=/data/app/mysql --datadir=/data/3306/data     初始化完成之后，启动数据库，无密码登陆    5.7 版本：          mysqld   --initialize-insecure   --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data    初始化完成之后，启动数据库，无密码登陆    2. 5.7+ 两种初始化方式     （1） --initialize-insecure （不安全）     mysqld   --initialize-insecure   --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data     结果： 初始化完成之后，启动数据库，无密码登陆    （2） --initialize （安全）     mysqld   --initialize    --user=mysql   --basedir=/data/app/mysql  --datadir=/data/3306/data     结果： 初始化完成之后，生成临时密码（4种复杂度、12位），不能用作管理数据库，需要第一次使用之前改掉这个密码。     mysql -uroot -p     Enter password: 此处填写临时密码：     2020-04-21T06:49:15.881987Z 1 [Note] A temporary password is generated for root@localhost: +fCQiY1x:rH-     mysql&gt; alter user root@&#39;localhost&#39; identified by &#39;123&#39;;    [root@db01 data]# mysql -uroot -p123    3. 设置管理员初始密码    [root@db01 data]# mysqladmin     -uroot     -p   password      123    4. 编译安装：源码包       cmake        make         make install        什么时候用？        测试、调试。       二次开发---》 编译安装        定制---》源码包或者配置文件。       定制rpm包---》源码包第一章节作业：      1. 部署5.6版本    2. 部署8.0版本第二章节 MySQL体系结构及基础管理1. MySQL 的C/S模型工作结构Client：     自带命令    第三方工具    APIServer :     TCP/IP    Unix Socket2. MySQL 的实例结构实例： mysqld进程 + Master thread + worker thread(IO\SQL\Purge...)+ 预分配内存结构公司： BOSS + 经理 + 员工 + 办公区域   3. mysqld 核心程序工作原理3.1  server 层      ----&gt; Linux  OS3.1.1 连接器 3.1.2 SQL层3.2  engine 层      ----&gt; 文件系统</code></pre><p><img src="image-20200423083500092.png" alt="image-20200423083500092"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
